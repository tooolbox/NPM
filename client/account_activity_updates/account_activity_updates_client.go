// Code generated by go-swagger; DO NOT EDIT.

package account_activity_updates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new account activity updates API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for account activity updates API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	AsmHistoryUpdateV1FvEmea(params *AsmHistoryUpdateV1FvEmeaParams) (*AsmHistoryUpdateV1FvEmeaOK, error)

	MemoAddV1FvEmea(params *MemoAddV1FvEmeaParams) (*MemoAddV1FvEmeaOK, error)

	MemoInquiryV1FvEmea(params *MemoInquiryV1FvEmeaParams) (*MemoInquiryV1FvEmeaOK, error)

	TranscriptUpdateV1FvEmea(params *TranscriptUpdateV1FvEmeaParams) (*TranscriptUpdateV1FvEmeaOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  AsmHistoryUpdateV1FvEmea asms history update

  This service is used to add memos for a cardholder which gets stored at First Vision customer service module (ASM) and these memo details can be retrieved whenever required using the appropriate API. As part of request, client must send the account or card number and action code.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) AsmHistoryUpdateV1FvEmea(params *AsmHistoryUpdateV1FvEmeaParams) (*AsmHistoryUpdateV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAsmHistoryUpdateV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "asmHistoryUpdate_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/asmHistoryUpdate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AsmHistoryUpdateV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AsmHistoryUpdateV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for asmHistoryUpdate_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  MemoAddV1FvEmea memos add

  The ASM Memo Add service will add a memo note to a customers account, which can then be viewed by agents servicing the account in the future . <BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) MemoAddV1FvEmea(params *MemoAddV1FvEmeaParams) (*MemoAddV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewMemoAddV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "memoAdd_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/memoAdd",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &MemoAddV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*MemoAddV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for memoAdd_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  MemoInquiryV1FvEmea memos inquiry

  The ASM Memo Inquiry retrieves a list of ASM memos in date order for the requested Account or Card Number.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) MemoInquiryV1FvEmea(params *MemoInquiryV1FvEmeaParams) (*MemoInquiryV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewMemoInquiryV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "memoInquiry_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/memoInquiry",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &MemoInquiryV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*MemoInquiryV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for memoInquiry_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TranscriptUpdateV1FvEmea transcripts update

  The Transcript Action Code (ASM) service provides the ability to externally add or reverse financial input to an account<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) TranscriptUpdateV1FvEmea(params *TranscriptUpdateV1FvEmeaParams) (*TranscriptUpdateV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTranscriptUpdateV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "transcriptUpdate_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/transcriptUpdate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TranscriptUpdateV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*TranscriptUpdateV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for transcriptUpdate_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
