// Code generated by go-swagger; DO NOT EDIT.

package insurance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// InsuranceInquiryV2FvEmeaReader is a Reader for the InsuranceInquiryV2FvEmea structure.
type InsuranceInquiryV2FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InsuranceInquiryV2FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInsuranceInquiryV2FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewInsuranceInquiryV2FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewInsuranceInquiryV2FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewInsuranceInquiryV2FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInsuranceInquiryV2FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewInsuranceInquiryV2FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewInsuranceInquiryV2FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewInsuranceInquiryV2FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewInsuranceInquiryV2FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 465:
		result := NewInsuranceInquiryV2FvEmeaStatus465()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewInsuranceInquiryV2FvEmeaOK creates a InsuranceInquiryV2FvEmeaOK with default headers values
func NewInsuranceInquiryV2FvEmeaOK() *InsuranceInquiryV2FvEmeaOK {
	return &InsuranceInquiryV2FvEmeaOK{}
}

/*InsuranceInquiryV2FvEmeaOK handles this case with default header values.

successful operation
*/
type InsuranceInquiryV2FvEmeaOK struct {
	Payload *models.InsuranceInquiryResponse2
}

func (o *InsuranceInquiryV2FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/insuranceInquiry][%d] insuranceInquiryV2FvEmeaOK  %+v", 200, o.Payload)
}

func (o *InsuranceInquiryV2FvEmeaOK) GetPayload() *models.InsuranceInquiryResponse2 {
	return o.Payload
}

func (o *InsuranceInquiryV2FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InsuranceInquiryResponse2)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInsuranceInquiryV2FvEmeaBadRequest creates a InsuranceInquiryV2FvEmeaBadRequest with default headers values
func NewInsuranceInquiryV2FvEmeaBadRequest() *InsuranceInquiryV2FvEmeaBadRequest {
	return &InsuranceInquiryV2FvEmeaBadRequest{}
}

/*InsuranceInquiryV2FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type InsuranceInquiryV2FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *InsuranceInquiryV2FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/insuranceInquiry][%d] insuranceInquiryV2FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *InsuranceInquiryV2FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *InsuranceInquiryV2FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInsuranceInquiryV2FvEmeaUnauthorized creates a InsuranceInquiryV2FvEmeaUnauthorized with default headers values
func NewInsuranceInquiryV2FvEmeaUnauthorized() *InsuranceInquiryV2FvEmeaUnauthorized {
	return &InsuranceInquiryV2FvEmeaUnauthorized{}
}

/*InsuranceInquiryV2FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type InsuranceInquiryV2FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *InsuranceInquiryV2FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/insuranceInquiry][%d] insuranceInquiryV2FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *InsuranceInquiryV2FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *InsuranceInquiryV2FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInsuranceInquiryV2FvEmeaForbidden creates a InsuranceInquiryV2FvEmeaForbidden with default headers values
func NewInsuranceInquiryV2FvEmeaForbidden() *InsuranceInquiryV2FvEmeaForbidden {
	return &InsuranceInquiryV2FvEmeaForbidden{}
}

/*InsuranceInquiryV2FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type InsuranceInquiryV2FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *InsuranceInquiryV2FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/insuranceInquiry][%d] insuranceInquiryV2FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *InsuranceInquiryV2FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *InsuranceInquiryV2FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInsuranceInquiryV2FvEmeaNotFound creates a InsuranceInquiryV2FvEmeaNotFound with default headers values
func NewInsuranceInquiryV2FvEmeaNotFound() *InsuranceInquiryV2FvEmeaNotFound {
	return &InsuranceInquiryV2FvEmeaNotFound{}
}

/*InsuranceInquiryV2FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type InsuranceInquiryV2FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *InsuranceInquiryV2FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/insuranceInquiry][%d] insuranceInquiryV2FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *InsuranceInquiryV2FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *InsuranceInquiryV2FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInsuranceInquiryV2FvEmeaTooManyRequests creates a InsuranceInquiryV2FvEmeaTooManyRequests with default headers values
func NewInsuranceInquiryV2FvEmeaTooManyRequests() *InsuranceInquiryV2FvEmeaTooManyRequests {
	return &InsuranceInquiryV2FvEmeaTooManyRequests{}
}

/*InsuranceInquiryV2FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type InsuranceInquiryV2FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *InsuranceInquiryV2FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/insuranceInquiry][%d] insuranceInquiryV2FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *InsuranceInquiryV2FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *InsuranceInquiryV2FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInsuranceInquiryV2FvEmeaStatus452 creates a InsuranceInquiryV2FvEmeaStatus452 with default headers values
func NewInsuranceInquiryV2FvEmeaStatus452() *InsuranceInquiryV2FvEmeaStatus452 {
	return &InsuranceInquiryV2FvEmeaStatus452{}
}

/*InsuranceInquiryV2FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type InsuranceInquiryV2FvEmeaStatus452 struct {
}

func (o *InsuranceInquiryV2FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/insuranceInquiry][%d] insuranceInquiryV2FvEmeaStatus452 ", 452)
}

func (o *InsuranceInquiryV2FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsuranceInquiryV2FvEmeaStatus453 creates a InsuranceInquiryV2FvEmeaStatus453 with default headers values
func NewInsuranceInquiryV2FvEmeaStatus453() *InsuranceInquiryV2FvEmeaStatus453 {
	return &InsuranceInquiryV2FvEmeaStatus453{}
}

/*InsuranceInquiryV2FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type InsuranceInquiryV2FvEmeaStatus453 struct {
}

func (o *InsuranceInquiryV2FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/insuranceInquiry][%d] insuranceInquiryV2FvEmeaStatus453 ", 453)
}

func (o *InsuranceInquiryV2FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsuranceInquiryV2FvEmeaStatus455 creates a InsuranceInquiryV2FvEmeaStatus455 with default headers values
func NewInsuranceInquiryV2FvEmeaStatus455() *InsuranceInquiryV2FvEmeaStatus455 {
	return &InsuranceInquiryV2FvEmeaStatus455{}
}

/*InsuranceInquiryV2FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type InsuranceInquiryV2FvEmeaStatus455 struct {
}

func (o *InsuranceInquiryV2FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/insuranceInquiry][%d] insuranceInquiryV2FvEmeaStatus455 ", 455)
}

func (o *InsuranceInquiryV2FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsuranceInquiryV2FvEmeaStatus465 creates a InsuranceInquiryV2FvEmeaStatus465 with default headers values
func NewInsuranceInquiryV2FvEmeaStatus465() *InsuranceInquiryV2FvEmeaStatus465 {
	return &InsuranceInquiryV2FvEmeaStatus465{}
}

/*InsuranceInquiryV2FvEmeaStatus465 handles this case with default header values.

Backend Response Code and message in odsMessages field: <BR/><BR/>VPE5SIIZ1S : SERVICE COULD NOT OBTAIN STORAGE AREA<BR/>VPE5SIIZ2S : SERVICE INPUT TO IorI SERVICE IS AN INCORRECT LENGTH<BR/>VPE5SIIZ3S : FILE-TABLE USED BY THIS SERVICE IS MISSING<BR/>VPE5SII04S : CMS IS NO-PROCESSING STATE RE-TRY REQUEST IN A FEW MINUTES<BR/>VPE5SII01E : ORG NUMBER MUST BE NUMERIC.VALID VALUES ARE 001-998<BR/>VPE5SII02S : ACCOUNTorCARD NUMBER IS NOT NUMERIC OR EQUALS SPACES<BR/>VPE5SII03E : INVALID LOCALorFOREIGN IND SPECIFIED-VALID VALUES ARE SPACE 0 OR 1<BR/>VPE5SII14I : NBR OF INSURANCE PRODUCT FOR THIS ACCOUNT IS ZERO<BR/>VPE5SII15I : NBR OF INSURANCE PRODUCT FOR THIS ACCOUNT IS GREATER THAN 6<BR/>VPE5SIIZ4S : ORGANIZATION NOT DETERMINED<BR/>VPE5SIIZ5S : REQUESTED ORGANIZATION NUMBER IS NOT FOUND<BR/>VPE5SIIZ6S : FILE-TABLE USED BY THIS SERVICE IS MISSING<BR/>VPE5SII04S : CMS IS NO-PROCESSING STATE RE-TRY REQUEST IN A FEW MINUTES<BR/>VPE5SII05S : ORGANIZATION NUMBER NOT FOUND<BR/>VPE5SII06S : FOREIGN ORGANIZATION NUMBER NOT FOUND<BR/>VPE5SIIZ7S : ACCOUNT FILE NOT OPEN<BR/>VPE5SII07S : CARDorACCOUNT NUMBER NOT FOUND<BR/>VPE5SII08S : LOGO NUMBER NOT FOUND<BR/>VPE5SIIZ8S : INSURANCE PRODUCT FILE NOT OPEN<BR/>VPE5SII09S : ACCOUNT NUMBER NOT FOUND IN INSURANCE PRODUCT FILE<BR/>VPE5SII16S : NAME AND ADDRESS FILE NOT OPEN<BR/>VPE5SII14S : CUSTOMER NUMBER NOT FOUND<BR/>VPE5SII15S : ERROR ACCESSING NAME AND ADDRESS FILE<BR/>VPE5SII10S : RATE TABLE FILE NOT FOUND OR IN INS ADD PENDING STATUS<BR/>VPE5SII11S : RATE TABLE FILE NOT FOUND OR IN PRODUCT ADD PENDING STATUS<BR/>VPE5SII12S : RATE TABLE FILE NOT FOUND OR IN INS ADD PENDING STATU
*/
type InsuranceInquiryV2FvEmeaStatus465 struct {
	Payload *models.FsErrorDetails
}

func (o *InsuranceInquiryV2FvEmeaStatus465) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/insuranceInquiry][%d] insuranceInquiryV2FvEmeaStatus465  %+v", 465, o.Payload)
}

func (o *InsuranceInquiryV2FvEmeaStatus465) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *InsuranceInquiryV2FvEmeaStatus465) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
