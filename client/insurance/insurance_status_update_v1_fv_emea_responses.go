// Code generated by go-swagger; DO NOT EDIT.

package insurance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// InsuranceStatusUpdateV1FvEmeaReader is a Reader for the InsuranceStatusUpdateV1FvEmea structure.
type InsuranceStatusUpdateV1FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InsuranceStatusUpdateV1FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInsuranceStatusUpdateV1FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewInsuranceStatusUpdateV1FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewInsuranceStatusUpdateV1FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewInsuranceStatusUpdateV1FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInsuranceStatusUpdateV1FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewInsuranceStatusUpdateV1FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewInsuranceStatusUpdateV1FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewInsuranceStatusUpdateV1FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewInsuranceStatusUpdateV1FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 465:
		result := NewInsuranceStatusUpdateV1FvEmeaStatus465()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewInsuranceStatusUpdateV1FvEmeaOK creates a InsuranceStatusUpdateV1FvEmeaOK with default headers values
func NewInsuranceStatusUpdateV1FvEmeaOK() *InsuranceStatusUpdateV1FvEmeaOK {
	return &InsuranceStatusUpdateV1FvEmeaOK{}
}

/*InsuranceStatusUpdateV1FvEmeaOK handles this case with default header values.

successful operation
*/
type InsuranceStatusUpdateV1FvEmeaOK struct {
	Payload *models.InsuranceStatusUpdateResponse
}

func (o *InsuranceStatusUpdateV1FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/insuranceStatusUpdate][%d] insuranceStatusUpdateV1FvEmeaOK  %+v", 200, o.Payload)
}

func (o *InsuranceStatusUpdateV1FvEmeaOK) GetPayload() *models.InsuranceStatusUpdateResponse {
	return o.Payload
}

func (o *InsuranceStatusUpdateV1FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InsuranceStatusUpdateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInsuranceStatusUpdateV1FvEmeaBadRequest creates a InsuranceStatusUpdateV1FvEmeaBadRequest with default headers values
func NewInsuranceStatusUpdateV1FvEmeaBadRequest() *InsuranceStatusUpdateV1FvEmeaBadRequest {
	return &InsuranceStatusUpdateV1FvEmeaBadRequest{}
}

/*InsuranceStatusUpdateV1FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type InsuranceStatusUpdateV1FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *InsuranceStatusUpdateV1FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/insuranceStatusUpdate][%d] insuranceStatusUpdateV1FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *InsuranceStatusUpdateV1FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *InsuranceStatusUpdateV1FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInsuranceStatusUpdateV1FvEmeaUnauthorized creates a InsuranceStatusUpdateV1FvEmeaUnauthorized with default headers values
func NewInsuranceStatusUpdateV1FvEmeaUnauthorized() *InsuranceStatusUpdateV1FvEmeaUnauthorized {
	return &InsuranceStatusUpdateV1FvEmeaUnauthorized{}
}

/*InsuranceStatusUpdateV1FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type InsuranceStatusUpdateV1FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *InsuranceStatusUpdateV1FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/insuranceStatusUpdate][%d] insuranceStatusUpdateV1FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *InsuranceStatusUpdateV1FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *InsuranceStatusUpdateV1FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInsuranceStatusUpdateV1FvEmeaForbidden creates a InsuranceStatusUpdateV1FvEmeaForbidden with default headers values
func NewInsuranceStatusUpdateV1FvEmeaForbidden() *InsuranceStatusUpdateV1FvEmeaForbidden {
	return &InsuranceStatusUpdateV1FvEmeaForbidden{}
}

/*InsuranceStatusUpdateV1FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type InsuranceStatusUpdateV1FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *InsuranceStatusUpdateV1FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/insuranceStatusUpdate][%d] insuranceStatusUpdateV1FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *InsuranceStatusUpdateV1FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *InsuranceStatusUpdateV1FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInsuranceStatusUpdateV1FvEmeaNotFound creates a InsuranceStatusUpdateV1FvEmeaNotFound with default headers values
func NewInsuranceStatusUpdateV1FvEmeaNotFound() *InsuranceStatusUpdateV1FvEmeaNotFound {
	return &InsuranceStatusUpdateV1FvEmeaNotFound{}
}

/*InsuranceStatusUpdateV1FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type InsuranceStatusUpdateV1FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *InsuranceStatusUpdateV1FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/insuranceStatusUpdate][%d] insuranceStatusUpdateV1FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *InsuranceStatusUpdateV1FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *InsuranceStatusUpdateV1FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInsuranceStatusUpdateV1FvEmeaTooManyRequests creates a InsuranceStatusUpdateV1FvEmeaTooManyRequests with default headers values
func NewInsuranceStatusUpdateV1FvEmeaTooManyRequests() *InsuranceStatusUpdateV1FvEmeaTooManyRequests {
	return &InsuranceStatusUpdateV1FvEmeaTooManyRequests{}
}

/*InsuranceStatusUpdateV1FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type InsuranceStatusUpdateV1FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *InsuranceStatusUpdateV1FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/insuranceStatusUpdate][%d] insuranceStatusUpdateV1FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *InsuranceStatusUpdateV1FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *InsuranceStatusUpdateV1FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInsuranceStatusUpdateV1FvEmeaStatus452 creates a InsuranceStatusUpdateV1FvEmeaStatus452 with default headers values
func NewInsuranceStatusUpdateV1FvEmeaStatus452() *InsuranceStatusUpdateV1FvEmeaStatus452 {
	return &InsuranceStatusUpdateV1FvEmeaStatus452{}
}

/*InsuranceStatusUpdateV1FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type InsuranceStatusUpdateV1FvEmeaStatus452 struct {
}

func (o *InsuranceStatusUpdateV1FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/insuranceStatusUpdate][%d] insuranceStatusUpdateV1FvEmeaStatus452 ", 452)
}

func (o *InsuranceStatusUpdateV1FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsuranceStatusUpdateV1FvEmeaStatus453 creates a InsuranceStatusUpdateV1FvEmeaStatus453 with default headers values
func NewInsuranceStatusUpdateV1FvEmeaStatus453() *InsuranceStatusUpdateV1FvEmeaStatus453 {
	return &InsuranceStatusUpdateV1FvEmeaStatus453{}
}

/*InsuranceStatusUpdateV1FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type InsuranceStatusUpdateV1FvEmeaStatus453 struct {
}

func (o *InsuranceStatusUpdateV1FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/insuranceStatusUpdate][%d] insuranceStatusUpdateV1FvEmeaStatus453 ", 453)
}

func (o *InsuranceStatusUpdateV1FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsuranceStatusUpdateV1FvEmeaStatus455 creates a InsuranceStatusUpdateV1FvEmeaStatus455 with default headers values
func NewInsuranceStatusUpdateV1FvEmeaStatus455() *InsuranceStatusUpdateV1FvEmeaStatus455 {
	return &InsuranceStatusUpdateV1FvEmeaStatus455{}
}

/*InsuranceStatusUpdateV1FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type InsuranceStatusUpdateV1FvEmeaStatus455 struct {
}

func (o *InsuranceStatusUpdateV1FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/insuranceStatusUpdate][%d] insuranceStatusUpdateV1FvEmeaStatus455 ", 455)
}

func (o *InsuranceStatusUpdateV1FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInsuranceStatusUpdateV1FvEmeaStatus465 creates a InsuranceStatusUpdateV1FvEmeaStatus465 with default headers values
func NewInsuranceStatusUpdateV1FvEmeaStatus465() *InsuranceStatusUpdateV1FvEmeaStatus465 {
	return &InsuranceStatusUpdateV1FvEmeaStatus465{}
}

/*InsuranceStatusUpdateV1FvEmeaStatus465 handles this case with default header values.

Backend Response Code and message in odsMessages field: <BR/><BR/>VPL5SIU01E : INVALID ORG FORMATVALID VALUES ARE SPACES000 TO 998<BR/>VPL5SIU02E : ACCOUNTorCARD NUMBER SHOULD BE PROVIDED AND BE NUMERIC<BR/>VPL5SIU03E : INVALID FOREIGN USE IND VALID VALUES ARE SPACES0 OR 1<BR/>VPL5SIU04E : INSURANCE PRODUCT CODE CANNOT BE BLANK<BR/>VPL5SIU05E : ACTION CODE CANNOT BE BLANK PLZ RE-ENTER<BR/>VPL5SIU06E : INVALID ACTION CODE VALID VALUES ARE CFIS. PLZ RE-ENTER<BR/>VPL5SIU07E : CANCEL REASON CODE CANNOT BE BLANK WHEN THE ACTION CODE IS 'C'<BR/>VPL5SIU08E : WHEN CANCEL RSN IS ENTERED STATUS MUST BE C<BR/>VPL5SIU09I : ACTION CODE TO BE TAKEN CANNOT BE THE SAME AS THE ORIGINAL CODE<BR/>VPL5SIU10S : INSURANCE TABLE NOT FOUND<BR/>VPL5SIU11S : ENROLLMENT INS RECORD NOT FOUND<BR/>VPL5SIU12S : ENROLLMENT INS RECORD NOT FOUND-USING DEFAULT<BR/>VPL5SIU14S : INSURANCE TABLE CANNOT BE FOUND USING DEFAULT<BR/>VPL5SIU15S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES<BR/>VPL5SIU16S : ORG RECORD NOT FOUND<BR/>VPL5SIU17S : ORG NUMBER NOT FOUND<BR/>VPL5SIU18S : ACCOUNTorCARD NOT FOUND<BR/>VPL5SIU19S : LOGO RECORD NOT FOUND<BR/>VPL5SIU20S : RECORD CANNOT BE FOUND IN INSURANCE FILE<BR/>VPL5SIUZ1S : SERVICE COULD NOT OBTAIN STORAGE AREA<BR/>VPL5SIUZ2S : SERVICE INPUT TO INSURANCE UPD SERVICE IS AN INCORRECT LENGTH<BR/>VPL5SIUZ3S : FILE TABLE USED BY THIS SERVICE IS MISSING<BR/>VPL5SIUZ4S : ACCOUNTorCARD NUMBER IS INVALID FOR THE ORG PROVIDED<BR/>VPL5SIUZ5S : REQUESTED ORGANIZATION COULD NOT DETERMINED<BR/>VPL5SIUZ6S : FILE TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPL5SIUZ7S : APPLICATION FILE IS NOT AVAILABLE<BR/>VPL5SIUZ8S : APPLICATION FILE IS NOT AVAILABLE<BR/>VPL5SIU51E : INSURANCE POLICY REF NBR SHOULD BE SPACES FOR CREDIT INS PRODUCT<BR/>VPL5SIU52E : INSURANCE POLICY REF NBR SHOULD NOT BE SPACES FOR NON INS PRODUCT<BR/>VPL5SIU22E : DATE CANNOT BE IN FUTURE<BR/>VPL5SIU23E : SALES DATE CANNOT BE ZERO<BR/>VPL5SIU10E : INS CANCL NOT ALWD IN RSTRICTED PERIOD TRY AFT PRODUCT RENEW<BR/>VPL5SIU11E : ENTER VALUE F WHEN INS IS PENDING CANCELLATIO
*/
type InsuranceStatusUpdateV1FvEmeaStatus465 struct {
	Payload *models.FsErrorDetails
}

func (o *InsuranceStatusUpdateV1FvEmeaStatus465) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/insuranceStatusUpdate][%d] insuranceStatusUpdateV1FvEmeaStatus465  %+v", 465, o.Payload)
}

func (o *InsuranceStatusUpdateV1FvEmeaStatus465) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *InsuranceStatusUpdateV1FvEmeaStatus465) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
