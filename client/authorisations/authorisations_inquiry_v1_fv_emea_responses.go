// Code generated by go-swagger; DO NOT EDIT.

package authorisations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// AuthorisationsInquiryV1FvEmeaReader is a Reader for the AuthorisationsInquiryV1FvEmea structure.
type AuthorisationsInquiryV1FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AuthorisationsInquiryV1FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAuthorisationsInquiryV1FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAuthorisationsInquiryV1FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAuthorisationsInquiryV1FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAuthorisationsInquiryV1FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAuthorisationsInquiryV1FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewAuthorisationsInquiryV1FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewAuthorisationsInquiryV1FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewAuthorisationsInquiryV1FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewAuthorisationsInquiryV1FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 465:
		result := NewAuthorisationsInquiryV1FvEmeaStatus465()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAuthorisationsInquiryV1FvEmeaOK creates a AuthorisationsInquiryV1FvEmeaOK with default headers values
func NewAuthorisationsInquiryV1FvEmeaOK() *AuthorisationsInquiryV1FvEmeaOK {
	return &AuthorisationsInquiryV1FvEmeaOK{}
}

/*AuthorisationsInquiryV1FvEmeaOK handles this case with default header values.

successful operation
*/
type AuthorisationsInquiryV1FvEmeaOK struct {
	Payload *models.AuthorisationsInquiryResponse
}

func (o *AuthorisationsInquiryV1FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/authorisationsInquiry][%d] authorisationsInquiryV1FvEmeaOK  %+v", 200, o.Payload)
}

func (o *AuthorisationsInquiryV1FvEmeaOK) GetPayload() *models.AuthorisationsInquiryResponse {
	return o.Payload
}

func (o *AuthorisationsInquiryV1FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthorisationsInquiryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthorisationsInquiryV1FvEmeaBadRequest creates a AuthorisationsInquiryV1FvEmeaBadRequest with default headers values
func NewAuthorisationsInquiryV1FvEmeaBadRequest() *AuthorisationsInquiryV1FvEmeaBadRequest {
	return &AuthorisationsInquiryV1FvEmeaBadRequest{}
}

/*AuthorisationsInquiryV1FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type AuthorisationsInquiryV1FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *AuthorisationsInquiryV1FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/authorisationsInquiry][%d] authorisationsInquiryV1FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *AuthorisationsInquiryV1FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AuthorisationsInquiryV1FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthorisationsInquiryV1FvEmeaUnauthorized creates a AuthorisationsInquiryV1FvEmeaUnauthorized with default headers values
func NewAuthorisationsInquiryV1FvEmeaUnauthorized() *AuthorisationsInquiryV1FvEmeaUnauthorized {
	return &AuthorisationsInquiryV1FvEmeaUnauthorized{}
}

/*AuthorisationsInquiryV1FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type AuthorisationsInquiryV1FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *AuthorisationsInquiryV1FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/authorisationsInquiry][%d] authorisationsInquiryV1FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *AuthorisationsInquiryV1FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AuthorisationsInquiryV1FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthorisationsInquiryV1FvEmeaForbidden creates a AuthorisationsInquiryV1FvEmeaForbidden with default headers values
func NewAuthorisationsInquiryV1FvEmeaForbidden() *AuthorisationsInquiryV1FvEmeaForbidden {
	return &AuthorisationsInquiryV1FvEmeaForbidden{}
}

/*AuthorisationsInquiryV1FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type AuthorisationsInquiryV1FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *AuthorisationsInquiryV1FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/authorisationsInquiry][%d] authorisationsInquiryV1FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *AuthorisationsInquiryV1FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AuthorisationsInquiryV1FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthorisationsInquiryV1FvEmeaNotFound creates a AuthorisationsInquiryV1FvEmeaNotFound with default headers values
func NewAuthorisationsInquiryV1FvEmeaNotFound() *AuthorisationsInquiryV1FvEmeaNotFound {
	return &AuthorisationsInquiryV1FvEmeaNotFound{}
}

/*AuthorisationsInquiryV1FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type AuthorisationsInquiryV1FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *AuthorisationsInquiryV1FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/authorisationsInquiry][%d] authorisationsInquiryV1FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *AuthorisationsInquiryV1FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AuthorisationsInquiryV1FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthorisationsInquiryV1FvEmeaTooManyRequests creates a AuthorisationsInquiryV1FvEmeaTooManyRequests with default headers values
func NewAuthorisationsInquiryV1FvEmeaTooManyRequests() *AuthorisationsInquiryV1FvEmeaTooManyRequests {
	return &AuthorisationsInquiryV1FvEmeaTooManyRequests{}
}

/*AuthorisationsInquiryV1FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type AuthorisationsInquiryV1FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *AuthorisationsInquiryV1FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/authorisationsInquiry][%d] authorisationsInquiryV1FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *AuthorisationsInquiryV1FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AuthorisationsInquiryV1FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthorisationsInquiryV1FvEmeaStatus452 creates a AuthorisationsInquiryV1FvEmeaStatus452 with default headers values
func NewAuthorisationsInquiryV1FvEmeaStatus452() *AuthorisationsInquiryV1FvEmeaStatus452 {
	return &AuthorisationsInquiryV1FvEmeaStatus452{}
}

/*AuthorisationsInquiryV1FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type AuthorisationsInquiryV1FvEmeaStatus452 struct {
}

func (o *AuthorisationsInquiryV1FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/authorisationsInquiry][%d] authorisationsInquiryV1FvEmeaStatus452 ", 452)
}

func (o *AuthorisationsInquiryV1FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAuthorisationsInquiryV1FvEmeaStatus453 creates a AuthorisationsInquiryV1FvEmeaStatus453 with default headers values
func NewAuthorisationsInquiryV1FvEmeaStatus453() *AuthorisationsInquiryV1FvEmeaStatus453 {
	return &AuthorisationsInquiryV1FvEmeaStatus453{}
}

/*AuthorisationsInquiryV1FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type AuthorisationsInquiryV1FvEmeaStatus453 struct {
}

func (o *AuthorisationsInquiryV1FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/authorisationsInquiry][%d] authorisationsInquiryV1FvEmeaStatus453 ", 453)
}

func (o *AuthorisationsInquiryV1FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAuthorisationsInquiryV1FvEmeaStatus455 creates a AuthorisationsInquiryV1FvEmeaStatus455 with default headers values
func NewAuthorisationsInquiryV1FvEmeaStatus455() *AuthorisationsInquiryV1FvEmeaStatus455 {
	return &AuthorisationsInquiryV1FvEmeaStatus455{}
}

/*AuthorisationsInquiryV1FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type AuthorisationsInquiryV1FvEmeaStatus455 struct {
}

func (o *AuthorisationsInquiryV1FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/authorisationsInquiry][%d] authorisationsInquiryV1FvEmeaStatus455 ", 455)
}

func (o *AuthorisationsInquiryV1FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAuthorisationsInquiryV1FvEmeaStatus465 creates a AuthorisationsInquiryV1FvEmeaStatus465 with default headers values
func NewAuthorisationsInquiryV1FvEmeaStatus465() *AuthorisationsInquiryV1FvEmeaStatus465 {
	return &AuthorisationsInquiryV1FvEmeaStatus465{}
}

/*AuthorisationsInquiryV1FvEmeaStatus465 handles this case with default header values.

Backend Response Code and message in odsMessages field: <BR/><BR/>VPL7SOA01S : SERVICE COULD NOT OBTAIN STORAGE AREA<BR/>VPL7SOA02S : SERVICE INPUT TO ACCOUNT INQ SERVICE IS AN INCORRECT LENGTH<BR/>VPL7SOA04S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPL7SOA05S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES<BR/>VPL7SOA06E : ORGANIZATION IS NOT NUMERIC OR MUST BE VALUE BETWEEN 000 AND 998<BR/>VPL7SOA07E : ACCOUNT NUMBER IS INVALID<BR/>VPL7SOA08E : START TOKEN EFFECTIVE DATE REQUIRED WHEN FUNCTION IS NEXTorPREV<BR/>VPL7SOA09E : START TOKEN EFFECTIVE DATE IS INVALID<BR/>VPL7SOA10E : START TOKEN TIME REQUIRED WHEN FUNCTION IS NEXTorPREV<BR/>VPL7SOA11E : START TOKEN TIME IS INVALID<BR/>VPL7SOA12E : FOREIGN USE FLAG IS INVALID<BR/>VPL7SOA13E : SERVICE FUNCTION CODE IS INVALID<BR/>VPL7SOA14E : FAS CORE AREA NOT INITIALIZED<BR/>VPL7SOA15S : REQUESTED ORGANIZATION COULD NOT BE DETERMINED<BR/>VPL7SOA16S : REQUESTED ORGANIZATION NOT FOUND<BR/>VPL7SOA17S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPL7SOA18S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES<BR/>VPL7SOA19S : ORGANIZATION NOT FOUND ON FILE<BR/>VPL7SOA20I : FOREIGN USE ORG UNAVAILABLE PROCESSED LOCAL ORG ACCOUNT DATA<BR/>VPL7SOA21S : FOREIGN ORGANIZATION NOT FOUND ON FILE<BR/>VPL7SOA22S : ACCOUNT NUMBER NOT FOUND<BR/>VPL7SOA23S : LOGO NOT FOUND ON FILE<BR/>VPL7SOA24S : LOGO NOT FOUND ON FILE<BR/>VPL7SOA25S : FAS REASON DESCRIPTION RECORD NOT FOUND<BR/>VPL7SOA26I : END OF CARD ACTIVITY FILE HAS BEEN REACHE
*/
type AuthorisationsInquiryV1FvEmeaStatus465 struct {
	Payload *models.FsErrorDetails
}

func (o *AuthorisationsInquiryV1FvEmeaStatus465) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/authorisationsInquiry][%d] authorisationsInquiryV1FvEmeaStatus465  %+v", 465, o.Payload)
}

func (o *AuthorisationsInquiryV1FvEmeaStatus465) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AuthorisationsInquiryV1FvEmeaStatus465) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
