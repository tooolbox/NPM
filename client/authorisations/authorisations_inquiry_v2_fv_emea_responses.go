// Code generated by go-swagger; DO NOT EDIT.

package authorisations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// AuthorisationsInquiryV2FvEmeaReader is a Reader for the AuthorisationsInquiryV2FvEmea structure.
type AuthorisationsInquiryV2FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AuthorisationsInquiryV2FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAuthorisationsInquiryV2FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAuthorisationsInquiryV2FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAuthorisationsInquiryV2FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAuthorisationsInquiryV2FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAuthorisationsInquiryV2FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewAuthorisationsInquiryV2FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewAuthorisationsInquiryV2FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewAuthorisationsInquiryV2FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewAuthorisationsInquiryV2FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 465:
		result := NewAuthorisationsInquiryV2FvEmeaStatus465()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAuthorisationsInquiryV2FvEmeaOK creates a AuthorisationsInquiryV2FvEmeaOK with default headers values
func NewAuthorisationsInquiryV2FvEmeaOK() *AuthorisationsInquiryV2FvEmeaOK {
	return &AuthorisationsInquiryV2FvEmeaOK{}
}

/*AuthorisationsInquiryV2FvEmeaOK handles this case with default header values.

successful operation
*/
type AuthorisationsInquiryV2FvEmeaOK struct {
	Payload *models.AuthorisationsInquiryResponse2
}

func (o *AuthorisationsInquiryV2FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/authorisationsInquiry][%d] authorisationsInquiryV2FvEmeaOK  %+v", 200, o.Payload)
}

func (o *AuthorisationsInquiryV2FvEmeaOK) GetPayload() *models.AuthorisationsInquiryResponse2 {
	return o.Payload
}

func (o *AuthorisationsInquiryV2FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthorisationsInquiryResponse2)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthorisationsInquiryV2FvEmeaBadRequest creates a AuthorisationsInquiryV2FvEmeaBadRequest with default headers values
func NewAuthorisationsInquiryV2FvEmeaBadRequest() *AuthorisationsInquiryV2FvEmeaBadRequest {
	return &AuthorisationsInquiryV2FvEmeaBadRequest{}
}

/*AuthorisationsInquiryV2FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type AuthorisationsInquiryV2FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *AuthorisationsInquiryV2FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/authorisationsInquiry][%d] authorisationsInquiryV2FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *AuthorisationsInquiryV2FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AuthorisationsInquiryV2FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthorisationsInquiryV2FvEmeaUnauthorized creates a AuthorisationsInquiryV2FvEmeaUnauthorized with default headers values
func NewAuthorisationsInquiryV2FvEmeaUnauthorized() *AuthorisationsInquiryV2FvEmeaUnauthorized {
	return &AuthorisationsInquiryV2FvEmeaUnauthorized{}
}

/*AuthorisationsInquiryV2FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type AuthorisationsInquiryV2FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *AuthorisationsInquiryV2FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/authorisationsInquiry][%d] authorisationsInquiryV2FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *AuthorisationsInquiryV2FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AuthorisationsInquiryV2FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthorisationsInquiryV2FvEmeaForbidden creates a AuthorisationsInquiryV2FvEmeaForbidden with default headers values
func NewAuthorisationsInquiryV2FvEmeaForbidden() *AuthorisationsInquiryV2FvEmeaForbidden {
	return &AuthorisationsInquiryV2FvEmeaForbidden{}
}

/*AuthorisationsInquiryV2FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type AuthorisationsInquiryV2FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *AuthorisationsInquiryV2FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/authorisationsInquiry][%d] authorisationsInquiryV2FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *AuthorisationsInquiryV2FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AuthorisationsInquiryV2FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthorisationsInquiryV2FvEmeaNotFound creates a AuthorisationsInquiryV2FvEmeaNotFound with default headers values
func NewAuthorisationsInquiryV2FvEmeaNotFound() *AuthorisationsInquiryV2FvEmeaNotFound {
	return &AuthorisationsInquiryV2FvEmeaNotFound{}
}

/*AuthorisationsInquiryV2FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type AuthorisationsInquiryV2FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *AuthorisationsInquiryV2FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/authorisationsInquiry][%d] authorisationsInquiryV2FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *AuthorisationsInquiryV2FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AuthorisationsInquiryV2FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthorisationsInquiryV2FvEmeaTooManyRequests creates a AuthorisationsInquiryV2FvEmeaTooManyRequests with default headers values
func NewAuthorisationsInquiryV2FvEmeaTooManyRequests() *AuthorisationsInquiryV2FvEmeaTooManyRequests {
	return &AuthorisationsInquiryV2FvEmeaTooManyRequests{}
}

/*AuthorisationsInquiryV2FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type AuthorisationsInquiryV2FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *AuthorisationsInquiryV2FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/authorisationsInquiry][%d] authorisationsInquiryV2FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *AuthorisationsInquiryV2FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AuthorisationsInquiryV2FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthorisationsInquiryV2FvEmeaStatus452 creates a AuthorisationsInquiryV2FvEmeaStatus452 with default headers values
func NewAuthorisationsInquiryV2FvEmeaStatus452() *AuthorisationsInquiryV2FvEmeaStatus452 {
	return &AuthorisationsInquiryV2FvEmeaStatus452{}
}

/*AuthorisationsInquiryV2FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type AuthorisationsInquiryV2FvEmeaStatus452 struct {
}

func (o *AuthorisationsInquiryV2FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/authorisationsInquiry][%d] authorisationsInquiryV2FvEmeaStatus452 ", 452)
}

func (o *AuthorisationsInquiryV2FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAuthorisationsInquiryV2FvEmeaStatus453 creates a AuthorisationsInquiryV2FvEmeaStatus453 with default headers values
func NewAuthorisationsInquiryV2FvEmeaStatus453() *AuthorisationsInquiryV2FvEmeaStatus453 {
	return &AuthorisationsInquiryV2FvEmeaStatus453{}
}

/*AuthorisationsInquiryV2FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type AuthorisationsInquiryV2FvEmeaStatus453 struct {
}

func (o *AuthorisationsInquiryV2FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/authorisationsInquiry][%d] authorisationsInquiryV2FvEmeaStatus453 ", 453)
}

func (o *AuthorisationsInquiryV2FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAuthorisationsInquiryV2FvEmeaStatus455 creates a AuthorisationsInquiryV2FvEmeaStatus455 with default headers values
func NewAuthorisationsInquiryV2FvEmeaStatus455() *AuthorisationsInquiryV2FvEmeaStatus455 {
	return &AuthorisationsInquiryV2FvEmeaStatus455{}
}

/*AuthorisationsInquiryV2FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type AuthorisationsInquiryV2FvEmeaStatus455 struct {
}

func (o *AuthorisationsInquiryV2FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/authorisationsInquiry][%d] authorisationsInquiryV2FvEmeaStatus455 ", 455)
}

func (o *AuthorisationsInquiryV2FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAuthorisationsInquiryV2FvEmeaStatus465 creates a AuthorisationsInquiryV2FvEmeaStatus465 with default headers values
func NewAuthorisationsInquiryV2FvEmeaStatus465() *AuthorisationsInquiryV2FvEmeaStatus465 {
	return &AuthorisationsInquiryV2FvEmeaStatus465{}
}

/*AuthorisationsInquiryV2FvEmeaStatus465 handles this case with default header values.

Backend Response Code and message in odsMessages field: <BR/><BR/>VPL7SOA01S : SERVICE COULD NOT OBTAIN STORAGE AREA<BR/>VPL7SOA02S : SERVICE INPUT TO ACCOUNT INQ SERVICE IS AN INCORRECT LENGTH<BR/>VPL7SOA04S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPL7SOA05S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES<BR/>VPL7SOA06E : ORGANIZATION IS NOT NUMERIC OR MUST BE VALUE BETWEEN 000 AND 998<BR/>VPL7SOA07E : ACCOUNT NUMBER IS INVALID<BR/>VPL7SOA08E : START TOKEN EFFECTIVE DATE REQUIRED WHEN FUNCTION IS NEXTorPREV<BR/>VPL7SOA09E : START TOKEN EFFECTIVE DATE IS INVALID<BR/>VPL7SOA10E : START TOKEN TIME REQUIRED WHEN FUNCTION IS NEXTorPREV<BR/>VPL7SOA11E : START TOKEN TIME IS INVALID<BR/>VPL7SOA12E : FOREIGN USE FLAG IS INVALID<BR/>VPL7SOA13E : SERVICE FUNCTION CODE IS INVALID<BR/>VPL7SOA14E : FAS CORE AREA NOT INITIALIZED<BR/>VPL7SOA15S : REQUESTED ORGANIZATION COULD NOT BE DETERMINED<BR/>VPL7SOA16S : REQUESTED ORGANIZATION NOT FOUND<BR/>VPL7SOA17S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPL7SOA18S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES<BR/>VPL7SOA19S : ORGANIZATION NOT FOUND ON FILE<BR/>VPL7SOA20I : FOREIGN USE ORG UNAVAILABLE PROCESSED LOCAL ORG ACCOUNT DATA<BR/>VPL7SOA21S : FOREIGN ORGANIZATION NOT FOUND ON FILE<BR/>VPL7SOA22S : ACCOUNT NUMBER NOT FOUND<BR/>VPL7SOA23S : LOGO NOT FOUND ON FILE<BR/>VPL7SOA24S : LOGO NOT FOUND ON FILE<BR/>VPL7SOA25S : FAS REASON DESCRIPTION RECORD NOT FOUND<BR/>VPL7SOA26I : END OF CARD ACTIVITY FILE HAS BEEN REACHE
*/
type AuthorisationsInquiryV2FvEmeaStatus465 struct {
	Payload *models.FsErrorDetails
}

func (o *AuthorisationsInquiryV2FvEmeaStatus465) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/authorisationsInquiry][%d] authorisationsInquiryV2FvEmeaStatus465  %+v", 465, o.Payload)
}

func (o *AuthorisationsInquiryV2FvEmeaStatus465) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AuthorisationsInquiryV2FvEmeaStatus465) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
