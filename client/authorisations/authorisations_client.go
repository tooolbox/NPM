// Code generated by go-swagger; DO NOT EDIT.

package authorisations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new authorisations API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for authorisations API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	AuthorisationReversalandRequestV1FvEmea(params *AuthorisationReversalandRequestV1FvEmeaParams) (*AuthorisationReversalandRequestV1FvEmeaOK, error)

	AuthorisationsInquiryV1FvEmea(params *AuthorisationsInquiryV1FvEmeaParams) (*AuthorisationsInquiryV1FvEmeaOK, error)

	AuthorisationsInquiryV2FvEmea(params *AuthorisationsInquiryV2FvEmeaParams) (*AuthorisationsInquiryV2FvEmeaOK, error)

	OutstandingAuthorisationInquiryV1FvEmea(params *OutstandingAuthorisationInquiryV1FvEmeaParams) (*OutstandingAuthorisationInquiryV1FvEmeaOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  AuthorisationReversalandRequestV1FvEmea authorisations reversaland request

  This service supports the manual authorization and authorization reversal requests, performing all the required validations and return the appropriate approved or declined or reversed response to the calling service.
*/
func (a *Client) AuthorisationReversalandRequestV1FvEmea(params *AuthorisationReversalandRequestV1FvEmeaParams) (*AuthorisationReversalandRequestV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAuthorisationReversalandRequestV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "authorisationReversalandRequest_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/authorisationReversalandRequest",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AuthorisationReversalandRequestV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AuthorisationReversalandRequestV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for authorisationReversalandRequest_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AuthorisationsInquiryV1FvEmea authorisations inquiry

  This service is deprecated and will be supported until January 2021. Please change end points for this API to the new version v2 before this date. <BR/><BR/>Service to inquire on Outstanding Authorizations.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) AuthorisationsInquiryV1FvEmea(params *AuthorisationsInquiryV1FvEmeaParams) (*AuthorisationsInquiryV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAuthorisationsInquiryV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "authorisationsInquiry_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/authorisationsInquiry",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AuthorisationsInquiryV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AuthorisationsInquiryV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for authorisationsInquiry_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AuthorisationsInquiryV2FvEmea authorisations inquiry

  Service to inquire on Outstanding Authorizations.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) AuthorisationsInquiryV2FvEmea(params *AuthorisationsInquiryV2FvEmeaParams) (*AuthorisationsInquiryV2FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAuthorisationsInquiryV2FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "authorisationsInquiry_v2_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v2/authorisationsInquiry",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AuthorisationsInquiryV2FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AuthorisationsInquiryV2FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for authorisationsInquiry_v2_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OutstandingAuthorisationInquiryV1FvEmea outstandings authorisation inquiry

  The Authorisation Detail Inquiry service provides information on outstanding authorizations.<p><p>Note it will return a maximum of 50 transactions in a single request, however options in the request message allow the user to retrieve the rest of the transactions i.e. from 51st transaction if available using the continuation tag in the request.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) OutstandingAuthorisationInquiryV1FvEmea(params *OutstandingAuthorisationInquiryV1FvEmeaParams) (*OutstandingAuthorisationInquiryV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOutstandingAuthorisationInquiryV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "outstandingAuthorisationInquiry_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/outstandingAuthorisationInquiry",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OutstandingAuthorisationInquiryV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OutstandingAuthorisationInquiryV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for outstandingAuthorisationInquiry_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
