// Code generated by go-swagger; DO NOT EDIT.

package debit

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new debit API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for debit API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	BalanceUpdateV1FvEmea(params *BalanceUpdateV1FvEmeaParams) (*BalanceUpdateV1FvEmeaOK, error)

	DebitCardAvailableBalanceUpdateV1FvEmea(params *DebitCardAvailableBalanceUpdateV1FvEmeaParams) (*DebitCardAvailableBalanceUpdateV1FvEmeaOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  BalanceUpdateV1FvEmea balances update

  The service will process the credit limit updates for Debit Cards on the Account Base Segment file. The service will also update the available credit for relationship when the Credit limit is changed to any of the accounts tied to that  relationship. In addition, the service output message will include the resulting account open-to-buy amount based on the updated credit limit<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) BalanceUpdateV1FvEmea(params *BalanceUpdateV1FvEmeaParams) (*BalanceUpdateV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBalanceUpdateV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "balanceUpdate_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/balanceUpdate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BalanceUpdateV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*BalanceUpdateV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for balanceUpdate_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DebitCardAvailableBalanceUpdateV1FvEmea debits card available balance update

  This service will update the account level field IBS Credit Limit i.e. Issuer Banking System Credit Limit. This field is represented on screen ARMB09 as IBS UPDATED ACCOUNT OTB. This field holds a Debit Card’s Open To Buy value and allows FirstVision to take decisions on an incoming authorization on a Debit Card during FV Stand-In processing when the IBS link from FV to a Bank’s core-banking system is down. This service allows a bank to keep the value of available debit amount to spend in core banking system to be in sync with above FV field.<p><p>When the service functionality is successfully completed, a Pass return code response will be returned.  When, the service is not able to successfully complete, the service resonse will include a Fail return code and any associated error codes indicating the reason of service failure.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) DebitCardAvailableBalanceUpdateV1FvEmea(params *DebitCardAvailableBalanceUpdateV1FvEmeaParams) (*DebitCardAvailableBalanceUpdateV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDebitCardAvailableBalanceUpdateV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "debitCardAvailableBalanceUpdate_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/debitCardAvailableBalanceUpdate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DebitCardAvailableBalanceUpdateV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DebitCardAvailableBalanceUpdateV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for debitCardAvailableBalanceUpdate_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
