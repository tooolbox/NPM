// Code generated by go-swagger; DO NOT EDIT.

package account_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// StatementPlanListV1FvEmeaReader is a Reader for the StatementPlanListV1FvEmea structure.
type StatementPlanListV1FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StatementPlanListV1FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStatementPlanListV1FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStatementPlanListV1FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewStatementPlanListV1FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewStatementPlanListV1FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStatementPlanListV1FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewStatementPlanListV1FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewStatementPlanListV1FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewStatementPlanListV1FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewStatementPlanListV1FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 465:
		result := NewStatementPlanListV1FvEmeaStatus465()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewStatementPlanListV1FvEmeaOK creates a StatementPlanListV1FvEmeaOK with default headers values
func NewStatementPlanListV1FvEmeaOK() *StatementPlanListV1FvEmeaOK {
	return &StatementPlanListV1FvEmeaOK{}
}

/*StatementPlanListV1FvEmeaOK handles this case with default header values.

successful operation
*/
type StatementPlanListV1FvEmeaOK struct {
	Payload *models.StatementPlanListResponse
}

func (o *StatementPlanListV1FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/statementPlanList][%d] statementPlanListV1FvEmeaOK  %+v", 200, o.Payload)
}

func (o *StatementPlanListV1FvEmeaOK) GetPayload() *models.StatementPlanListResponse {
	return o.Payload
}

func (o *StatementPlanListV1FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StatementPlanListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStatementPlanListV1FvEmeaBadRequest creates a StatementPlanListV1FvEmeaBadRequest with default headers values
func NewStatementPlanListV1FvEmeaBadRequest() *StatementPlanListV1FvEmeaBadRequest {
	return &StatementPlanListV1FvEmeaBadRequest{}
}

/*StatementPlanListV1FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type StatementPlanListV1FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *StatementPlanListV1FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/statementPlanList][%d] statementPlanListV1FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *StatementPlanListV1FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *StatementPlanListV1FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStatementPlanListV1FvEmeaUnauthorized creates a StatementPlanListV1FvEmeaUnauthorized with default headers values
func NewStatementPlanListV1FvEmeaUnauthorized() *StatementPlanListV1FvEmeaUnauthorized {
	return &StatementPlanListV1FvEmeaUnauthorized{}
}

/*StatementPlanListV1FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type StatementPlanListV1FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *StatementPlanListV1FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/statementPlanList][%d] statementPlanListV1FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *StatementPlanListV1FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *StatementPlanListV1FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStatementPlanListV1FvEmeaForbidden creates a StatementPlanListV1FvEmeaForbidden with default headers values
func NewStatementPlanListV1FvEmeaForbidden() *StatementPlanListV1FvEmeaForbidden {
	return &StatementPlanListV1FvEmeaForbidden{}
}

/*StatementPlanListV1FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type StatementPlanListV1FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *StatementPlanListV1FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/statementPlanList][%d] statementPlanListV1FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *StatementPlanListV1FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *StatementPlanListV1FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStatementPlanListV1FvEmeaNotFound creates a StatementPlanListV1FvEmeaNotFound with default headers values
func NewStatementPlanListV1FvEmeaNotFound() *StatementPlanListV1FvEmeaNotFound {
	return &StatementPlanListV1FvEmeaNotFound{}
}

/*StatementPlanListV1FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type StatementPlanListV1FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *StatementPlanListV1FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/statementPlanList][%d] statementPlanListV1FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *StatementPlanListV1FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *StatementPlanListV1FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStatementPlanListV1FvEmeaTooManyRequests creates a StatementPlanListV1FvEmeaTooManyRequests with default headers values
func NewStatementPlanListV1FvEmeaTooManyRequests() *StatementPlanListV1FvEmeaTooManyRequests {
	return &StatementPlanListV1FvEmeaTooManyRequests{}
}

/*StatementPlanListV1FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type StatementPlanListV1FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *StatementPlanListV1FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/statementPlanList][%d] statementPlanListV1FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *StatementPlanListV1FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *StatementPlanListV1FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStatementPlanListV1FvEmeaStatus452 creates a StatementPlanListV1FvEmeaStatus452 with default headers values
func NewStatementPlanListV1FvEmeaStatus452() *StatementPlanListV1FvEmeaStatus452 {
	return &StatementPlanListV1FvEmeaStatus452{}
}

/*StatementPlanListV1FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type StatementPlanListV1FvEmeaStatus452 struct {
}

func (o *StatementPlanListV1FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/statementPlanList][%d] statementPlanListV1FvEmeaStatus452 ", 452)
}

func (o *StatementPlanListV1FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStatementPlanListV1FvEmeaStatus453 creates a StatementPlanListV1FvEmeaStatus453 with default headers values
func NewStatementPlanListV1FvEmeaStatus453() *StatementPlanListV1FvEmeaStatus453 {
	return &StatementPlanListV1FvEmeaStatus453{}
}

/*StatementPlanListV1FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type StatementPlanListV1FvEmeaStatus453 struct {
}

func (o *StatementPlanListV1FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/statementPlanList][%d] statementPlanListV1FvEmeaStatus453 ", 453)
}

func (o *StatementPlanListV1FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStatementPlanListV1FvEmeaStatus455 creates a StatementPlanListV1FvEmeaStatus455 with default headers values
func NewStatementPlanListV1FvEmeaStatus455() *StatementPlanListV1FvEmeaStatus455 {
	return &StatementPlanListV1FvEmeaStatus455{}
}

/*StatementPlanListV1FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type StatementPlanListV1FvEmeaStatus455 struct {
}

func (o *StatementPlanListV1FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/statementPlanList][%d] statementPlanListV1FvEmeaStatus455 ", 455)
}

func (o *StatementPlanListV1FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStatementPlanListV1FvEmeaStatus465 creates a StatementPlanListV1FvEmeaStatus465 with default headers values
func NewStatementPlanListV1FvEmeaStatus465() *StatementPlanListV1FvEmeaStatus465 {
	return &StatementPlanListV1FvEmeaStatus465{}
}

/*StatementPlanListV1FvEmeaStatus465 handles this case with default header values.

Backend Response Code and message in odsMessages field: <BR/><BR/>VPL5S0029S : ORG NUMBER MUST BE NUMERIC AND VALID VALUES ARE 001-998          ORG IS NOT NUMERIC<BR/>VPL5S0007E : CARDorACCT NUMBER IS NOT NUMERIC                                  INPUT CARDorACCT NUMBER IS NOT NUMERIC<BR/>VPL5S0008E : ORGANIZATION NOT DETERMINED<BR/>VPL5S0006S : REQUESTED ORG NUMBER IS NOT FOUND                                USER IS NOT ALLOWED TO ACCESS THE ORG<BR/>VPL5S0003S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES     CMS IS NO-PROCESSING STATE<BR/>VPL5S0012S : ACCOUNT NOT FOUND ON FILE<BR/>VPL5S0097E : NO STATEMENTS ARE FOUND FOR THE INPUT ACCOUNT<BR/>VPE5SPL01S : INVALID STATEMENT NUMBER - ENTER VALUE FROM 1 TO 23<BR/>VPE5SPL02E : NO STATEMENT RECORD FOR INPUT ACCOUNT FOR THIS STATEMEN NBR<BR/>VPE5SPL03E : NO PLAN RECORDS FOUND FOR INPUT ACCOUNT FOR THIS STATEMENT NB
*/
type StatementPlanListV1FvEmeaStatus465 struct {
	Payload *models.FsErrorDetails
}

func (o *StatementPlanListV1FvEmeaStatus465) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/statementPlanList][%d] statementPlanListV1FvEmeaStatus465  %+v", 465, o.Payload)
}

func (o *StatementPlanListV1FvEmeaStatus465) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *StatementPlanListV1FvEmeaStatus465) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
