// Code generated by go-swagger; DO NOT EDIT.

package account_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// AccountScoresInquiryV1FvEmeaReader is a Reader for the AccountScoresInquiryV1FvEmea structure.
type AccountScoresInquiryV1FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AccountScoresInquiryV1FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAccountScoresInquiryV1FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAccountScoresInquiryV1FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAccountScoresInquiryV1FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAccountScoresInquiryV1FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAccountScoresInquiryV1FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewAccountScoresInquiryV1FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewAccountScoresInquiryV1FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewAccountScoresInquiryV1FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewAccountScoresInquiryV1FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 465:
		result := NewAccountScoresInquiryV1FvEmeaStatus465()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAccountScoresInquiryV1FvEmeaOK creates a AccountScoresInquiryV1FvEmeaOK with default headers values
func NewAccountScoresInquiryV1FvEmeaOK() *AccountScoresInquiryV1FvEmeaOK {
	return &AccountScoresInquiryV1FvEmeaOK{}
}

/*AccountScoresInquiryV1FvEmeaOK handles this case with default header values.

successful operation
*/
type AccountScoresInquiryV1FvEmeaOK struct {
	Payload *models.AccountScoresInquiryResponse
}

func (o *AccountScoresInquiryV1FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountScoresInquiry][%d] accountScoresInquiryV1FvEmeaOK  %+v", 200, o.Payload)
}

func (o *AccountScoresInquiryV1FvEmeaOK) GetPayload() *models.AccountScoresInquiryResponse {
	return o.Payload
}

func (o *AccountScoresInquiryV1FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccountScoresInquiryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountScoresInquiryV1FvEmeaBadRequest creates a AccountScoresInquiryV1FvEmeaBadRequest with default headers values
func NewAccountScoresInquiryV1FvEmeaBadRequest() *AccountScoresInquiryV1FvEmeaBadRequest {
	return &AccountScoresInquiryV1FvEmeaBadRequest{}
}

/*AccountScoresInquiryV1FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type AccountScoresInquiryV1FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *AccountScoresInquiryV1FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountScoresInquiry][%d] accountScoresInquiryV1FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *AccountScoresInquiryV1FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AccountScoresInquiryV1FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountScoresInquiryV1FvEmeaUnauthorized creates a AccountScoresInquiryV1FvEmeaUnauthorized with default headers values
func NewAccountScoresInquiryV1FvEmeaUnauthorized() *AccountScoresInquiryV1FvEmeaUnauthorized {
	return &AccountScoresInquiryV1FvEmeaUnauthorized{}
}

/*AccountScoresInquiryV1FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type AccountScoresInquiryV1FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *AccountScoresInquiryV1FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountScoresInquiry][%d] accountScoresInquiryV1FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *AccountScoresInquiryV1FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AccountScoresInquiryV1FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountScoresInquiryV1FvEmeaForbidden creates a AccountScoresInquiryV1FvEmeaForbidden with default headers values
func NewAccountScoresInquiryV1FvEmeaForbidden() *AccountScoresInquiryV1FvEmeaForbidden {
	return &AccountScoresInquiryV1FvEmeaForbidden{}
}

/*AccountScoresInquiryV1FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type AccountScoresInquiryV1FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *AccountScoresInquiryV1FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountScoresInquiry][%d] accountScoresInquiryV1FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *AccountScoresInquiryV1FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AccountScoresInquiryV1FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountScoresInquiryV1FvEmeaNotFound creates a AccountScoresInquiryV1FvEmeaNotFound with default headers values
func NewAccountScoresInquiryV1FvEmeaNotFound() *AccountScoresInquiryV1FvEmeaNotFound {
	return &AccountScoresInquiryV1FvEmeaNotFound{}
}

/*AccountScoresInquiryV1FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type AccountScoresInquiryV1FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *AccountScoresInquiryV1FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountScoresInquiry][%d] accountScoresInquiryV1FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *AccountScoresInquiryV1FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AccountScoresInquiryV1FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountScoresInquiryV1FvEmeaTooManyRequests creates a AccountScoresInquiryV1FvEmeaTooManyRequests with default headers values
func NewAccountScoresInquiryV1FvEmeaTooManyRequests() *AccountScoresInquiryV1FvEmeaTooManyRequests {
	return &AccountScoresInquiryV1FvEmeaTooManyRequests{}
}

/*AccountScoresInquiryV1FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type AccountScoresInquiryV1FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *AccountScoresInquiryV1FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountScoresInquiry][%d] accountScoresInquiryV1FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *AccountScoresInquiryV1FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AccountScoresInquiryV1FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountScoresInquiryV1FvEmeaStatus452 creates a AccountScoresInquiryV1FvEmeaStatus452 with default headers values
func NewAccountScoresInquiryV1FvEmeaStatus452() *AccountScoresInquiryV1FvEmeaStatus452 {
	return &AccountScoresInquiryV1FvEmeaStatus452{}
}

/*AccountScoresInquiryV1FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type AccountScoresInquiryV1FvEmeaStatus452 struct {
}

func (o *AccountScoresInquiryV1FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountScoresInquiry][%d] accountScoresInquiryV1FvEmeaStatus452 ", 452)
}

func (o *AccountScoresInquiryV1FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAccountScoresInquiryV1FvEmeaStatus453 creates a AccountScoresInquiryV1FvEmeaStatus453 with default headers values
func NewAccountScoresInquiryV1FvEmeaStatus453() *AccountScoresInquiryV1FvEmeaStatus453 {
	return &AccountScoresInquiryV1FvEmeaStatus453{}
}

/*AccountScoresInquiryV1FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type AccountScoresInquiryV1FvEmeaStatus453 struct {
}

func (o *AccountScoresInquiryV1FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountScoresInquiry][%d] accountScoresInquiryV1FvEmeaStatus453 ", 453)
}

func (o *AccountScoresInquiryV1FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAccountScoresInquiryV1FvEmeaStatus455 creates a AccountScoresInquiryV1FvEmeaStatus455 with default headers values
func NewAccountScoresInquiryV1FvEmeaStatus455() *AccountScoresInquiryV1FvEmeaStatus455 {
	return &AccountScoresInquiryV1FvEmeaStatus455{}
}

/*AccountScoresInquiryV1FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type AccountScoresInquiryV1FvEmeaStatus455 struct {
}

func (o *AccountScoresInquiryV1FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountScoresInquiry][%d] accountScoresInquiryV1FvEmeaStatus455 ", 455)
}

func (o *AccountScoresInquiryV1FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAccountScoresInquiryV1FvEmeaStatus465 creates a AccountScoresInquiryV1FvEmeaStatus465 with default headers values
func NewAccountScoresInquiryV1FvEmeaStatus465() *AccountScoresInquiryV1FvEmeaStatus465 {
	return &AccountScoresInquiryV1FvEmeaStatus465{}
}

/*AccountScoresInquiryV1FvEmeaStatus465 handles this case with default header values.

Backend Response Code and message in odsMessages field: <BR/><BR/>VPE5SRS01S : INVALID SERVICE COULD NOT OBTAIN STORAGE AREA<BR/>VPE5SRS02S : SERVICE INPUT TO SERVICE HAS AN INCORRECT LENGTH<BR/>VPE5SRS04S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPE5SRS05S : ORGANIZATION NUMBER MUST BE NUMERIC and VALID VALUES ARE 000-998<BR/>VPE5SRS06S : INPUT ACCOUNT NUMBER IS NOT NUMERIC OR EQUALS SPACES<BR/>VPE5SRS07S : ACCOUNT ORGANIZATION COULD NOT BE DETERMINED<BR/>VPE5SRS08S : USER DOES NOT HAVE ACCESS TO THIS ORG<BR/>VPE5SRS09S : FILE TABLE NOT FOUND IN SMFT FILE<BR/>VPE5SRS10S : SYSTEM IN AFTER HOURS STATE PLEASE TRY LATER<BR/>VPE5SRS11S : SYSTEM CONTROL FILE NOT AVAILABLE<BR/>VPE5SRS12S : SYSTEM CONTROL RECORD NOT FOUND<BR/>VPE5SRS13S : ORG RECORD IS NOT FOUND OR IN AN ADD PENDING STATE<BR/>VPE5SRS14S : ACCOUNT BASE SEGMENT FILE NOT AVAIALBLE<BR/>VPE5SRS15S : ACCOUNT NOT FOUND OR NOT IN ACTIVE STATE<BR/>VPE5SRS16S : ERROR READING ACCT BASE SEGMENT FIL
*/
type AccountScoresInquiryV1FvEmeaStatus465 struct {
	Payload *models.FsErrorDetails
}

func (o *AccountScoresInquiryV1FvEmeaStatus465) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountScoresInquiry][%d] accountScoresInquiryV1FvEmeaStatus465  %+v", 465, o.Payload)
}

func (o *AccountScoresInquiryV1FvEmeaStatus465) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AccountScoresInquiryV1FvEmeaStatus465) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
