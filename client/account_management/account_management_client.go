// Code generated by go-swagger; DO NOT EDIT.

package account_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new account management API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for account management API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	AccountDetailInquiryV1FvEmea(params *AccountDetailInquiryV1FvEmeaParams) (*AccountDetailInquiryV1FvEmeaOK, error)

	AccountDetailInquiryV2FvEmea(params *AccountDetailInquiryV2FvEmeaParams) (*AccountDetailInquiryV2FvEmeaOK, error)

	AccountDetailInquiryV3FvEmea(params *AccountDetailInquiryV3FvEmeaParams) (*AccountDetailInquiryV3FvEmeaOK, error)

	AccountOverviewV1FvEmea(params *AccountOverviewV1FvEmeaParams) (*AccountOverviewV1FvEmeaOK, error)

	AccountPlanInquiryV1FvEmea(params *AccountPlanInquiryV1FvEmeaParams) (*AccountPlanInquiryV1FvEmeaOK, error)

	AccountScoresInquiryV1FvEmea(params *AccountScoresInquiryV1FvEmeaParams) (*AccountScoresInquiryV1FvEmeaOK, error)

	AccountTransferV1FvEmea(params *AccountTransferV1FvEmeaParams) (*AccountTransferV1FvEmeaOK, error)

	AccountsListByRelationshipV1FvEmea(params *AccountsListByRelationshipV1FvEmeaParams) (*AccountsListByRelationshipV1FvEmeaOK, error)

	AnnualStatementInquiryV1FvEmea(params *AnnualStatementInquiryV1FvEmeaParams) (*AnnualStatementInquiryV1FvEmeaOK, error)

	AnnualStatementInquiryV2FvEmea(params *AnnualStatementInquiryV2FvEmeaParams) (*AnnualStatementInquiryV2FvEmeaOK, error)

	BehaviouralHistoryInquiryV1FvEmea(params *BehaviouralHistoryInquiryV1FvEmeaParams) (*BehaviouralHistoryInquiryV1FvEmeaOK, error)

	CardholderDemographicListV1FvEmea(params *CardholderDemographicListV1FvEmeaParams) (*CardholderDemographicListV1FvEmeaOK, error)

	CardholderDemographicListV2FvEmea(params *CardholderDemographicListV2FvEmeaParams) (*CardholderDemographicListV2FvEmeaOK, error)

	CardslistbyAccountV1FvEmea(params *CardslistbyAccountV1FvEmeaParams) (*CardslistbyAccountV1FvEmeaOK, error)

	ClosingEndBalanceInquiryV1FvEmea(params *ClosingEndBalanceInquiryV1FvEmeaParams) (*ClosingEndBalanceInquiryV1FvEmeaOK, error)

	DelinquencyAdjustmentsInquiryV1FvEmea(params *DelinquencyAdjustmentsInquiryV1FvEmeaParams) (*DelinquencyAdjustmentsInquiryV1FvEmeaOK, error)

	DelinquencyAdjustmentsInquiryV2FvEmea(params *DelinquencyAdjustmentsInquiryV2FvEmeaParams) (*DelinquencyAdjustmentsInquiryV2FvEmeaOK, error)

	DirectDebitInquiryV1FvEmea(params *DirectDebitInquiryV1FvEmeaParams) (*DirectDebitInquiryV1FvEmeaOK, error)

	FalconNotifyV1FvEmea(params *FalconNotifyV1FvEmeaParams) (*FalconNotifyV1FvEmeaOK, error)

	FraudBlockCodeInquiryV1FvEmea(params *FraudBlockCodeInquiryV1FvEmeaParams) (*FraudBlockCodeInquiryV1FvEmeaOK, error)

	InterestRateExpiryInquiryV1FvEmea(params *InterestRateExpiryInquiryV1FvEmeaParams) (*InterestRateExpiryInquiryV1FvEmeaOK, error)

	PlanLevelMonthlyInterestInquiryV1FvEmea(params *PlanLevelMonthlyInterestInquiryV1FvEmeaParams) (*PlanLevelMonthlyInterestInquiryV1FvEmeaOK, error)

	ProductBlockCodeListV1FvEmea(params *ProductBlockCodeListV1FvEmeaParams) (*ProductBlockCodeListV1FvEmeaOK, error)

	RelationshipInquiryV2FvEmea(params *RelationshipInquiryV2FvEmeaParams) (*RelationshipInquiryV2FvEmeaOK, error)

	ReturnedMailInquiryV1FvEmea(params *ReturnedMailInquiryV1FvEmeaParams) (*ReturnedMailInquiryV1FvEmeaOK, error)

	StatementPlanListV1FvEmea(params *StatementPlanListV1FvEmeaParams) (*StatementPlanListV1FvEmeaOK, error)

	TriadDecisionInquiryV1FvEmea(params *TriadDecisionInquiryV1FvEmeaParams) (*TriadDecisionInquiryV1FvEmeaOK, error)

	UniqueLocateInquiryV1FvEmea(params *UniqueLocateInquiryV1FvEmeaParams) (*UniqueLocateInquiryV1FvEmeaOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  AccountDetailInquiryV1FvEmea accounts detail inquiry

  This service is deprecated and will be supported until January 2021. The new version contains changes in date formats of certain fields to Gregorian (YYYYMMDD). Please switch to Version 3 of this API before that time. <BR/><BR/>This service is used to return detailed information for an input Account or Card number.<p>For ACCOUNT INPUT: Account level details come from the input account number. Customer demographic details come from the Customer Number read from the input Account number record. Card level details come from the first card number obtained from the account to card cross reference file.<p>For CARD INPUT: Card level details come from the input card number. Customer demographic details come from the Customer Number read from the input Card number record. Account level details come from the Pot to Account Number read from the input Card number record.<p>Based on the driving account/card/customer numbers detailed information is returned from those files and the following files: Plan Segment, Marketing Behaviour History, Rate Table and Program Control Table.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) AccountDetailInquiryV1FvEmea(params *AccountDetailInquiryV1FvEmeaParams) (*AccountDetailInquiryV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAccountDetailInquiryV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "accountDetailInquiry_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/accountDetailInquiry",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AccountDetailInquiryV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AccountDetailInquiryV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for accountDetailInquiry_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AccountDetailInquiryV2FvEmea accounts detail inquiry

  This service is deprecated and will be supported until January 2021. The new version contains changes in date formats of certain fields to Gregorian (YYYYMMDD). Please switch to Version 3 of this API before that time. <BR/><BR/>This service is used to return detailed information for an input Account or Card number.<p><p>For ACCOUNT INPUT: Account level details come from the input account number. Customer demographic details come from the Customer Number read from the input Account number record. Card level details come from the first card number obtained from the account to card cross reference file.<p><p>For CARD INPUT: Card level details come from the input card number. Customer demographic details come from the Customer Number read from the input Card number record. Account level details come from the Pot to Account Number read from the input Card number record.<p><p>Based on the driving account/card/customer numbers detailed information is returned from those files and the following files: Plan Segment, Marketing Behaviour History, Rate Table and Program Control Table.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) AccountDetailInquiryV2FvEmea(params *AccountDetailInquiryV2FvEmeaParams) (*AccountDetailInquiryV2FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAccountDetailInquiryV2FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "accountDetailInquiry_v2_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v2/accountDetailInquiry",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AccountDetailInquiryV2FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AccountDetailInquiryV2FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for accountDetailInquiry_v2_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AccountDetailInquiryV3FvEmea accounts detail inquiry

  This service is used to return detailed information for an input Account or Card number.<p><p>For ACCOUNT INPUT: Account level details come from the input account number. Customer demographic details come from the Customer Number read from the input Account number record. Card level details come from the first card number obtained from the account to card cross reference file.<p><p>For CARD INPUT: Card level details come from the input card number. Customer demographic details come from the Customer Number read from the input Card number record. Account level details come from the Pot to Account Number read from the input Card number record.<p><p>Based on the driving account/card/customer numbers detailed information is returned from those files and the following files: Plan Segment, Marketing Behaviour History, Rate Table and Program Control Table.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) AccountDetailInquiryV3FvEmea(params *AccountDetailInquiryV3FvEmeaParams) (*AccountDetailInquiryV3FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAccountDetailInquiryV3FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "accountDetailInquiry_v3_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v3/accountDetailInquiry",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AccountDetailInquiryV3FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AccountDetailInquiryV3FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for accountDetailInquiry_v3_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AccountOverviewV1FvEmea accounts overview

  This service is used to retrieve data held at the account level for a FirstVision account. This service can be called with an account number or a card number. If an account has been transferred, the current FirstVision account number must be provided, as this service does not automatically switch to the new account. If called with a card number, details will be returned for the account number to which the card number is linked. The service is capable of populating primary card details along with customer details for the customer assigned at the account level. <p>If an account is in a relationship, the account number must be used in the input request and the account’s information will be displayed in the response.<p><p>Additionally, the service is capable of returning details of any insurance products enrolled on the account. As per the current design of the FirstVision system, an account can have maximum 20 active insurance products.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) AccountOverviewV1FvEmea(params *AccountOverviewV1FvEmeaParams) (*AccountOverviewV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAccountOverviewV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "accountOverview_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/accountOverview",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AccountOverviewV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AccountOverviewV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for accountOverview_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AccountPlanInquiryV1FvEmea accounts plan inquiry

  This service is used to return the selected flexible payment plans for an account. This service is used to display for cardholders to set up a flexible payment plan for their account.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) AccountPlanInquiryV1FvEmea(params *AccountPlanInquiryV1FvEmeaParams) (*AccountPlanInquiryV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAccountPlanInquiryV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "accountPlanInquiry_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/accountPlanInquiry",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AccountPlanInquiryV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AccountPlanInquiryV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for accountPlanInquiry_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AccountScoresInquiryV1FvEmea accounts scores inquiry

  This service is used to retrieve information regarding the details stored in the RIS file that stores the Account scores which are available for qualification rule definition in RIS.  There is a maximum of 40 scores that can be stored for an account and it is not necessary that all of them are used.  These scores are updated via a separate batch update process.  The service does not give a provision to update these scores.<p><p>This service can be called with an account number.  If account number used in the service call is not present in the RIS scores file, then an error will be returned.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) AccountScoresInquiryV1FvEmea(params *AccountScoresInquiryV1FvEmeaParams) (*AccountScoresInquiryV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAccountScoresInquiryV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "accountScoresInquiry_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/accountScoresInquiry",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AccountScoresInquiryV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AccountScoresInquiryV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for accountScoresInquiry_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AccountTransferV1FvEmea accounts transfer

  This service is used to transfer the account across the products as part product upgrade/downgrade, copy, or fraud transfer. The same service can be used to transfer the primary account with the multi-schemes card products, from one product to another. This service can be executed in a validate mode or update mode based on the mode indicator received in the request message. The request must also contain account number, new account logo and new card logo for this service.<p><p>As part of the account transfer the details of old account gets copied to the new account, the active cards get transferred to the new account or if applicable new cards are created in the case of a product upgrade.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) AccountTransferV1FvEmea(params *AccountTransferV1FvEmeaParams) (*AccountTransferV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAccountTransferV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "accountTransfer_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/accountTransfer",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AccountTransferV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AccountTransferV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for accountTransfer_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AccountsListByRelationshipV1FvEmea accounts list by relationship

  <p>The Accounts list by Relationship service will allow the user to retrieve the list of account that belongs to the Relationship. The service will return up to 50 accounts for any request. The service will accept any of the Relationship; any Account or card number as input. There is the ability to request the service to start from a certain account number (svcStartAcctNbr which is returned on the response to assist client with the next available account number) and whether to browse ‘N’ext or ‘P’revious (scvFunctionCode).
*/
func (a *Client) AccountsListByRelationshipV1FvEmea(params *AccountsListByRelationshipV1FvEmeaParams) (*AccountsListByRelationshipV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAccountsListByRelationshipV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "accountsListByRelationship_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/accountsListByRelationship",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AccountsListByRelationshipV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AccountsListByRelationshipV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for accountsListByRelationship_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AnnualStatementInquiryV1FvEmea annuals statement inquiry

  This service is deprecated and will be supported until January 2021. The new version contains changes in date formats of certain fields to Gregorian (YYYYMMDD). Please switch to Version 2 of this API before that time. <BR/><BR/>This service is used to retrieve the annual credit card statement summary data of an account from FirstVision. The service can be called  with an Account number and Org.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) AnnualStatementInquiryV1FvEmea(params *AnnualStatementInquiryV1FvEmeaParams) (*AnnualStatementInquiryV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAnnualStatementInquiryV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "annualStatementInquiry_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/annualStatementInquiry",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AnnualStatementInquiryV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AnnualStatementInquiryV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for annualStatementInquiry_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AnnualStatementInquiryV2FvEmea annuals statement inquiry

  This service is used to retrieve the annual credit card statement summary data of an account from FirstVision. The service can be called  with an Account number and Org.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) AnnualStatementInquiryV2FvEmea(params *AnnualStatementInquiryV2FvEmeaParams) (*AnnualStatementInquiryV2FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAnnualStatementInquiryV2FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "annualStatementInquiry_v2_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v2/annualStatementInquiry",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AnnualStatementInquiryV2FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AnnualStatementInquiryV2FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for annualStatementInquiry_v2_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  BehaviouralHistoryInquiryV1FvEmea behaviourals history inquiry

  The Behaviour History Inquiry service is used to retrieve the CMS account information for particular account or card. The data is stored on the Behavior History Inquiry screen ARIB01.
*/
func (a *Client) BehaviouralHistoryInquiryV1FvEmea(params *BehaviouralHistoryInquiryV1FvEmeaParams) (*BehaviouralHistoryInquiryV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBehaviouralHistoryInquiryV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "behaviouralHistoryInquiry_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/behaviouralHistoryInquiry",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BehaviouralHistoryInquiryV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*BehaviouralHistoryInquiryV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for behaviouralHistoryInquiry_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CardholderDemographicListV1FvEmea cardholders demographic list

  This service is deprecated and will be supported until January 2021. The new version contains changes in date formats of certain fields to Gregorian (YYYYMMDD). Please switch to Version 2 of this API before that time. <BR/><BR/>This service is used to get a comprehensive view of all demographic data tied to the account as well as all cards tied to that customer. It allows the user to send number of addresses (based on number of cards a customer has) required in the output message. The default being 20 if max number is not supplied or if invalid.<p><p>The service also allows users to send the appropriate service option in the request if any of the addresses such as Customer primary mailing, Alternate customer address, Prior mailing address, Associate demographic address need to be included or excluded from the response message.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) CardholderDemographicListV1FvEmea(params *CardholderDemographicListV1FvEmeaParams) (*CardholderDemographicListV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCardholderDemographicListV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "cardholderDemographicList_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/cardholderDemographicList",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CardholderDemographicListV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CardholderDemographicListV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for cardholderDemographicList_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CardholderDemographicListV2FvEmea cardholders demographic list

  This service is used to get a comprehensive view of all demographic data tied to the account as well as all cards tied to that customer. It allows the user to send number of addresses (based on number of cards a customer has) required in the output message. The default being 20 if max number is not supplied or if invalid.<p><p>The service also allows users to send the appropriate service option in the request if any of the addresses such as Customer primary mailing, Alternate customer address, Prior mailing address, Associate demographic address need to be included or excluded from the response message.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) CardholderDemographicListV2FvEmea(params *CardholderDemographicListV2FvEmeaParams) (*CardholderDemographicListV2FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCardholderDemographicListV2FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "cardholderDemographicList_v2_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v2/cardholderDemographicList",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CardholderDemographicListV2FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CardholderDemographicListV2FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for cardholderDemographicList_v2_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CardslistbyAccountV1FvEmea cardslistbies account

  The account to card Inquiry Service will allow a user to perform the lookup or navigation from account number to all associated card numbers. The service is used for the purpose of the card look up function where the account number is provided by the calling program, and the calling program expects all card numbers associated with the account to be returned in the service output response.  There can be multiple card numbers associated with a single account number. When the card number is provided in the service input, and is the same as the account number, the service currently reads the cross reference file to be able to obtain all the cards associated with the account number. This service returns up to 20 card numbers per call.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) CardslistbyAccountV1FvEmea(params *CardslistbyAccountV1FvEmeaParams) (*CardslistbyAccountV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCardslistbyAccountV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "cardslistbyAccount_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/cardslistbyAccount",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CardslistbyAccountV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CardslistbyAccountV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for cardslistbyAccount_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ClosingEndBalanceInquiryV1FvEmea closings end balance inquiry

  The purpose of this service is to support the inquiry of an accounts closing balance on a particular day. The service will be able to provide accouts outstanding balance along with details of all the plans with balances greater than zero back to the source that initiated the service. This service will require Org and account number in the input message. The input details will be used by this service to get the data from the Credit Management System If any error occurs the service will return a fail indicator F in the response message with an appropriate error code and description.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) ClosingEndBalanceInquiryV1FvEmea(params *ClosingEndBalanceInquiryV1FvEmeaParams) (*ClosingEndBalanceInquiryV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewClosingEndBalanceInquiryV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "closingEndBalanceInquiry_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/closingEndBalanceInquiry",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ClosingEndBalanceInquiryV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ClosingEndBalanceInquiryV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for closingEndBalanceInquiry_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DelinquencyAdjustmentsInquiryV1FvEmea delinquencies adjustments inquiry

  This service is deprecated and will be supported until January 2021. The new version contains changes in date formats of certain fields to Gregorian (YYYYMMDD). Please switch to Version 2 of this API before that time. <BR/><BR/>This service is used to view the delinquency details of the customers account<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) DelinquencyAdjustmentsInquiryV1FvEmea(params *DelinquencyAdjustmentsInquiryV1FvEmeaParams) (*DelinquencyAdjustmentsInquiryV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDelinquencyAdjustmentsInquiryV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "delinquencyAdjustmentsInquiry_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/delinquencyAdjustmentsInquiry",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DelinquencyAdjustmentsInquiryV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DelinquencyAdjustmentsInquiryV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for delinquencyAdjustmentsInquiry_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DelinquencyAdjustmentsInquiryV2FvEmea delinquencies adjustments inquiry

  This service is used to view the delinquency details of the customers account<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) DelinquencyAdjustmentsInquiryV2FvEmea(params *DelinquencyAdjustmentsInquiryV2FvEmeaParams) (*DelinquencyAdjustmentsInquiryV2FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDelinquencyAdjustmentsInquiryV2FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "delinquencyAdjustmentsInquiry_v2_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v2/delinquencyAdjustmentsInquiry",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DelinquencyAdjustmentsInquiryV2FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DelinquencyAdjustmentsInquiryV2FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for delinquencyAdjustmentsInquiry_v2_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DirectDebitInquiryV1FvEmea directs debit inquiry

  This service is used to retrieve using the account or card number, the Direct Debit or Credit details on an account.  The information that is returned includes:  bank account,  routing data and various other associated fields<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) DirectDebitInquiryV1FvEmea(params *DirectDebitInquiryV1FvEmeaParams) (*DirectDebitInquiryV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDirectDebitInquiryV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "directDebitInquiry_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/directDebitInquiry",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DirectDebitInquiryV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DirectDebitInquiryV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for directDebitInquiry_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  FalconNotifyV1FvEmea falcons notify

  Falcon Notify Service will be used to pass the 3DS event data to Falcon via Non Mon route<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) FalconNotifyV1FvEmea(params *FalconNotifyV1FvEmeaParams) (*FalconNotifyV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewFalconNotifyV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "falconNotify_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/falconNotify",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &FalconNotifyV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*FalconNotifyV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for falconNotify_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  FraudBlockCodeInquiryV1FvEmea frauds block code inquiry

  This service is used to retrieve of Product block codes matrix defined in FirstVision system.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) FraudBlockCodeInquiryV1FvEmea(params *FraudBlockCodeInquiryV1FvEmeaParams) (*FraudBlockCodeInquiryV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewFraudBlockCodeInquiryV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "fraudBlockCodeInquiry_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/fraudBlockCodeInquiry",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &FraudBlockCodeInquiryV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*FraudBlockCodeInquiryV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for fraudBlockCodeInquiry_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InterestRateExpiryInquiryV1FvEmea interests rate expiry inquiry

  This service is used to retrieve the Annual Effective Rate (AER) and the Monthly Effective Rate for various plans such as Standard Retail, Standard Cash, Balance Transfer, Promotional Retail, Promotional Cash, go-To Balance Transfer (the rate following the expiration of the existing balance transfer plan). To determine the rates, the service uses the default plan numbers on the Account record – retail, cash and promotional.<p><p>If the rate type of the referenced interest table is not Fixed or Variable then AER or Monthly ER is passed as zeroes in the output message.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) InterestRateExpiryInquiryV1FvEmea(params *InterestRateExpiryInquiryV1FvEmeaParams) (*InterestRateExpiryInquiryV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInterestRateExpiryInquiryV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "interestRateExpiryInquiry_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/interestRateExpiryInquiry",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InterestRateExpiryInquiryV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InterestRateExpiryInquiryV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for interestRateExpiryInquiry_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PlanLevelMonthlyInterestInquiryV1FvEmea plans level monthly interest inquiry

  This service is used to retrieve the interest charged to the cardholder's account on a specific statement date or on previous statements (up to 12 statements). In response, the service will pass the interest billed to the cardholders in each statement along with year to date charged interest value.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) PlanLevelMonthlyInterestInquiryV1FvEmea(params *PlanLevelMonthlyInterestInquiryV1FvEmeaParams) (*PlanLevelMonthlyInterestInquiryV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPlanLevelMonthlyInterestInquiryV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "planLevelMonthlyInterestInquiry_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/planLevelMonthlyInterestInquiry",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PlanLevelMonthlyInterestInquiryV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PlanLevelMonthlyInterestInquiryV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for planLevelMonthlyInterestInquiry_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ProductBlockCodeListV1FvEmea products block code list

  This service is used to return the 'Current' Block Code for an input Account or Card number as well as the list of Block Codes for their Product. The requested 'Current' Block Code is requested as one of: Card Block Code, Account Block 1 or Account Block 2 using functCode. Additional to the requested Current Block Code, the service will return: Account Block 1 and Account Block 2. For each of the 3 returned Block Codes their Priority and Description will also be returned from the Account/Card Product (i.e. FirstVision Logo). In addition to the Account/Card block codes returned, a full list of the Product Block Codes with their priorities and descriptions can be returned or excluded individually.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) ProductBlockCodeListV1FvEmea(params *ProductBlockCodeListV1FvEmeaParams) (*ProductBlockCodeListV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewProductBlockCodeListV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "productBlockCodeList_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/productBlockCodeList",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ProductBlockCodeListV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ProductBlockCodeListV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for productBlockCodeList_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  RelationshipInquiryV2FvEmea relationships inquiry

  This service is used to search inquiry that retrieves customer information based on the Relationship; any Account or card or the relationship Customer numbers as input. Client must ensure that the appropriate value is passed in the request message along with the respective number.<p><p>When relationship number is received in the request message, system retrieves the details of relationship, primary account, cards (up to 20 in a response) and customer demographics.<p><p>If account or card number is received in the request; system retrieves the related details of the respective card or account record and passes them in the response message.The Relationship Inquiry service will allow the user to retrieve data about the Relationship; the primary account; the customer; the first 50 Accounts linked to the Relationship as well as a scrollable list of cards belonging to the Relationship.<p><p>The total number of sub accounts for the Relationship is provided in the field nbrSubAccts with RelNumberOccurs being the number of returned account for the current request. The card table has the following fields to assist the client to scroll thru the cards on file for the Relationship (cardOrgNext , cardNbrNext, cardSeqNext, cardOrgPrev, cardNbrPrev, cardSeqPrev, nbrReturnedItems and moreDataFlag)
*/
func (a *Client) RelationshipInquiryV2FvEmea(params *RelationshipInquiryV2FvEmeaParams) (*RelationshipInquiryV2FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewRelationshipInquiryV2FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "relationshipInquiry_v2_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v2/relationshipInquiry",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &RelationshipInquiryV2FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*RelationshipInquiryV2FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for relationshipInquiry_v2_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ReturnedMailInquiryV1FvEmea returneds mail inquiry

  This service is used to retrieve any return mail information on the account.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) ReturnedMailInquiryV1FvEmea(params *ReturnedMailInquiryV1FvEmeaParams) (*ReturnedMailInquiryV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewReturnedMailInquiryV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "returnedMailInquiry_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/returnedMailInquiry",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ReturnedMailInquiryV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ReturnedMailInquiryV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for returnedMailInquiry_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  StatementPlanListV1FvEmea statements plan list

  This service provides detailed information for a selected statement produced for an account. This is a statement inquiry for the account. This service can be called with an account number or a card number.
*/
func (a *Client) StatementPlanListV1FvEmea(params *StatementPlanListV1FvEmeaParams) (*StatementPlanListV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewStatementPlanListV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "statementPlanList_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/statementPlanList",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &StatementPlanListV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*StatementPlanListV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for statementPlanList_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TriadDecisionInquiryV1FvEmea triads decision inquiry

  The TRIAD for Customer Decisioning service processes money transfer requests using reason code values to identify accept/decline decision and send the same in response.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) TriadDecisionInquiryV1FvEmea(params *TriadDecisionInquiryV1FvEmeaParams) (*TriadDecisionInquiryV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTriadDecisionInquiryV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "triadDecisionInquiry_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/triadDecisionInquiry",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TriadDecisionInquiryV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*TriadDecisionInquiryV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for triadDecisionInquiry_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UniqueLocateInquiryV1FvEmea uniques locate inquiry

  The Unique ID Enquiry enables a customer to be located by using Customer Number, Account Number, Card Number, or Unique ID. The service will return 50 records at a time showing all associated records. If there are more that 50 records available the data elements required to continue the search will be retuned so they can be used to initiate an additional request.<p><p>The RELATIONSHIP field of the request service enables the user to request just residential address record or all related records. Up to 50 results may be returned for each request. If the CONTINUATION DATA is populated on the response this indicates that more results are available. The CONTINUATION DATA fields can be moved to the request area in order to resume the search where it left off.
*/
func (a *Client) UniqueLocateInquiryV1FvEmea(params *UniqueLocateInquiryV1FvEmeaParams) (*UniqueLocateInquiryV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUniqueLocateInquiryV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "uniqueLocateInquiry_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/uniqueLocateInquiry",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UniqueLocateInquiryV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UniqueLocateInquiryV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for uniqueLocateInquiry_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
