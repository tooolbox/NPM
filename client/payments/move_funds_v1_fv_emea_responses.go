// Code generated by go-swagger; DO NOT EDIT.

package payments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// MoveFundsV1FvEmeaReader is a Reader for the MoveFundsV1FvEmea structure.
type MoveFundsV1FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MoveFundsV1FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewMoveFundsV1FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewMoveFundsV1FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewMoveFundsV1FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewMoveFundsV1FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewMoveFundsV1FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewMoveFundsV1FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 468:
		result := NewMoveFundsV1FvEmeaStatus468()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewMoveFundsV1FvEmeaOK creates a MoveFundsV1FvEmeaOK with default headers values
func NewMoveFundsV1FvEmeaOK() *MoveFundsV1FvEmeaOK {
	return &MoveFundsV1FvEmeaOK{}
}

/*MoveFundsV1FvEmeaOK handles this case with default header values.

Success response code is R000
*/
type MoveFundsV1FvEmeaOK struct {
	Payload *models.MoveFundsResponse
}

func (o *MoveFundsV1FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/moveFunds][%d] moveFundsV1FvEmeaOK  %+v", 200, o.Payload)
}

func (o *MoveFundsV1FvEmeaOK) GetPayload() *models.MoveFundsResponse {
	return o.Payload
}

func (o *MoveFundsV1FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MoveFundsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMoveFundsV1FvEmeaUnauthorized creates a MoveFundsV1FvEmeaUnauthorized with default headers values
func NewMoveFundsV1FvEmeaUnauthorized() *MoveFundsV1FvEmeaUnauthorized {
	return &MoveFundsV1FvEmeaUnauthorized{}
}

/*MoveFundsV1FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials
*/
type MoveFundsV1FvEmeaUnauthorized struct {
}

func (o *MoveFundsV1FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/moveFunds][%d] moveFundsV1FvEmeaUnauthorized ", 401)
}

func (o *MoveFundsV1FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewMoveFundsV1FvEmeaForbidden creates a MoveFundsV1FvEmeaForbidden with default headers values
func NewMoveFundsV1FvEmeaForbidden() *MoveFundsV1FvEmeaForbidden {
	return &MoveFundsV1FvEmeaForbidden{}
}

/*MoveFundsV1FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation
*/
type MoveFundsV1FvEmeaForbidden struct {
}

func (o *MoveFundsV1FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/moveFunds][%d] moveFundsV1FvEmeaForbidden ", 403)
}

func (o *MoveFundsV1FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewMoveFundsV1FvEmeaStatus452 creates a MoveFundsV1FvEmeaStatus452 with default headers values
func NewMoveFundsV1FvEmeaStatus452() *MoveFundsV1FvEmeaStatus452 {
	return &MoveFundsV1FvEmeaStatus452{}
}

/*MoveFundsV1FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type MoveFundsV1FvEmeaStatus452 struct {
}

func (o *MoveFundsV1FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/moveFunds][%d] moveFundsV1FvEmeaStatus452 ", 452)
}

func (o *MoveFundsV1FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewMoveFundsV1FvEmeaStatus453 creates a MoveFundsV1FvEmeaStatus453 with default headers values
func NewMoveFundsV1FvEmeaStatus453() *MoveFundsV1FvEmeaStatus453 {
	return &MoveFundsV1FvEmeaStatus453{}
}

/*MoveFundsV1FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type MoveFundsV1FvEmeaStatus453 struct {
}

func (o *MoveFundsV1FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/moveFunds][%d] moveFundsV1FvEmeaStatus453 ", 453)
}

func (o *MoveFundsV1FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewMoveFundsV1FvEmeaStatus455 creates a MoveFundsV1FvEmeaStatus455 with default headers values
func NewMoveFundsV1FvEmeaStatus455() *MoveFundsV1FvEmeaStatus455 {
	return &MoveFundsV1FvEmeaStatus455{}
}

/*MoveFundsV1FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type MoveFundsV1FvEmeaStatus455 struct {
}

func (o *MoveFundsV1FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/moveFunds][%d] moveFundsV1FvEmeaStatus455 ", 455)
}

func (o *MoveFundsV1FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewMoveFundsV1FvEmeaStatus468 creates a MoveFundsV1FvEmeaStatus468 with default headers values
func NewMoveFundsV1FvEmeaStatus468() *MoveFundsV1FvEmeaStatus468 {
	return &MoveFundsV1FvEmeaStatus468{}
}

/*MoveFundsV1FvEmeaStatus468 handles this case with default header values.

MoveFunds Backend Exception occurred. Below are the error code you can expect in resultCode field.<BR/><BR/> R004 : An unexpected problem has occurred <BR/> R018 : The destination card scheme information is invalid <BR/> R020 : The amount is invalid <BR/> R073 : The destination account does not exist <BR/> R082 : Invalid campaign code <BR/> R086 : Payment failed during authorisation. Memo debit will not be held for the payment amount, please perform this manually <BR/> R201 : System Unavailable <BR/> R202 : Org is invalid <BR/> R203 : The card is lost / stolen <BR/> R204 : Invalid Transaction <BR/> R205 : Card is Expired <BR/> R206 : CVC2 Validation Failure <BR/> R207 : Review Date / Time is Invalid <BR/> R208 : Invalid card number <BR/> R209 : Signon unavailable <BR/> R098 : Error account not on file <BR/> R112 : Error details not on file <BR/> R210 : Invalid username and/or password <BR/> R123 : Non TRIAD Client <BR/> R124 : Credit limit not authorised <BR/> R078 : Duplicate record found <BR/> R084 : The Balance transfer was declined as there was a status on the account <BR/> R094 : The balance transfer / money transfer is less than the minimum amount defined for this product<BR/> R095 : Error BT available credit <BR/> R096 : Payment on Same Client Card not permitted <BR/> R099 : The balance transfer / money transfer is greater than the maximum amount defined for this product<BR/> R100 : Performing this transfer will leave an amount on this account which is less than the minimum residual balance defined for this product<BR/> R101 : Account is Delinquent <BR/> R019 : The destination scheme does not exist <BR/> R017 : The source card scheme information is invalid <BR/> R021 : The transfer method is invalid <BR/> R022 : The transfer method does not exist <BR/> R023 : The transfer method is blocked <BR/> R119 : Invalid Offer Code <BR/> R120 : Error Offer Code expired <BR/> R122 : Invalid Channel Type <BR/> R075 : The destination currency is invalid <BR/> R080 : Source card number does not pass MOD 10 check <BR/> R077 : Destination card number does not pass MOD 10 check <BR/> R092 : The merchant number for this balance transfer is not correctly configured. Contact an administrator <BR/> R109 : User sign-on error <BR/> R130 : Invalid Enrollment Action <BR/> R131 : Offer code/definition not found <BR/> R132 : Offer Enrollment not found <BR/> R133 : File table used by this service is missing <BR/> R134 : Application in no-processing status <BR/> R014 : Balance Transfer entry does not exist <BR/> R125 : Error declining transfer in database. Please contact your supervisor <BR/> R126 : Transfer successfully declined; but Memo creation failed. Please create memo manually <BR/> R127 : Transfer marked as Declined; but auth reversal failed in mainframe. Please reverse the fund manually <BR/> R135 : Manual Balance Transfer <BR/> R087 : BT was not authorised; no letter or memo was generated <BR/> R220 : Incorrect Balance Transfer Details. Both card number and account number provided <BR/> R223 : Incorrect Balance Transfer Details. Card/Account number not provided <BR/> R224 : Reason for use of funds is mandatory for money transfer payments
*/
type MoveFundsV1FvEmeaStatus468 struct {
	Payload *models.FsErrorDetails
}

func (o *MoveFundsV1FvEmeaStatus468) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/moveFunds][%d] moveFundsV1FvEmeaStatus468  %+v", 468, o.Payload)
}

func (o *MoveFundsV1FvEmeaStatus468) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *MoveFundsV1FvEmeaStatus468) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
