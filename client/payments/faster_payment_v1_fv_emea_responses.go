// Code generated by go-swagger; DO NOT EDIT.

package payments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// FasterPaymentV1FvEmeaReader is a Reader for the FasterPaymentV1FvEmea structure.
type FasterPaymentV1FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FasterPaymentV1FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFasterPaymentV1FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewFasterPaymentV1FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewFasterPaymentV1FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFasterPaymentV1FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFasterPaymentV1FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewFasterPaymentV1FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewFasterPaymentV1FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewFasterPaymentV1FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewFasterPaymentV1FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 465:
		result := NewFasterPaymentV1FvEmeaStatus465()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFasterPaymentV1FvEmeaOK creates a FasterPaymentV1FvEmeaOK with default headers values
func NewFasterPaymentV1FvEmeaOK() *FasterPaymentV1FvEmeaOK {
	return &FasterPaymentV1FvEmeaOK{}
}

/*FasterPaymentV1FvEmeaOK handles this case with default header values.

successful operation
*/
type FasterPaymentV1FvEmeaOK struct {
	Payload *models.FasterPaymentResponse
}

func (o *FasterPaymentV1FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/fasterPayment][%d] fasterPaymentV1FvEmeaOK  %+v", 200, o.Payload)
}

func (o *FasterPaymentV1FvEmeaOK) GetPayload() *models.FasterPaymentResponse {
	return o.Payload
}

func (o *FasterPaymentV1FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FasterPaymentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFasterPaymentV1FvEmeaBadRequest creates a FasterPaymentV1FvEmeaBadRequest with default headers values
func NewFasterPaymentV1FvEmeaBadRequest() *FasterPaymentV1FvEmeaBadRequest {
	return &FasterPaymentV1FvEmeaBadRequest{}
}

/*FasterPaymentV1FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type FasterPaymentV1FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *FasterPaymentV1FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/fasterPayment][%d] fasterPaymentV1FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *FasterPaymentV1FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *FasterPaymentV1FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFasterPaymentV1FvEmeaUnauthorized creates a FasterPaymentV1FvEmeaUnauthorized with default headers values
func NewFasterPaymentV1FvEmeaUnauthorized() *FasterPaymentV1FvEmeaUnauthorized {
	return &FasterPaymentV1FvEmeaUnauthorized{}
}

/*FasterPaymentV1FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type FasterPaymentV1FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *FasterPaymentV1FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/fasterPayment][%d] fasterPaymentV1FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *FasterPaymentV1FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *FasterPaymentV1FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFasterPaymentV1FvEmeaForbidden creates a FasterPaymentV1FvEmeaForbidden with default headers values
func NewFasterPaymentV1FvEmeaForbidden() *FasterPaymentV1FvEmeaForbidden {
	return &FasterPaymentV1FvEmeaForbidden{}
}

/*FasterPaymentV1FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type FasterPaymentV1FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *FasterPaymentV1FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/fasterPayment][%d] fasterPaymentV1FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *FasterPaymentV1FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *FasterPaymentV1FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFasterPaymentV1FvEmeaNotFound creates a FasterPaymentV1FvEmeaNotFound with default headers values
func NewFasterPaymentV1FvEmeaNotFound() *FasterPaymentV1FvEmeaNotFound {
	return &FasterPaymentV1FvEmeaNotFound{}
}

/*FasterPaymentV1FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type FasterPaymentV1FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *FasterPaymentV1FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/fasterPayment][%d] fasterPaymentV1FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *FasterPaymentV1FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *FasterPaymentV1FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFasterPaymentV1FvEmeaTooManyRequests creates a FasterPaymentV1FvEmeaTooManyRequests with default headers values
func NewFasterPaymentV1FvEmeaTooManyRequests() *FasterPaymentV1FvEmeaTooManyRequests {
	return &FasterPaymentV1FvEmeaTooManyRequests{}
}

/*FasterPaymentV1FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type FasterPaymentV1FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *FasterPaymentV1FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/fasterPayment][%d] fasterPaymentV1FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *FasterPaymentV1FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *FasterPaymentV1FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFasterPaymentV1FvEmeaStatus452 creates a FasterPaymentV1FvEmeaStatus452 with default headers values
func NewFasterPaymentV1FvEmeaStatus452() *FasterPaymentV1FvEmeaStatus452 {
	return &FasterPaymentV1FvEmeaStatus452{}
}

/*FasterPaymentV1FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type FasterPaymentV1FvEmeaStatus452 struct {
}

func (o *FasterPaymentV1FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/fasterPayment][%d] fasterPaymentV1FvEmeaStatus452 ", 452)
}

func (o *FasterPaymentV1FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFasterPaymentV1FvEmeaStatus453 creates a FasterPaymentV1FvEmeaStatus453 with default headers values
func NewFasterPaymentV1FvEmeaStatus453() *FasterPaymentV1FvEmeaStatus453 {
	return &FasterPaymentV1FvEmeaStatus453{}
}

/*FasterPaymentV1FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type FasterPaymentV1FvEmeaStatus453 struct {
}

func (o *FasterPaymentV1FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/fasterPayment][%d] fasterPaymentV1FvEmeaStatus453 ", 453)
}

func (o *FasterPaymentV1FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFasterPaymentV1FvEmeaStatus455 creates a FasterPaymentV1FvEmeaStatus455 with default headers values
func NewFasterPaymentV1FvEmeaStatus455() *FasterPaymentV1FvEmeaStatus455 {
	return &FasterPaymentV1FvEmeaStatus455{}
}

/*FasterPaymentV1FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type FasterPaymentV1FvEmeaStatus455 struct {
}

func (o *FasterPaymentV1FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/fasterPayment][%d] fasterPaymentV1FvEmeaStatus455 ", 455)
}

func (o *FasterPaymentV1FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFasterPaymentV1FvEmeaStatus465 creates a FasterPaymentV1FvEmeaStatus465 with default headers values
func NewFasterPaymentV1FvEmeaStatus465() *FasterPaymentV1FvEmeaStatus465 {
	return &FasterPaymentV1FvEmeaStatus465{}
}

/*FasterPaymentV1FvEmeaStatus465 handles this case with default header values.

Backend Response Code and message in odsMessages field: <BR/><BR/>VPE5SPD01S : SERVICE REQUEST LENGTH ERROR<BR/>VPE5SPD03S : CMS FILE-TABLE RECORD NOT FOUND<BR/>VPE5SPD04E : TRANSACTION TYPE MUST BE PYMT OR PYRV<BR/>VPE5SPD05E : FPS ID MUST BE PROVIDED<BR/>VPE5SPD06E : SENDING SORT CODE NOT PROVIDED<BR/>VPE5SPD07E : SENDING ACC NO MUST BE PROVIDED<BR/>VPE5SPD11E : ACCOUNT OR CARD NUMBER REQUIRED<BR/>VPE5SPD12E : CARDorACCOUNT NUMBER NOT FOUND<BR/>VPE5SPD13E : INVALID AMOUNT<BR/>VPE5SPD14E : VALUE DATE IS INVALID<BR/>VPE5SPD15E : AVAILABILITY DATE IS INVALID<BR/>VPE5SPD16E : SOURCE CHANNEL MUST BE PROVIDED<BR/>VPE5SPD17E : FPS RETURN CODE MUST BE NUMERIC<BR/>VPE5SPD18E : SETTL ID MUST BE NUMERIC<BR/>VPE5SPD19E : INVALID TIME STAMP<BR/>VPE5SPD20S : USER IS NOT ALLOWED TO ACCESS THE ORG<BR/>VPE5SPD21S : DUPLICATE PAYMENT<BR/>VPE5SPD22S : PAYMENT REFERENCE NOT FOUND<BR/>VPE5SPD91S : APPLICATION IN NO-PROCESSING STATUS RETRY IN A FEW MINUTES<BR/>VPE5SPDZ2S : BASE SEGMENT FILE READ ERROR<BR/>VPE5SPDZ3S : EMBOSSER DATA FILE READ ERROR<BR/>VPE5SPDZ4S : ERROR UPDATING AMRP FILE<BR/>VPE5SPDZ5S : PROBLEM ENCOUNTERED WHILE PROCESSING MEMO POSTING<BR/>VPE5SPDZ6S : AMCR FILE ACCESS PROBLEM<BR/>VPE5SPDZ7S : AMBS FILE ACCESS PROBLEM<BR/>VPE5SPDZ8S : AMED FILE ACCESS PROBLEM<BR/>VPE5SPDZ9S : AMOA FILE ACCESS PROBLEM<BR/>VPE5SPD24S : AMMC FILE ACCESS PROBLEM<BR/>VPE5SPD28S : LOG FILE ACCESS PROBLEM<BR/>VPE5SPD29S : INVALID COMMAREA PASSED TO AROOLMP<BR/>VPE5SPD30S : WMSW FILE ACCESS ERROR FILE CLOSED<BR/>VPE5SPDZ0S : PAYMENT REFERENCE NOT FOUND<BR/>VPE5SPD9AS : FASTER PAYMENT FILE AZFXorAMRP UNAVAILABLE. AUTO-RETRY IN FEW MIN
*/
type FasterPaymentV1FvEmeaStatus465 struct {
	Payload *models.FsErrorDetails
}

func (o *FasterPaymentV1FvEmeaStatus465) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/fasterPayment][%d] fasterPaymentV1FvEmeaStatus465  %+v", 465, o.Payload)
}

func (o *FasterPaymentV1FvEmeaStatus465) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *FasterPaymentV1FvEmeaStatus465) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
