// Code generated by go-swagger; DO NOT EDIT.

package payments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// RealTimePaymentwithMemoV1FvEmeaReader is a Reader for the RealTimePaymentwithMemoV1FvEmea structure.
type RealTimePaymentwithMemoV1FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RealTimePaymentwithMemoV1FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRealTimePaymentwithMemoV1FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRealTimePaymentwithMemoV1FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRealTimePaymentwithMemoV1FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRealTimePaymentwithMemoV1FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRealTimePaymentwithMemoV1FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewRealTimePaymentwithMemoV1FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewRealTimePaymentwithMemoV1FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewRealTimePaymentwithMemoV1FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewRealTimePaymentwithMemoV1FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRealTimePaymentwithMemoV1FvEmeaOK creates a RealTimePaymentwithMemoV1FvEmeaOK with default headers values
func NewRealTimePaymentwithMemoV1FvEmeaOK() *RealTimePaymentwithMemoV1FvEmeaOK {
	return &RealTimePaymentwithMemoV1FvEmeaOK{}
}

/*RealTimePaymentwithMemoV1FvEmeaOK handles this case with default header values.

successful operation
*/
type RealTimePaymentwithMemoV1FvEmeaOK struct {
	Payload *models.RealTimePaymentwithMemoResponse
}

func (o *RealTimePaymentwithMemoV1FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/realTimePaymentwithMemo][%d] realTimePaymentwithMemoV1FvEmeaOK  %+v", 200, o.Payload)
}

func (o *RealTimePaymentwithMemoV1FvEmeaOK) GetPayload() *models.RealTimePaymentwithMemoResponse {
	return o.Payload
}

func (o *RealTimePaymentwithMemoV1FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RealTimePaymentwithMemoResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRealTimePaymentwithMemoV1FvEmeaBadRequest creates a RealTimePaymentwithMemoV1FvEmeaBadRequest with default headers values
func NewRealTimePaymentwithMemoV1FvEmeaBadRequest() *RealTimePaymentwithMemoV1FvEmeaBadRequest {
	return &RealTimePaymentwithMemoV1FvEmeaBadRequest{}
}

/*RealTimePaymentwithMemoV1FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type RealTimePaymentwithMemoV1FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *RealTimePaymentwithMemoV1FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/realTimePaymentwithMemo][%d] realTimePaymentwithMemoV1FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *RealTimePaymentwithMemoV1FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *RealTimePaymentwithMemoV1FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRealTimePaymentwithMemoV1FvEmeaUnauthorized creates a RealTimePaymentwithMemoV1FvEmeaUnauthorized with default headers values
func NewRealTimePaymentwithMemoV1FvEmeaUnauthorized() *RealTimePaymentwithMemoV1FvEmeaUnauthorized {
	return &RealTimePaymentwithMemoV1FvEmeaUnauthorized{}
}

/*RealTimePaymentwithMemoV1FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type RealTimePaymentwithMemoV1FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *RealTimePaymentwithMemoV1FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/realTimePaymentwithMemo][%d] realTimePaymentwithMemoV1FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *RealTimePaymentwithMemoV1FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *RealTimePaymentwithMemoV1FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRealTimePaymentwithMemoV1FvEmeaForbidden creates a RealTimePaymentwithMemoV1FvEmeaForbidden with default headers values
func NewRealTimePaymentwithMemoV1FvEmeaForbidden() *RealTimePaymentwithMemoV1FvEmeaForbidden {
	return &RealTimePaymentwithMemoV1FvEmeaForbidden{}
}

/*RealTimePaymentwithMemoV1FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type RealTimePaymentwithMemoV1FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *RealTimePaymentwithMemoV1FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/realTimePaymentwithMemo][%d] realTimePaymentwithMemoV1FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *RealTimePaymentwithMemoV1FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *RealTimePaymentwithMemoV1FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRealTimePaymentwithMemoV1FvEmeaNotFound creates a RealTimePaymentwithMemoV1FvEmeaNotFound with default headers values
func NewRealTimePaymentwithMemoV1FvEmeaNotFound() *RealTimePaymentwithMemoV1FvEmeaNotFound {
	return &RealTimePaymentwithMemoV1FvEmeaNotFound{}
}

/*RealTimePaymentwithMemoV1FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type RealTimePaymentwithMemoV1FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *RealTimePaymentwithMemoV1FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/realTimePaymentwithMemo][%d] realTimePaymentwithMemoV1FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *RealTimePaymentwithMemoV1FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *RealTimePaymentwithMemoV1FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRealTimePaymentwithMemoV1FvEmeaTooManyRequests creates a RealTimePaymentwithMemoV1FvEmeaTooManyRequests with default headers values
func NewRealTimePaymentwithMemoV1FvEmeaTooManyRequests() *RealTimePaymentwithMemoV1FvEmeaTooManyRequests {
	return &RealTimePaymentwithMemoV1FvEmeaTooManyRequests{}
}

/*RealTimePaymentwithMemoV1FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type RealTimePaymentwithMemoV1FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *RealTimePaymentwithMemoV1FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/realTimePaymentwithMemo][%d] realTimePaymentwithMemoV1FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *RealTimePaymentwithMemoV1FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *RealTimePaymentwithMemoV1FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRealTimePaymentwithMemoV1FvEmeaStatus452 creates a RealTimePaymentwithMemoV1FvEmeaStatus452 with default headers values
func NewRealTimePaymentwithMemoV1FvEmeaStatus452() *RealTimePaymentwithMemoV1FvEmeaStatus452 {
	return &RealTimePaymentwithMemoV1FvEmeaStatus452{}
}

/*RealTimePaymentwithMemoV1FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type RealTimePaymentwithMemoV1FvEmeaStatus452 struct {
}

func (o *RealTimePaymentwithMemoV1FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/realTimePaymentwithMemo][%d] realTimePaymentwithMemoV1FvEmeaStatus452 ", 452)
}

func (o *RealTimePaymentwithMemoV1FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRealTimePaymentwithMemoV1FvEmeaStatus453 creates a RealTimePaymentwithMemoV1FvEmeaStatus453 with default headers values
func NewRealTimePaymentwithMemoV1FvEmeaStatus453() *RealTimePaymentwithMemoV1FvEmeaStatus453 {
	return &RealTimePaymentwithMemoV1FvEmeaStatus453{}
}

/*RealTimePaymentwithMemoV1FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type RealTimePaymentwithMemoV1FvEmeaStatus453 struct {
}

func (o *RealTimePaymentwithMemoV1FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/realTimePaymentwithMemo][%d] realTimePaymentwithMemoV1FvEmeaStatus453 ", 453)
}

func (o *RealTimePaymentwithMemoV1FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRealTimePaymentwithMemoV1FvEmeaStatus455 creates a RealTimePaymentwithMemoV1FvEmeaStatus455 with default headers values
func NewRealTimePaymentwithMemoV1FvEmeaStatus455() *RealTimePaymentwithMemoV1FvEmeaStatus455 {
	return &RealTimePaymentwithMemoV1FvEmeaStatus455{}
}

/*RealTimePaymentwithMemoV1FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type RealTimePaymentwithMemoV1FvEmeaStatus455 struct {
}

func (o *RealTimePaymentwithMemoV1FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/realTimePaymentwithMemo][%d] realTimePaymentwithMemoV1FvEmeaStatus455 ", 455)
}

func (o *RealTimePaymentwithMemoV1FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
