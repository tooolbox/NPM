// Code generated by go-swagger; DO NOT EDIT.

package card_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// PinReminderV1FvEmeaReader is a Reader for the PinReminderV1FvEmea structure.
type PinReminderV1FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PinReminderV1FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPinReminderV1FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPinReminderV1FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPinReminderV1FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPinReminderV1FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPinReminderV1FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPinReminderV1FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewPinReminderV1FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewPinReminderV1FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewPinReminderV1FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 465:
		result := NewPinReminderV1FvEmeaStatus465()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPinReminderV1FvEmeaOK creates a PinReminderV1FvEmeaOK with default headers values
func NewPinReminderV1FvEmeaOK() *PinReminderV1FvEmeaOK {
	return &PinReminderV1FvEmeaOK{}
}

/*PinReminderV1FvEmeaOK handles this case with default header values.

successful operation
*/
type PinReminderV1FvEmeaOK struct {
	Payload *models.PinReminderResponse
}

func (o *PinReminderV1FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/pinReminder][%d] pinReminderV1FvEmeaOK  %+v", 200, o.Payload)
}

func (o *PinReminderV1FvEmeaOK) GetPayload() *models.PinReminderResponse {
	return o.Payload
}

func (o *PinReminderV1FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PinReminderResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPinReminderV1FvEmeaBadRequest creates a PinReminderV1FvEmeaBadRequest with default headers values
func NewPinReminderV1FvEmeaBadRequest() *PinReminderV1FvEmeaBadRequest {
	return &PinReminderV1FvEmeaBadRequest{}
}

/*PinReminderV1FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type PinReminderV1FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *PinReminderV1FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/pinReminder][%d] pinReminderV1FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *PinReminderV1FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *PinReminderV1FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPinReminderV1FvEmeaUnauthorized creates a PinReminderV1FvEmeaUnauthorized with default headers values
func NewPinReminderV1FvEmeaUnauthorized() *PinReminderV1FvEmeaUnauthorized {
	return &PinReminderV1FvEmeaUnauthorized{}
}

/*PinReminderV1FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type PinReminderV1FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *PinReminderV1FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/pinReminder][%d] pinReminderV1FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *PinReminderV1FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *PinReminderV1FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPinReminderV1FvEmeaForbidden creates a PinReminderV1FvEmeaForbidden with default headers values
func NewPinReminderV1FvEmeaForbidden() *PinReminderV1FvEmeaForbidden {
	return &PinReminderV1FvEmeaForbidden{}
}

/*PinReminderV1FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type PinReminderV1FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *PinReminderV1FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/pinReminder][%d] pinReminderV1FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *PinReminderV1FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *PinReminderV1FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPinReminderV1FvEmeaNotFound creates a PinReminderV1FvEmeaNotFound with default headers values
func NewPinReminderV1FvEmeaNotFound() *PinReminderV1FvEmeaNotFound {
	return &PinReminderV1FvEmeaNotFound{}
}

/*PinReminderV1FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type PinReminderV1FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *PinReminderV1FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/pinReminder][%d] pinReminderV1FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *PinReminderV1FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *PinReminderV1FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPinReminderV1FvEmeaTooManyRequests creates a PinReminderV1FvEmeaTooManyRequests with default headers values
func NewPinReminderV1FvEmeaTooManyRequests() *PinReminderV1FvEmeaTooManyRequests {
	return &PinReminderV1FvEmeaTooManyRequests{}
}

/*PinReminderV1FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type PinReminderV1FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *PinReminderV1FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/pinReminder][%d] pinReminderV1FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *PinReminderV1FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *PinReminderV1FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPinReminderV1FvEmeaStatus452 creates a PinReminderV1FvEmeaStatus452 with default headers values
func NewPinReminderV1FvEmeaStatus452() *PinReminderV1FvEmeaStatus452 {
	return &PinReminderV1FvEmeaStatus452{}
}

/*PinReminderV1FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type PinReminderV1FvEmeaStatus452 struct {
}

func (o *PinReminderV1FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/pinReminder][%d] pinReminderV1FvEmeaStatus452 ", 452)
}

func (o *PinReminderV1FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPinReminderV1FvEmeaStatus453 creates a PinReminderV1FvEmeaStatus453 with default headers values
func NewPinReminderV1FvEmeaStatus453() *PinReminderV1FvEmeaStatus453 {
	return &PinReminderV1FvEmeaStatus453{}
}

/*PinReminderV1FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type PinReminderV1FvEmeaStatus453 struct {
}

func (o *PinReminderV1FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/pinReminder][%d] pinReminderV1FvEmeaStatus453 ", 453)
}

func (o *PinReminderV1FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPinReminderV1FvEmeaStatus455 creates a PinReminderV1FvEmeaStatus455 with default headers values
func NewPinReminderV1FvEmeaStatus455() *PinReminderV1FvEmeaStatus455 {
	return &PinReminderV1FvEmeaStatus455{}
}

/*PinReminderV1FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type PinReminderV1FvEmeaStatus455 struct {
}

func (o *PinReminderV1FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/pinReminder][%d] pinReminderV1FvEmeaStatus455 ", 455)
}

func (o *PinReminderV1FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPinReminderV1FvEmeaStatus465 creates a PinReminderV1FvEmeaStatus465 with default headers values
func NewPinReminderV1FvEmeaStatus465() *PinReminderV1FvEmeaStatus465 {
	return &PinReminderV1FvEmeaStatus465{}
}

/*PinReminderV1FvEmeaStatus465 handles this case with default header values.

Backend Response Code and message in odsMessages field: <BR/><BR/>VPE5SPM02S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPE5SPM03S : APPLICATION IN NO-PROCESSING STATUS RETRY IN A FEW MINUTES<BR/>VPE5SPM04S : CARDS REQUESTED MUST BE NUMERIC AND MUST NOT BE GREATER THAN 20<BR/>VPE5SPM05S : SERVICE COULD NOT OBTAIN STORAGE AREA<BR/>VPE5SPM06S : SERVICE INPUT TO CARD ACTIVATED SERVICE IS AN INCORRECT LENGTH<BR/>VPL5SPRZAS : LOGO FILE UNAVAILABLE<BR/>VPL5SPRZ1S : SERVICE COULD NOT OBTAIN STORAGE AREA<BR/>VPL5SPRZ2S : SERVICE INPUT TO CARD ACTION UPD SERVICE IS AN INCORRECT LENGTH<BR/>VPL5SPRZ4S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPL5SPRZ5S : INVALID ORG<BR/>VPL5SPRZ6S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES<BR/>VPL5SPRZ7S : ORGANIZATION FILE UNAVAILABLE<BR/>VPL5SPRZ8S : CARD FILE UNAVAILABLE<BR/>VPL5SPRZ9S : ACCOUNT FILE UNAVAILABLE<BR/>VPL5SPR01E : ORGANIZATION NUMBER MUST BE NUMERIC AND VALID VALUES ARE 001-998<BR/>VPL5SPR01S : REQUESTED CARDorACCOUNT NUMBER IS NOT FOUND<BR/>VPL5SPR02E : ACCOUNT NUMBER IS NOT NUMERIC OR EQUALS SPACES<BR/>VPL5SPR02S : ORG NUMBER NOT FOUND<BR/>VPL5SPR03E : CARD SEQUENCE IS NOT NUMERIC<BR/>VPL5SPR03S : REQUEST FOR LOCAL ORG BUT PASSED FOREIGN ORG<BR/>VPL5SPR04E : INVALID INPUT CARD ACTION - VALID VALUES ARE 0 TO 6<BR/>VPL5SPR04S : CARD NUMBER NOT FOUND<BR/>VPL5SPR05E : NUMBER OF CARDS REQUESTED IS NOT NUMERIC<BR/>VPL5SPR05S : ACCOUNT NUMBER NOT FOUND<BR/>VPL5SPR06E : NUMBER OF CARDS RETURNED IS NOT NUMERIC<BR/>VPL5SPR06S : LOGO NUMBER NOT FOUND<BR/>VPL5SPR07S : ACTION OF '2' IS  NOT ALLOWED FOR SMART CARD<BR/>VPL5SPR08S : ACTION OF '1' ALLOWED ONLY IF THE DATE LAST PLASTIC IS ZERO<BR/>VPL5SPR09S : INVALID ACTIONVALID ACTION IS 0 OR 1 WHEN DATE LAST PLASTIC ZERO<BR/>VPL5SPR10S : # CARD REQ MUST BE GREATER THAN ZERO FOR ACTION 1 OR 2 OR 3 OR 6 WHEN MAG STRIPE CARD<BR/>VPL5SPR11S : NBR OF CARD RETURNED MUST BE GREATER THAN ZERO WHEN ACTION OF '4'<BR/>VPL5SPR12S : NBR OF CRDS RETURNED CAN NOT BE GREATER THAN THE NBR OUTSTANDING<BR/>VPL5SPR13S : # CARD REQ CAN NOT BE GREATER THAN # OUTSTANDNG FOR ACTION 3 OR 6<BR/>VPL5SPR14S : CARD CANNOT BE REISSUED - SEQ OUT OF RANGE FOR SMART CARD<BR/>VPL5SPR15S : CANNOT REISSUE EMBOSSER WITH STATUS OF 'S' FOR SMART CARD<BR/>VPL5SPR16S : SMART CARD EMBOSSING RECORD NOT FOUND<BR/>VPL5SPR17S : CARD REQUESTED MUST BE ZERO WHEN ACTION 0 OR 4 OR 5<BR/>VPL5SPR18S : ONLY ACTION OF '4' ALLOWED NBR CARD RETURNED GREATER THAN ZERO<BR/>VPL5SPR19S : INVALID NUMBER REQUEST FOR SMART CARD VALID VALUE IS  '1'<BR/>VPL5SPR20S : SMART CARD PROGRAM NOT FOUND<BR/>VPL5SPR21S : INVALID SEQ NBR FOR CARD SCHEME '3' - VALID VALUE IS '0' OR '1'<BR/>VPL5SPR22S : SEQ NBR MUST BE GREATER THAN ZERO FOR CARD SCHEME 0 OR 1 OR
*/
type PinReminderV1FvEmeaStatus465 struct {
	Payload *models.FsErrorDetails
}

func (o *PinReminderV1FvEmeaStatus465) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/pinReminder][%d] pinReminderV1FvEmeaStatus465  %+v", 465, o.Payload)
}

func (o *PinReminderV1FvEmeaStatus465) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *PinReminderV1FvEmeaStatus465) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
