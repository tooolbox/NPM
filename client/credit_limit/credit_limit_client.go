// Code generated by go-swagger; DO NOT EDIT.

package credit_limit

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new credit limit API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for credit limit API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	CreditLimitDriverInquiryV1FvEmea(params *CreditLimitDriverInquiryV1FvEmeaParams) (*CreditLimitDriverInquiryV1FvEmeaOK, error)

	CreditLimitDriverInquiryV2FvEmea(params *CreditLimitDriverInquiryV2FvEmeaParams) (*CreditLimitDriverInquiryV2FvEmeaOK, error)

	CreditLimitOfferAcceptUpdateV1FvEmea(params *CreditLimitOfferAcceptUpdateV1FvEmeaParams) (*CreditLimitOfferAcceptUpdateV1FvEmeaOK, error)

	CreditLimitUpdateV1FvEmea(params *CreditLimitUpdateV1FvEmeaParams) (*CreditLimitUpdateV1FvEmeaOK, error)

	TemporaryCreditLimitUpdateV1FvEmea(params *TemporaryCreditLimitUpdateV1FvEmeaParams) (*TemporaryCreditLimitUpdateV1FvEmeaOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  CreditLimitDriverInquiryV1FvEmea credits limit driver inquiry

  This service is deprecated and will be supported until January 2021. The new version contains changes in date formats of certain fields to Gregorian (YYYYMMDD). Please switch to Version 2 of this API before that time. <BR/><BR/>This service performs two different functions. Firstly for the user to call TRIAD by entering the Card or Account Number with the desired credit limit amount, the service will return the TRIAD recommended credit limit the AMBS Account Number, and a CHECKSUM field in the Response Message. <p>Secondly the user resubmits the message with the TRIAD recommended credit limit, account number and CHECKSUM field, and an override reason if applicable for which the ASM operator limits will be checked. Note that an ASM Action Code must be set up for CRLIM in order for a Memo to be generated and the Reps ID must be set up in ASM.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) CreditLimitDriverInquiryV1FvEmea(params *CreditLimitDriverInquiryV1FvEmeaParams) (*CreditLimitDriverInquiryV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreditLimitDriverInquiryV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "creditLimitDriverInquiry_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/creditLimitDriverInquiry",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreditLimitDriverInquiryV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreditLimitDriverInquiryV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for creditLimitDriverInquiry_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CreditLimitDriverInquiryV2FvEmea credits limit driver inquiry

  This service performs two different functions. Firstly for the user to call TRIAD by entering the Card or Account Number with the desired credit limit amount, the service will return the TRIAD recommended credit limit the AMBS Account Number, and a CHECKSUM field in the Response Message. <p>Secondly the user resubmits the message with the TRIAD recommended credit limit, account number and CHECKSUM field, and an override reason if applicable for which the ASM operator limits will be checked. Note that an ASM Action Code must be set up for CRLIM in order for a Memo to be generated and the Reps ID must be set up in ASM.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) CreditLimitDriverInquiryV2FvEmea(params *CreditLimitDriverInquiryV2FvEmeaParams) (*CreditLimitDriverInquiryV2FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreditLimitDriverInquiryV2FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "creditLimitDriverInquiry_v2_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v2/creditLimitDriverInquiry",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreditLimitDriverInquiryV2FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreditLimitDriverInquiryV2FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for creditLimitDriverInquiry_v2_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CreditLimitOfferAcceptUpdateV1FvEmea credits limit offer accept update

  The Credit Limit Offer Update service enables a calling program to perform updates when a credit limit offer is accepted or declined using IVR. The input service would contain the same information as normal account-level maintenance services i.e. Account Number or Card Number etc and a value of either A or D for the Outcome field maintenance.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) CreditLimitOfferAcceptUpdateV1FvEmea(params *CreditLimitOfferAcceptUpdateV1FvEmeaParams) (*CreditLimitOfferAcceptUpdateV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreditLimitOfferAcceptUpdateV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "creditLimitOfferAcceptUpdate_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/creditLimitOfferAcceptUpdate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreditLimitOfferAcceptUpdateV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreditLimitOfferAcceptUpdateV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for creditLimitOfferAcceptUpdate_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CreditLimitUpdateV1FvEmea credits limit update

  This service is used to update the credit limit of the cardholder's account. The service can also be used to update the available credit for relationship when the Credit limit is changed to any of the accounts tied to that relationship. The input request can have either card number or FirstVision account number but the credit limit update will be applied on the account level.<p><p>In the response message, system returns the resulting account open-to-buy amount based on the updated credit limit, account number, updated credit limit.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) CreditLimitUpdateV1FvEmea(params *CreditLimitUpdateV1FvEmeaParams) (*CreditLimitUpdateV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreditLimitUpdateV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "creditLimitUpdate_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/creditLimitUpdate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreditLimitUpdateV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreditLimitUpdateV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for creditLimitUpdate_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TemporaryCreditLimitUpdateV1FvEmea temporaries credit limit update

  This service will emulate functionality used to update the TEMP CREDIT LINE and associated EXPIRES field on the Account Base Segment ARMB06 screen. In addition, the service output message will include the resulting account Open To Buy amount based on the temporary credit limit.
*/
func (a *Client) TemporaryCreditLimitUpdateV1FvEmea(params *TemporaryCreditLimitUpdateV1FvEmeaParams) (*TemporaryCreditLimitUpdateV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTemporaryCreditLimitUpdateV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "temporaryCreditLimitUpdate_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/temporaryCreditLimitUpdate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TemporaryCreditLimitUpdateV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*TemporaryCreditLimitUpdateV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for temporaryCreditLimitUpdate_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
