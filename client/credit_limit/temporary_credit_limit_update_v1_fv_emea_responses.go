// Code generated by go-swagger; DO NOT EDIT.

package credit_limit

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// TemporaryCreditLimitUpdateV1FvEmeaReader is a Reader for the TemporaryCreditLimitUpdateV1FvEmea structure.
type TemporaryCreditLimitUpdateV1FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TemporaryCreditLimitUpdateV1FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTemporaryCreditLimitUpdateV1FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewTemporaryCreditLimitUpdateV1FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewTemporaryCreditLimitUpdateV1FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewTemporaryCreditLimitUpdateV1FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewTemporaryCreditLimitUpdateV1FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewTemporaryCreditLimitUpdateV1FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewTemporaryCreditLimitUpdateV1FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewTemporaryCreditLimitUpdateV1FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewTemporaryCreditLimitUpdateV1FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 465:
		result := NewTemporaryCreditLimitUpdateV1FvEmeaStatus465()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewTemporaryCreditLimitUpdateV1FvEmeaOK creates a TemporaryCreditLimitUpdateV1FvEmeaOK with default headers values
func NewTemporaryCreditLimitUpdateV1FvEmeaOK() *TemporaryCreditLimitUpdateV1FvEmeaOK {
	return &TemporaryCreditLimitUpdateV1FvEmeaOK{}
}

/*TemporaryCreditLimitUpdateV1FvEmeaOK handles this case with default header values.

successful operation
*/
type TemporaryCreditLimitUpdateV1FvEmeaOK struct {
	Payload *models.TemporaryCreditLimitUpdateResponse
}

func (o *TemporaryCreditLimitUpdateV1FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/temporaryCreditLimitUpdate][%d] temporaryCreditLimitUpdateV1FvEmeaOK  %+v", 200, o.Payload)
}

func (o *TemporaryCreditLimitUpdateV1FvEmeaOK) GetPayload() *models.TemporaryCreditLimitUpdateResponse {
	return o.Payload
}

func (o *TemporaryCreditLimitUpdateV1FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TemporaryCreditLimitUpdateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTemporaryCreditLimitUpdateV1FvEmeaBadRequest creates a TemporaryCreditLimitUpdateV1FvEmeaBadRequest with default headers values
func NewTemporaryCreditLimitUpdateV1FvEmeaBadRequest() *TemporaryCreditLimitUpdateV1FvEmeaBadRequest {
	return &TemporaryCreditLimitUpdateV1FvEmeaBadRequest{}
}

/*TemporaryCreditLimitUpdateV1FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type TemporaryCreditLimitUpdateV1FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *TemporaryCreditLimitUpdateV1FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/temporaryCreditLimitUpdate][%d] temporaryCreditLimitUpdateV1FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *TemporaryCreditLimitUpdateV1FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *TemporaryCreditLimitUpdateV1FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTemporaryCreditLimitUpdateV1FvEmeaUnauthorized creates a TemporaryCreditLimitUpdateV1FvEmeaUnauthorized with default headers values
func NewTemporaryCreditLimitUpdateV1FvEmeaUnauthorized() *TemporaryCreditLimitUpdateV1FvEmeaUnauthorized {
	return &TemporaryCreditLimitUpdateV1FvEmeaUnauthorized{}
}

/*TemporaryCreditLimitUpdateV1FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type TemporaryCreditLimitUpdateV1FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *TemporaryCreditLimitUpdateV1FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/temporaryCreditLimitUpdate][%d] temporaryCreditLimitUpdateV1FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *TemporaryCreditLimitUpdateV1FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *TemporaryCreditLimitUpdateV1FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTemporaryCreditLimitUpdateV1FvEmeaForbidden creates a TemporaryCreditLimitUpdateV1FvEmeaForbidden with default headers values
func NewTemporaryCreditLimitUpdateV1FvEmeaForbidden() *TemporaryCreditLimitUpdateV1FvEmeaForbidden {
	return &TemporaryCreditLimitUpdateV1FvEmeaForbidden{}
}

/*TemporaryCreditLimitUpdateV1FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type TemporaryCreditLimitUpdateV1FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *TemporaryCreditLimitUpdateV1FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/temporaryCreditLimitUpdate][%d] temporaryCreditLimitUpdateV1FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *TemporaryCreditLimitUpdateV1FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *TemporaryCreditLimitUpdateV1FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTemporaryCreditLimitUpdateV1FvEmeaNotFound creates a TemporaryCreditLimitUpdateV1FvEmeaNotFound with default headers values
func NewTemporaryCreditLimitUpdateV1FvEmeaNotFound() *TemporaryCreditLimitUpdateV1FvEmeaNotFound {
	return &TemporaryCreditLimitUpdateV1FvEmeaNotFound{}
}

/*TemporaryCreditLimitUpdateV1FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type TemporaryCreditLimitUpdateV1FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *TemporaryCreditLimitUpdateV1FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/temporaryCreditLimitUpdate][%d] temporaryCreditLimitUpdateV1FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *TemporaryCreditLimitUpdateV1FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *TemporaryCreditLimitUpdateV1FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTemporaryCreditLimitUpdateV1FvEmeaTooManyRequests creates a TemporaryCreditLimitUpdateV1FvEmeaTooManyRequests with default headers values
func NewTemporaryCreditLimitUpdateV1FvEmeaTooManyRequests() *TemporaryCreditLimitUpdateV1FvEmeaTooManyRequests {
	return &TemporaryCreditLimitUpdateV1FvEmeaTooManyRequests{}
}

/*TemporaryCreditLimitUpdateV1FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type TemporaryCreditLimitUpdateV1FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *TemporaryCreditLimitUpdateV1FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/temporaryCreditLimitUpdate][%d] temporaryCreditLimitUpdateV1FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *TemporaryCreditLimitUpdateV1FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *TemporaryCreditLimitUpdateV1FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTemporaryCreditLimitUpdateV1FvEmeaStatus452 creates a TemporaryCreditLimitUpdateV1FvEmeaStatus452 with default headers values
func NewTemporaryCreditLimitUpdateV1FvEmeaStatus452() *TemporaryCreditLimitUpdateV1FvEmeaStatus452 {
	return &TemporaryCreditLimitUpdateV1FvEmeaStatus452{}
}

/*TemporaryCreditLimitUpdateV1FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type TemporaryCreditLimitUpdateV1FvEmeaStatus452 struct {
}

func (o *TemporaryCreditLimitUpdateV1FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/temporaryCreditLimitUpdate][%d] temporaryCreditLimitUpdateV1FvEmeaStatus452 ", 452)
}

func (o *TemporaryCreditLimitUpdateV1FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTemporaryCreditLimitUpdateV1FvEmeaStatus453 creates a TemporaryCreditLimitUpdateV1FvEmeaStatus453 with default headers values
func NewTemporaryCreditLimitUpdateV1FvEmeaStatus453() *TemporaryCreditLimitUpdateV1FvEmeaStatus453 {
	return &TemporaryCreditLimitUpdateV1FvEmeaStatus453{}
}

/*TemporaryCreditLimitUpdateV1FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type TemporaryCreditLimitUpdateV1FvEmeaStatus453 struct {
}

func (o *TemporaryCreditLimitUpdateV1FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/temporaryCreditLimitUpdate][%d] temporaryCreditLimitUpdateV1FvEmeaStatus453 ", 453)
}

func (o *TemporaryCreditLimitUpdateV1FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTemporaryCreditLimitUpdateV1FvEmeaStatus455 creates a TemporaryCreditLimitUpdateV1FvEmeaStatus455 with default headers values
func NewTemporaryCreditLimitUpdateV1FvEmeaStatus455() *TemporaryCreditLimitUpdateV1FvEmeaStatus455 {
	return &TemporaryCreditLimitUpdateV1FvEmeaStatus455{}
}

/*TemporaryCreditLimitUpdateV1FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type TemporaryCreditLimitUpdateV1FvEmeaStatus455 struct {
}

func (o *TemporaryCreditLimitUpdateV1FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/temporaryCreditLimitUpdate][%d] temporaryCreditLimitUpdateV1FvEmeaStatus455 ", 455)
}

func (o *TemporaryCreditLimitUpdateV1FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTemporaryCreditLimitUpdateV1FvEmeaStatus465 creates a TemporaryCreditLimitUpdateV1FvEmeaStatus465 with default headers values
func NewTemporaryCreditLimitUpdateV1FvEmeaStatus465() *TemporaryCreditLimitUpdateV1FvEmeaStatus465 {
	return &TemporaryCreditLimitUpdateV1FvEmeaStatus465{}
}

/*TemporaryCreditLimitUpdateV1FvEmeaStatus465 handles this case with default header values.

Backend Response Code and message in odsMessages field: <BR/><BR/>VPL5STC02S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES<BR/>VPL5STC03E : ORGANIZATION IS NOT NUMERIC OR MUST BE VALUE BETWEEN 000 AND 998<BR/>VPL5STC04E : REQUESTED CARDorACCT NUMBER IS NOT NUMERIC OR EQUAL SPACES<BR/>VPL5STC05E : INVALID FOREIGN USE INDICATOR - VALID VALUES ARE SPACE 0 OR 1   INVALID FOREIGN USE INDICATOR SPECIFIED - VALID VALUES ARE       SPACE 0 OR 1<BR/>VPL5STC06E : TEMP CREDIT LIMIT - DOES NOT CONFORM TO CURRENCY NOD<BR/>VPL5STC07E : TEMP CREDIT LIMIT MUST BE NUMERIC AND GREATER THAN ZEROS<BR/>VPL5STC08E : TEMP CREDIT LIMIT EXPIRES DATE IS NOT NUMERIC<BR/>VPL5STC09E : EXPIRES DATE MUST BE A VALID DATE AND GREATER THAN ZERO<BR/>VPL5STC10E : TEMP CREDIT LIMIT AND EXPIRES DATE ARE REQUIRED INPUT<BR/>VPL5STC11I : TEMP CREDIT LIMIT AND EXPIRES DATE UNCHANGED UPDATE BYPASSED<BR/>VPL5STC12S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES<BR/>VPL5STC13S : ORGANIZATION NOT FOUND ON FILE<BR/>VPL5STC14S : FOREIGN ORGANIZATION NOT FOUND ON FILE<BR/>VPL5STC15S : ACCOUNT NOT FOUND ON FILE<BR/>VPL5STC16S : RELATIONSHIP ACCOUNT NOT FOUND ON FILE<BR/>VPL5STC17S : LOGO NOT FOUND ON FILE<BR/>VPL5STC18E : TEMP CREDIT LIMIT INVALID FOR PREPAIDorDEBIT ACCOUNT TYPES<BR/>VPL5STC19E : EXPIRES DATE INVALID FOR PREPAIDorDEBIT ACCOUNT TYPES<BR/>VPL5STC20E : TEMP CREDIT LIMIT INVALID FOR RELATIONSHIP SUB-ACCOUNT<BR/>VPL5STC21E : TEMP CREDIT LIMIT CAN NOT EXCEED LOGO CREDIT LIMIT<BR/>VPL5STC23E : TEMP CREDIT LIMIT MATCHES NORMAL LIMIT OR CURRENT TEMP LIMIT<BR/>VPL5STC24E : EXPIRES DATE MUST BE EQUAL OR GREATER APPLICATION PROCESSING DT<BR/>VPL5STC23I : FOREIGN USE ORG UNAVAILABLE PROCESSED LOCAL ORG ACCOUNT DATA<BR/>VPL5STCZ1S : SERVICE COULD NOT OBTAIN STORAGE AREA<BR/>VPL5STCZ2S : SERVICE INPUT TO TEMP CRLIMIT SERVICE IS AN INCORRECT LENGTH<BR/>VPL5STCZ3S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPL5STCZ4S : REQUESTED ORGANIZATION COULD NOT BE DETERMINED<BR/>VPL5STCZ5S : REQUESTED ORGANIZATION NOT FOUND<BR/>VPL5STCZ6S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUN
*/
type TemporaryCreditLimitUpdateV1FvEmeaStatus465 struct {
	Payload *models.FsErrorDetails
}

func (o *TemporaryCreditLimitUpdateV1FvEmeaStatus465) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/temporaryCreditLimitUpdate][%d] temporaryCreditLimitUpdateV1FvEmeaStatus465  %+v", 465, o.Payload)
}

func (o *TemporaryCreditLimitUpdateV1FvEmeaStatus465) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *TemporaryCreditLimitUpdateV1FvEmeaStatus465) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
