// Code generated by go-swagger; DO NOT EDIT.

package credit_limit

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// CreditLimitDriverInquiryV2FvEmeaReader is a Reader for the CreditLimitDriverInquiryV2FvEmea structure.
type CreditLimitDriverInquiryV2FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreditLimitDriverInquiryV2FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreditLimitDriverInquiryV2FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreditLimitDriverInquiryV2FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreditLimitDriverInquiryV2FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreditLimitDriverInquiryV2FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreditLimitDriverInquiryV2FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreditLimitDriverInquiryV2FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewCreditLimitDriverInquiryV2FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewCreditLimitDriverInquiryV2FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewCreditLimitDriverInquiryV2FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 465:
		result := NewCreditLimitDriverInquiryV2FvEmeaStatus465()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreditLimitDriverInquiryV2FvEmeaOK creates a CreditLimitDriverInquiryV2FvEmeaOK with default headers values
func NewCreditLimitDriverInquiryV2FvEmeaOK() *CreditLimitDriverInquiryV2FvEmeaOK {
	return &CreditLimitDriverInquiryV2FvEmeaOK{}
}

/*CreditLimitDriverInquiryV2FvEmeaOK handles this case with default header values.

successful operation
*/
type CreditLimitDriverInquiryV2FvEmeaOK struct {
	Payload *models.CreditLimitDriverInquiryResponse2
}

func (o *CreditLimitDriverInquiryV2FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/creditLimitDriverInquiry][%d] creditLimitDriverInquiryV2FvEmeaOK  %+v", 200, o.Payload)
}

func (o *CreditLimitDriverInquiryV2FvEmeaOK) GetPayload() *models.CreditLimitDriverInquiryResponse2 {
	return o.Payload
}

func (o *CreditLimitDriverInquiryV2FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreditLimitDriverInquiryResponse2)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreditLimitDriverInquiryV2FvEmeaBadRequest creates a CreditLimitDriverInquiryV2FvEmeaBadRequest with default headers values
func NewCreditLimitDriverInquiryV2FvEmeaBadRequest() *CreditLimitDriverInquiryV2FvEmeaBadRequest {
	return &CreditLimitDriverInquiryV2FvEmeaBadRequest{}
}

/*CreditLimitDriverInquiryV2FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type CreditLimitDriverInquiryV2FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *CreditLimitDriverInquiryV2FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/creditLimitDriverInquiry][%d] creditLimitDriverInquiryV2FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *CreditLimitDriverInquiryV2FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *CreditLimitDriverInquiryV2FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreditLimitDriverInquiryV2FvEmeaUnauthorized creates a CreditLimitDriverInquiryV2FvEmeaUnauthorized with default headers values
func NewCreditLimitDriverInquiryV2FvEmeaUnauthorized() *CreditLimitDriverInquiryV2FvEmeaUnauthorized {
	return &CreditLimitDriverInquiryV2FvEmeaUnauthorized{}
}

/*CreditLimitDriverInquiryV2FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type CreditLimitDriverInquiryV2FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *CreditLimitDriverInquiryV2FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/creditLimitDriverInquiry][%d] creditLimitDriverInquiryV2FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *CreditLimitDriverInquiryV2FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *CreditLimitDriverInquiryV2FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreditLimitDriverInquiryV2FvEmeaForbidden creates a CreditLimitDriverInquiryV2FvEmeaForbidden with default headers values
func NewCreditLimitDriverInquiryV2FvEmeaForbidden() *CreditLimitDriverInquiryV2FvEmeaForbidden {
	return &CreditLimitDriverInquiryV2FvEmeaForbidden{}
}

/*CreditLimitDriverInquiryV2FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type CreditLimitDriverInquiryV2FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *CreditLimitDriverInquiryV2FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/creditLimitDriverInquiry][%d] creditLimitDriverInquiryV2FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *CreditLimitDriverInquiryV2FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *CreditLimitDriverInquiryV2FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreditLimitDriverInquiryV2FvEmeaNotFound creates a CreditLimitDriverInquiryV2FvEmeaNotFound with default headers values
func NewCreditLimitDriverInquiryV2FvEmeaNotFound() *CreditLimitDriverInquiryV2FvEmeaNotFound {
	return &CreditLimitDriverInquiryV2FvEmeaNotFound{}
}

/*CreditLimitDriverInquiryV2FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type CreditLimitDriverInquiryV2FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *CreditLimitDriverInquiryV2FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/creditLimitDriverInquiry][%d] creditLimitDriverInquiryV2FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *CreditLimitDriverInquiryV2FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *CreditLimitDriverInquiryV2FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreditLimitDriverInquiryV2FvEmeaTooManyRequests creates a CreditLimitDriverInquiryV2FvEmeaTooManyRequests with default headers values
func NewCreditLimitDriverInquiryV2FvEmeaTooManyRequests() *CreditLimitDriverInquiryV2FvEmeaTooManyRequests {
	return &CreditLimitDriverInquiryV2FvEmeaTooManyRequests{}
}

/*CreditLimitDriverInquiryV2FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type CreditLimitDriverInquiryV2FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *CreditLimitDriverInquiryV2FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/creditLimitDriverInquiry][%d] creditLimitDriverInquiryV2FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *CreditLimitDriverInquiryV2FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *CreditLimitDriverInquiryV2FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreditLimitDriverInquiryV2FvEmeaStatus452 creates a CreditLimitDriverInquiryV2FvEmeaStatus452 with default headers values
func NewCreditLimitDriverInquiryV2FvEmeaStatus452() *CreditLimitDriverInquiryV2FvEmeaStatus452 {
	return &CreditLimitDriverInquiryV2FvEmeaStatus452{}
}

/*CreditLimitDriverInquiryV2FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type CreditLimitDriverInquiryV2FvEmeaStatus452 struct {
}

func (o *CreditLimitDriverInquiryV2FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/creditLimitDriverInquiry][%d] creditLimitDriverInquiryV2FvEmeaStatus452 ", 452)
}

func (o *CreditLimitDriverInquiryV2FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreditLimitDriverInquiryV2FvEmeaStatus453 creates a CreditLimitDriverInquiryV2FvEmeaStatus453 with default headers values
func NewCreditLimitDriverInquiryV2FvEmeaStatus453() *CreditLimitDriverInquiryV2FvEmeaStatus453 {
	return &CreditLimitDriverInquiryV2FvEmeaStatus453{}
}

/*CreditLimitDriverInquiryV2FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type CreditLimitDriverInquiryV2FvEmeaStatus453 struct {
}

func (o *CreditLimitDriverInquiryV2FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/creditLimitDriverInquiry][%d] creditLimitDriverInquiryV2FvEmeaStatus453 ", 453)
}

func (o *CreditLimitDriverInquiryV2FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreditLimitDriverInquiryV2FvEmeaStatus455 creates a CreditLimitDriverInquiryV2FvEmeaStatus455 with default headers values
func NewCreditLimitDriverInquiryV2FvEmeaStatus455() *CreditLimitDriverInquiryV2FvEmeaStatus455 {
	return &CreditLimitDriverInquiryV2FvEmeaStatus455{}
}

/*CreditLimitDriverInquiryV2FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type CreditLimitDriverInquiryV2FvEmeaStatus455 struct {
}

func (o *CreditLimitDriverInquiryV2FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/creditLimitDriverInquiry][%d] creditLimitDriverInquiryV2FvEmeaStatus455 ", 455)
}

func (o *CreditLimitDriverInquiryV2FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreditLimitDriverInquiryV2FvEmeaStatus465 creates a CreditLimitDriverInquiryV2FvEmeaStatus465 with default headers values
func NewCreditLimitDriverInquiryV2FvEmeaStatus465() *CreditLimitDriverInquiryV2FvEmeaStatus465 {
	return &CreditLimitDriverInquiryV2FvEmeaStatus465{}
}

/*CreditLimitDriverInquiryV2FvEmeaStatus465 handles this case with default header values.

Backend Response Code and message in odsMessages field: <BR/><BR/>VPE5SDC01S : SERVICE COULD NOT OBTAIN STORAGE AREA<BR/>VPE5SDC02S : SERVICE INPUT TO AB SERVICE IS AN INCORRECT LENGTH<BR/>VPE5SDC04S : FILE-TABLE USED BY THIS SERVICE IS MISSING<BR/>VPE5SDC05S : CMS IS NO-PROCESSING STATE RE-TRY REQUEST IN A FEW MINUTES<BR/>VPE5SDC06E : ORGANIZATION NUMBER MUST BE NUMERIC AND VALID VALUES 001-998<BR/>VPE5SDC07S : ACCOUNT NUMBER SHOULD BE PROVIDED AND IT SHOULD BE NUMERIC<BR/>VPE5SDC08S : DUAL INDICATOR IS INVALID<BR/>VPE5SDC09S : CREDIT LIMIT REQ IS INVALID<BR/>VPE5SDC10S : INVALID ACTION TYPE<BR/>VPE5SDC11S : CHECKSUM SHOULD BE VALID VALUE<BR/>VPE5SDC13S : ORGANIZATION NOT DETERMINED<BR/>VPE5SDC14S : USER IS NOT ALLOWED TO ACCESS THE ORG<BR/>VPE5SDC15S : FILE-TABLE USED BY THIS SERVICE IS MISSING<BR/>VPE5SDC16S : CMS IS NO-PROCESSING STATE RE-TRY REQUEST IN A FEW MINUTES<BR/>VPE5SDC17S : AMCR FILE IS NOT OPEN WHILE READING ORG RECORD<BR/>VPE5SDC18S : ORG RECORD NOT ON FILEor RECORD IS IN ADD-PENDING STATUS<BR/>VPE5SDC19S : AMCR RANDOM READ FUNCTION WAS NOT SUCCESSFUL<BR/>VPE5SDC21S : AMBS FILE IS NOT OPEN<BR/>VPE5SDC22S : ACCOUNT NUMBER NOT FOUND<BR/>VPE5SDC23S : AMBS RANDOM READ FUNCTION WAS NOT SUCCESSFUL<BR/>VPE5SDC24S : AMCR FILE IS NOT OPEN WHILE READING LOGO RECORD<BR/>VPE5SDC25S : LOGO RECORD NOT ON FILEor RECORD IS IN ADD-PENDING STATUS<BR/>VPE5SDC26S : INPUT LIMIT SHOULD BE VALID<BR/>VPE5SDC09I : USER DECLINEDorCANCELLED ACTION. NO CREDIT LIMIT CHANGE<BR/>VPE5SDC10I : USER DECLINEDorCANCELLED ACTION. NO CREDIT LIMIT CHANGE<BR/>VPE5SDC27S : FOREIGN ORGANIZATION NUMBER NOT FOUND<BR/>VPE5SDC28S : CHECKSUM MATCH FAILED<BR/>VPE5SDC40S : GETMAIN FAILED FOR CL UPDATE SERVICE INPUT AREA<BR/>VPE5SDC41S : GETMAIN FAILED FOR CL UPDATE SERVICE OUTPUT AREA<BR/>VPE5SDC50S : GETMAIN FAILED FOR TRIAD CL INQUIRY SERVICE INPUT AREA<BR/>VPE5SDC51S : GETMAIN FAILED FOR TRIAD CL INQUIRY SERVICE OUTPUT ARE
*/
type CreditLimitDriverInquiryV2FvEmeaStatus465 struct {
	Payload *models.FsErrorDetails
}

func (o *CreditLimitDriverInquiryV2FvEmeaStatus465) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/creditLimitDriverInquiry][%d] creditLimitDriverInquiryV2FvEmeaStatus465  %+v", 465, o.Payload)
}

func (o *CreditLimitDriverInquiryV2FvEmeaStatus465) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *CreditLimitDriverInquiryV2FvEmeaStatus465) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
