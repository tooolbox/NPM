// Code generated by go-swagger; DO NOT EDIT.

package loyalty_and_rewards_core

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// LoyaltyDemographicAddV1FvEmeaReader is a Reader for the LoyaltyDemographicAddV1FvEmea structure.
type LoyaltyDemographicAddV1FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LoyaltyDemographicAddV1FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLoyaltyDemographicAddV1FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLoyaltyDemographicAddV1FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewLoyaltyDemographicAddV1FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewLoyaltyDemographicAddV1FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewLoyaltyDemographicAddV1FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewLoyaltyDemographicAddV1FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewLoyaltyDemographicAddV1FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewLoyaltyDemographicAddV1FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewLoyaltyDemographicAddV1FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 465:
		result := NewLoyaltyDemographicAddV1FvEmeaStatus465()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLoyaltyDemographicAddV1FvEmeaOK creates a LoyaltyDemographicAddV1FvEmeaOK with default headers values
func NewLoyaltyDemographicAddV1FvEmeaOK() *LoyaltyDemographicAddV1FvEmeaOK {
	return &LoyaltyDemographicAddV1FvEmeaOK{}
}

/*LoyaltyDemographicAddV1FvEmeaOK handles this case with default header values.

successful operation
*/
type LoyaltyDemographicAddV1FvEmeaOK struct {
	Payload *models.LoyaltyDemographicAddResponse
}

func (o *LoyaltyDemographicAddV1FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loyaltyDemographicAdd][%d] loyaltyDemographicAddV1FvEmeaOK  %+v", 200, o.Payload)
}

func (o *LoyaltyDemographicAddV1FvEmeaOK) GetPayload() *models.LoyaltyDemographicAddResponse {
	return o.Payload
}

func (o *LoyaltyDemographicAddV1FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LoyaltyDemographicAddResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoyaltyDemographicAddV1FvEmeaBadRequest creates a LoyaltyDemographicAddV1FvEmeaBadRequest with default headers values
func NewLoyaltyDemographicAddV1FvEmeaBadRequest() *LoyaltyDemographicAddV1FvEmeaBadRequest {
	return &LoyaltyDemographicAddV1FvEmeaBadRequest{}
}

/*LoyaltyDemographicAddV1FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type LoyaltyDemographicAddV1FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *LoyaltyDemographicAddV1FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loyaltyDemographicAdd][%d] loyaltyDemographicAddV1FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *LoyaltyDemographicAddV1FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *LoyaltyDemographicAddV1FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoyaltyDemographicAddV1FvEmeaUnauthorized creates a LoyaltyDemographicAddV1FvEmeaUnauthorized with default headers values
func NewLoyaltyDemographicAddV1FvEmeaUnauthorized() *LoyaltyDemographicAddV1FvEmeaUnauthorized {
	return &LoyaltyDemographicAddV1FvEmeaUnauthorized{}
}

/*LoyaltyDemographicAddV1FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type LoyaltyDemographicAddV1FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *LoyaltyDemographicAddV1FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loyaltyDemographicAdd][%d] loyaltyDemographicAddV1FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *LoyaltyDemographicAddV1FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *LoyaltyDemographicAddV1FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoyaltyDemographicAddV1FvEmeaForbidden creates a LoyaltyDemographicAddV1FvEmeaForbidden with default headers values
func NewLoyaltyDemographicAddV1FvEmeaForbidden() *LoyaltyDemographicAddV1FvEmeaForbidden {
	return &LoyaltyDemographicAddV1FvEmeaForbidden{}
}

/*LoyaltyDemographicAddV1FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type LoyaltyDemographicAddV1FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *LoyaltyDemographicAddV1FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loyaltyDemographicAdd][%d] loyaltyDemographicAddV1FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *LoyaltyDemographicAddV1FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *LoyaltyDemographicAddV1FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoyaltyDemographicAddV1FvEmeaNotFound creates a LoyaltyDemographicAddV1FvEmeaNotFound with default headers values
func NewLoyaltyDemographicAddV1FvEmeaNotFound() *LoyaltyDemographicAddV1FvEmeaNotFound {
	return &LoyaltyDemographicAddV1FvEmeaNotFound{}
}

/*LoyaltyDemographicAddV1FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type LoyaltyDemographicAddV1FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *LoyaltyDemographicAddV1FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loyaltyDemographicAdd][%d] loyaltyDemographicAddV1FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *LoyaltyDemographicAddV1FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *LoyaltyDemographicAddV1FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoyaltyDemographicAddV1FvEmeaTooManyRequests creates a LoyaltyDemographicAddV1FvEmeaTooManyRequests with default headers values
func NewLoyaltyDemographicAddV1FvEmeaTooManyRequests() *LoyaltyDemographicAddV1FvEmeaTooManyRequests {
	return &LoyaltyDemographicAddV1FvEmeaTooManyRequests{}
}

/*LoyaltyDemographicAddV1FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type LoyaltyDemographicAddV1FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *LoyaltyDemographicAddV1FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loyaltyDemographicAdd][%d] loyaltyDemographicAddV1FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *LoyaltyDemographicAddV1FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *LoyaltyDemographicAddV1FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoyaltyDemographicAddV1FvEmeaStatus452 creates a LoyaltyDemographicAddV1FvEmeaStatus452 with default headers values
func NewLoyaltyDemographicAddV1FvEmeaStatus452() *LoyaltyDemographicAddV1FvEmeaStatus452 {
	return &LoyaltyDemographicAddV1FvEmeaStatus452{}
}

/*LoyaltyDemographicAddV1FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type LoyaltyDemographicAddV1FvEmeaStatus452 struct {
}

func (o *LoyaltyDemographicAddV1FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loyaltyDemographicAdd][%d] loyaltyDemographicAddV1FvEmeaStatus452 ", 452)
}

func (o *LoyaltyDemographicAddV1FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLoyaltyDemographicAddV1FvEmeaStatus453 creates a LoyaltyDemographicAddV1FvEmeaStatus453 with default headers values
func NewLoyaltyDemographicAddV1FvEmeaStatus453() *LoyaltyDemographicAddV1FvEmeaStatus453 {
	return &LoyaltyDemographicAddV1FvEmeaStatus453{}
}

/*LoyaltyDemographicAddV1FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type LoyaltyDemographicAddV1FvEmeaStatus453 struct {
}

func (o *LoyaltyDemographicAddV1FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loyaltyDemographicAdd][%d] loyaltyDemographicAddV1FvEmeaStatus453 ", 453)
}

func (o *LoyaltyDemographicAddV1FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLoyaltyDemographicAddV1FvEmeaStatus455 creates a LoyaltyDemographicAddV1FvEmeaStatus455 with default headers values
func NewLoyaltyDemographicAddV1FvEmeaStatus455() *LoyaltyDemographicAddV1FvEmeaStatus455 {
	return &LoyaltyDemographicAddV1FvEmeaStatus455{}
}

/*LoyaltyDemographicAddV1FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type LoyaltyDemographicAddV1FvEmeaStatus455 struct {
}

func (o *LoyaltyDemographicAddV1FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loyaltyDemographicAdd][%d] loyaltyDemographicAddV1FvEmeaStatus455 ", 455)
}

func (o *LoyaltyDemographicAddV1FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLoyaltyDemographicAddV1FvEmeaStatus465 creates a LoyaltyDemographicAddV1FvEmeaStatus465 with default headers values
func NewLoyaltyDemographicAddV1FvEmeaStatus465() *LoyaltyDemographicAddV1FvEmeaStatus465 {
	return &LoyaltyDemographicAddV1FvEmeaStatus465{}
}

/*LoyaltyDemographicAddV1FvEmeaStatus465 handles this case with default header values.

Backend Response Code and message in odsMessages field: <BR/><BR/>VPLKSDA01S : SERVICE COULD NOT OBTAIN STORAGE AREA<BR/>VPLKSDA02S : SERVICE INPUT TO DEMOGRAPHIC ADD SERVICE IS AN INCORRECT LENGTH<BR/>VPLKSDA04S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPLKSDA05S : APPLICATION IN NO-PROCESSING STATUS RETRY IN A FEW MINUTES<BR/>VPLKSDA06S : ORG NUMBER MUST BE NUMERIC AND VALID VALUES ARE 001-997<BR/>VPLKSDA07S : REQUESTED ORGANIZATION NOT FOUND<BR/>VPLKSDA08S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPLKSDA09S : APPLICATION IN NO-PROCESSING STATUS RETRY IN A FEW MINUTES<BR/>VPLKSDA10S : ORGANIZATION RECORD IS IN PENDING ADD STATUS<BR/>VPLKSDA11S : ORGANIZATION RECORD STATUS IS INCOMP OR PURGED OR CLOSED<BR/>VPLKSDA12S : ORGANIZATION RECORD NOT FOUND<BR/>VPLKSDA13S : ENTER A VALID ACCOUNT NUMBER<BR/>VPLKSDA14S : INVALID CHECK DIGIT<BR/>VPLKSDA15E : INVALID NAME AND ADDR SOURCE VALID VALUES ARE 'LMS' 'CMS'<BR/>VPLKSDA16E : INVALID SERVICE FLAG VALID VALUES ARE 'B' 'C' 'I'<BR/>VPLKSDA17E : NAME AND ADDR SOURCE IS NOT LMS TITLE SHOULD NOT BE ENTERED<BR/>VPLKSDA18E : NAME AND ADDR SOURCE IS NOT LMS DOB SHOULD NOT BE ENTERED<BR/>VPLKSDA19E : ENTER A VALID DOB<BR/>VPLKSDA20E : ENTRY NOT REQUIRED IN DOB<BR/>VPLKSDA21E : DOB SHOULD BE A VALID PAST DATE<BR/>VPLKSDA22E : ENTRY REQUIRED FOR NAME - 1<BR/>VPLKSDA23E : NAME AND ADDR SOURCE IS NOT LMS NAME - 1 SHOULD NOT BE ENTERED<BR/>VPLKSDA24E : ENTRY REQUIRED FOR NAME - 2<BR/>VPLKSDA25E : NAME AND ADDR SOURCE IS NOT LMS NAME - 2 SHOULD NOT BE ENTERED<BR/>VPLKSDA26E : ENTRY REQUIRED IN NAME-1 OR NAME-2 OR NAME - 3<BR/>VPLKSDA27E : NAME AND ADDR SOURCE IS NOT LMS NAME - 3 SHOULD NOT BE ENTERED<BR/>VPLKSDA28E : NAME AND ADDR SOURCE IS NOT LMS SUFFIX SHOULD NOT BE ENTERED<BR/>VPLKSDA29E : ENTER A VALID GENDER CODE VALID VALUES ARE 012<BR/>VPLKSDA30E : NAME AND ADDR SOURCE IS NOT LMS ADDR -1 SHOULD NOT BE ENTERED<BR/>VPLKSDA31E : ENTRY REQUIRED IN ANY ATLEAST ONE OF THE ADDRESS LINES<BR/>VPLKSDA32E : NAME AND ADDR SOURCE IS NOT LMS ADDR -2 SHOULD NOT BE ENTERED<BR/>VPLKSDA33E : NAME AND ADDR SOURCE IS LMS STATE SHOULD BE ENTERED<BR/>VPLKSDA34E : NAME AND ADDR SOURCE IS NOT LMS STATE SHOULD NOT BE ENTERED<BR/>VPLKSDA35E : NAME AND ADDR SOURCE IS LMS CITY SHOULD BE ENTERED<BR/>VPLKSDA36E : NAME AND ADDR SOURCE IS NOT LMS CITY SHOULD NOT BE ENTERED<BR/>VPLKSDA37E : NAME AND ADDR SOURCE IS LMS POSTAL CODE SHOULD BE ENTERED<BR/>VPLKSDA38E : NAME AND ADDR SOURCE IS NOT LMSPOSTAL CODE SHOULD NOT BE ENTERED<BR/>VPLKSDA39E : NAME AND ADDR SOURCE IS NOT LMS COUNTY SHOULD NOT BE ENTERED<BR/>VPLKSDA40E : NAME AND ADDR SOURCE IS LMS COUNTRY CODE SHOULD BE ENTERED<BR/>VPLKSDA41E : COUNTRY CODE IS NOT DEFINED IN SMCO TABLE<BR/>VPLKSDA42E : NAME AND ADDR SOURCE IS NOT LMSCNTRY CODE SHOULD NOT BE ENTERED<BR/>VPLKSDA43E : ENTRY REQUIRED FOR HOME PHONE<BR/>VPLKSDA44E : NAME AND ADDR SOURCE IS NOT LMS HOME PHONE SHOULD NOT BE ENTERED<BR/>VPLKSDA45E : NAME AND ADDR SOURCE IS NOT LMS HOME INDIC SHOULD NOT BE ENTERED<BR/>VPLKSDA46E : INVALID HOME PHONE INDICATOR VALID VALUES ARE 012<BR/>VPLKSDA47E : NAME AND ADDR SOURCE IS NOT LMS LANG INDIC SHOULD NOT BE ENTERED<BR/>VPLKSDA48E : ENTRY REQUIRED FOR MOBILE PHONE<BR/>VPLKSDA49E : NAME AND ADDR SRC IS NOT LMS MOBILE PHONE SHOULD NOT BE ENTERED<BR/>VPLKSDA50E : NAME AND ADDR SRC IS NOT LMSMOB PH INDIC SHOULD NOT BE ENTERED<BR/>VPLKSDA51E : INVALID MOBILE PHONE INDICATOR VALID VALUES ARE 012<BR/>VPLKSDA52E : ENTRY REQUIRED FOR FAX PHONE<BR/>VPLKSDA53E : NAME AND ADDR SOURCE IS NOT LMSFAX PHONE SHOULD NOT BE ENTERED<BR/>VPLKSDA54E : NAME AND ADDR SRC IS NOT LMS FAX PH INDIC SHOULD NOT BE ENTERED<BR/>VPLKSDA55E : INVALID FAX PHONE INDICATOR VALID VALUES ARE 012<BR/>VPLKSDA56E : ENTRY REQUIRED FOR WORK PHONE<BR/>VPLKSDA57E : NAME AND ADDR SOURCE IS NOT LMS WORK PH SHOULD NOT BE ENTERED<BR/>VPLKSDA58E : NAME AND ADDR SRC IS NOT LMS WORK PH INDIC SHOULD NOT BE ENTERED<BR/>VPLKSDA59E : INVALID WORK PHONE INDICATOR VALID VALUES ARE 01 OR 2<BR/>VPLKSDA60E : ENTRY REQUIRED FOR EMAIL<BR/>VPLKSDA61E : NAME AND ADDR SOURCE IS NOT LMS EMAIL SHOULD NOT BE ENTERED<BR/>VPLKSDA62E : NAME AND ADDR SRC IS NOT LMSEMAIL INDIC SHOULD NOT BE ENTERED<BR/>VPLKSDA63E : INVALID EMAIL INDICATOR VALID VALUES ARE 01<BR/>VPLKSDA64E : INVALID VIP FLAG VALID VALUES ARE NY<BR/>VPLKSDA65E : PRIMARY ACCOUNT NUMBER SOURCE IS NOT 'CMS'<BR/>VPLKSDA66E : INVALID ORG VALUE VALID RANGE IS 001 - 998<BR/>VPLKSDA67E : NAME AND ADDR SRC IS CMS ENTRY REQ IN PRIMARY ACCT or CARD NO<BR/>VPLKSDA68E : OPEN DATE SHOULD BE A VALID FUTURE DATE<BR/>VPLKSDA69S : DEMOGRAPHICS RECORD IS ALREADY PRESENT WITH COMPLETE STATUS<BR/>VPLKSDA70E : NAME AND ADDR SOURCE IS NOT LMS ADDR -3 SHOULD NOT BE ENTERED<BR/>VPLKSDA71E : NAME AND ADDR SOURCE IS NOT LMS ADDR -4 SHOULD NOT BE ENTERED<BR/>VPLKSDA72E : ENTRY REQUIRED FOR WORK PHONE EXTENSION<BR/>VPLKSDA73E : NAME AND ADDR SOURCE IS NOT LMS SHOULD NOT ENTER WORK PH EXTN<BR/>VPLKSDA74E : INVALID SMS INDICATOR VALID VALUES ARE 01<BR/>VPLKSDA75E : NAME AND ADDR SOURCE IS NOT LMS SMS FLAG SHOULD NOT BE ENTERED<BR/>VPL5SAI02S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES<BR/>VPL5SAI03E : ORGANIZATION IS NOT NUMERIC OR MUST BE VALUE BETWEEN 000 AND 998<BR/>VPL5SAI04E : REQUESTED CARDorACCT NUMBER IS NOT NUMERIC OR EQUAL SPACES<BR/>VPL5SAI05E : INVALID FOREIGN USE IND SPECIFIED - VALID VALUES ARE SPACE 0 OR 1<BR/>VPL5SAI06S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES<BR/>VPL5SAI07S : ORGANIZATION NOT FOUND ON FILE<BR/>VPL5SAI08S : FOREIGN ORGANIZATION NOT FOUND ON FILE<BR/>VPL5SAI09S : ACCOUNT NUMBER NOT FOUND<BR/>VPL5SAI10S : ACCOUNT NUMBER NOT FOUND ON FILE<BR/>VPL5SAI11S : LOGO NOT FOUND ON FILE<BR/>VPL5SAI12S : CUSTOMER NOT FOUND ON FILE<BR/>VPL5SAI13I : FOREIGN USE ORG UNAVAILABLE PROCESSED LOCAL ORG ACCOUNT DATA<BR/>VPL5SAIZ1S : SERVICE COULD NOT OBTAIN STORAGE AREA<BR/>VPL5SAIZ2S : SERVICE INPUT TO ACCOUNT INQ SERVICE IS AN INCORRECT LENGTH<BR/>VPL5SAIZ3S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPL5SAIZ4S : REQUESTED ORGANIZATION COULD NOT BE DETERMINED<BR/>VPL5SAIZ5S : REQUESTED ORGANIZATION NOT FOUND<BR/>VPL5SAIZ6S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUN
*/
type LoyaltyDemographicAddV1FvEmeaStatus465 struct {
	Payload *models.FsErrorDetails
}

func (o *LoyaltyDemographicAddV1FvEmeaStatus465) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loyaltyDemographicAdd][%d] loyaltyDemographicAddV1FvEmeaStatus465  %+v", 465, o.Payload)
}

func (o *LoyaltyDemographicAddV1FvEmeaStatus465) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *LoyaltyDemographicAddV1FvEmeaStatus465) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
