// Code generated by go-swagger; DO NOT EDIT.

package loyalty_and_rewards_core

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// OfferEnrolmentUpdateV1FvEmeaReader is a Reader for the OfferEnrolmentUpdateV1FvEmea structure.
type OfferEnrolmentUpdateV1FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OfferEnrolmentUpdateV1FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOfferEnrolmentUpdateV1FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewOfferEnrolmentUpdateV1FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewOfferEnrolmentUpdateV1FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewOfferEnrolmentUpdateV1FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewOfferEnrolmentUpdateV1FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewOfferEnrolmentUpdateV1FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewOfferEnrolmentUpdateV1FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewOfferEnrolmentUpdateV1FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewOfferEnrolmentUpdateV1FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 465:
		result := NewOfferEnrolmentUpdateV1FvEmeaStatus465()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewOfferEnrolmentUpdateV1FvEmeaOK creates a OfferEnrolmentUpdateV1FvEmeaOK with default headers values
func NewOfferEnrolmentUpdateV1FvEmeaOK() *OfferEnrolmentUpdateV1FvEmeaOK {
	return &OfferEnrolmentUpdateV1FvEmeaOK{}
}

/*OfferEnrolmentUpdateV1FvEmeaOK handles this case with default header values.

successful operation
*/
type OfferEnrolmentUpdateV1FvEmeaOK struct {
	Payload *models.OfferEnrolmentUpdateResponse
}

func (o *OfferEnrolmentUpdateV1FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/offerEnrolmentUpdate][%d] offerEnrolmentUpdateV1FvEmeaOK  %+v", 200, o.Payload)
}

func (o *OfferEnrolmentUpdateV1FvEmeaOK) GetPayload() *models.OfferEnrolmentUpdateResponse {
	return o.Payload
}

func (o *OfferEnrolmentUpdateV1FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OfferEnrolmentUpdateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOfferEnrolmentUpdateV1FvEmeaBadRequest creates a OfferEnrolmentUpdateV1FvEmeaBadRequest with default headers values
func NewOfferEnrolmentUpdateV1FvEmeaBadRequest() *OfferEnrolmentUpdateV1FvEmeaBadRequest {
	return &OfferEnrolmentUpdateV1FvEmeaBadRequest{}
}

/*OfferEnrolmentUpdateV1FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type OfferEnrolmentUpdateV1FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *OfferEnrolmentUpdateV1FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/offerEnrolmentUpdate][%d] offerEnrolmentUpdateV1FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *OfferEnrolmentUpdateV1FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *OfferEnrolmentUpdateV1FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOfferEnrolmentUpdateV1FvEmeaUnauthorized creates a OfferEnrolmentUpdateV1FvEmeaUnauthorized with default headers values
func NewOfferEnrolmentUpdateV1FvEmeaUnauthorized() *OfferEnrolmentUpdateV1FvEmeaUnauthorized {
	return &OfferEnrolmentUpdateV1FvEmeaUnauthorized{}
}

/*OfferEnrolmentUpdateV1FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type OfferEnrolmentUpdateV1FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *OfferEnrolmentUpdateV1FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/offerEnrolmentUpdate][%d] offerEnrolmentUpdateV1FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *OfferEnrolmentUpdateV1FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *OfferEnrolmentUpdateV1FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOfferEnrolmentUpdateV1FvEmeaForbidden creates a OfferEnrolmentUpdateV1FvEmeaForbidden with default headers values
func NewOfferEnrolmentUpdateV1FvEmeaForbidden() *OfferEnrolmentUpdateV1FvEmeaForbidden {
	return &OfferEnrolmentUpdateV1FvEmeaForbidden{}
}

/*OfferEnrolmentUpdateV1FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type OfferEnrolmentUpdateV1FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *OfferEnrolmentUpdateV1FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/offerEnrolmentUpdate][%d] offerEnrolmentUpdateV1FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *OfferEnrolmentUpdateV1FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *OfferEnrolmentUpdateV1FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOfferEnrolmentUpdateV1FvEmeaNotFound creates a OfferEnrolmentUpdateV1FvEmeaNotFound with default headers values
func NewOfferEnrolmentUpdateV1FvEmeaNotFound() *OfferEnrolmentUpdateV1FvEmeaNotFound {
	return &OfferEnrolmentUpdateV1FvEmeaNotFound{}
}

/*OfferEnrolmentUpdateV1FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type OfferEnrolmentUpdateV1FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *OfferEnrolmentUpdateV1FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/offerEnrolmentUpdate][%d] offerEnrolmentUpdateV1FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *OfferEnrolmentUpdateV1FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *OfferEnrolmentUpdateV1FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOfferEnrolmentUpdateV1FvEmeaTooManyRequests creates a OfferEnrolmentUpdateV1FvEmeaTooManyRequests with default headers values
func NewOfferEnrolmentUpdateV1FvEmeaTooManyRequests() *OfferEnrolmentUpdateV1FvEmeaTooManyRequests {
	return &OfferEnrolmentUpdateV1FvEmeaTooManyRequests{}
}

/*OfferEnrolmentUpdateV1FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type OfferEnrolmentUpdateV1FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *OfferEnrolmentUpdateV1FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/offerEnrolmentUpdate][%d] offerEnrolmentUpdateV1FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *OfferEnrolmentUpdateV1FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *OfferEnrolmentUpdateV1FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOfferEnrolmentUpdateV1FvEmeaStatus452 creates a OfferEnrolmentUpdateV1FvEmeaStatus452 with default headers values
func NewOfferEnrolmentUpdateV1FvEmeaStatus452() *OfferEnrolmentUpdateV1FvEmeaStatus452 {
	return &OfferEnrolmentUpdateV1FvEmeaStatus452{}
}

/*OfferEnrolmentUpdateV1FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type OfferEnrolmentUpdateV1FvEmeaStatus452 struct {
}

func (o *OfferEnrolmentUpdateV1FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/offerEnrolmentUpdate][%d] offerEnrolmentUpdateV1FvEmeaStatus452 ", 452)
}

func (o *OfferEnrolmentUpdateV1FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewOfferEnrolmentUpdateV1FvEmeaStatus453 creates a OfferEnrolmentUpdateV1FvEmeaStatus453 with default headers values
func NewOfferEnrolmentUpdateV1FvEmeaStatus453() *OfferEnrolmentUpdateV1FvEmeaStatus453 {
	return &OfferEnrolmentUpdateV1FvEmeaStatus453{}
}

/*OfferEnrolmentUpdateV1FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type OfferEnrolmentUpdateV1FvEmeaStatus453 struct {
}

func (o *OfferEnrolmentUpdateV1FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/offerEnrolmentUpdate][%d] offerEnrolmentUpdateV1FvEmeaStatus453 ", 453)
}

func (o *OfferEnrolmentUpdateV1FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewOfferEnrolmentUpdateV1FvEmeaStatus455 creates a OfferEnrolmentUpdateV1FvEmeaStatus455 with default headers values
func NewOfferEnrolmentUpdateV1FvEmeaStatus455() *OfferEnrolmentUpdateV1FvEmeaStatus455 {
	return &OfferEnrolmentUpdateV1FvEmeaStatus455{}
}

/*OfferEnrolmentUpdateV1FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type OfferEnrolmentUpdateV1FvEmeaStatus455 struct {
}

func (o *OfferEnrolmentUpdateV1FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/offerEnrolmentUpdate][%d] offerEnrolmentUpdateV1FvEmeaStatus455 ", 455)
}

func (o *OfferEnrolmentUpdateV1FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewOfferEnrolmentUpdateV1FvEmeaStatus465 creates a OfferEnrolmentUpdateV1FvEmeaStatus465 with default headers values
func NewOfferEnrolmentUpdateV1FvEmeaStatus465() *OfferEnrolmentUpdateV1FvEmeaStatus465 {
	return &OfferEnrolmentUpdateV1FvEmeaStatus465{}
}

/*OfferEnrolmentUpdateV1FvEmeaStatus465 handles this case with default header values.

Backend Response Code and message in odsMessages field: <BR/><BR/>VPEBSUAZ1S : SERVICE COULD NOT OBTAIN STORAGE AREAUT AREA<BR/>VPEBSUAZ2S : SERVICE INPUT TO UA SVC IS AN INCORRECT LENGHTH<BR/>VPEBSUAZ4S : FILE-TABLE USED BY THIS SERVICE IS MISSING<BR/>VPEBSUAZ5S : APPLICATION IN NO-PROCESSING STATUS; RE-TRY IN A FEW MINUTES<BR/>VPEBSUA01E : ORGANIZATION NUMBER MUST BE NUMERIC VALID VALUES ARE 001-998<BR/>VPEBSUA02S : ACCOUNT NUMBER MUST BE NUMERIC AND GREATER THAN ZEROS<BR/>VPEBSUA03S : OFFER ID MUST BE GREATER THAN SPACES<BR/>VPEBSUA04E : PRIORITY MUST BE NUMERIC VALID VALUES ARE 1-99999<BR/>VPEBSUA05E : ENROLLMENT ACTION INVALID VALID VALUES ARE 1-4<BR/>VPEBSUA06E : INVALID START DATA<BR/>VPEBSUA07E : INVALID EXPIRE DATA<BR/>VPEBSUA08E : REJECT REASON MUST BE ZEROS WHEN ENROLL ACTION NOT = 3<BR/>VPEBSUA09E : INVALID EFFECTIVE DATE<BR/>VPEBSUA10E : CARD CONVERT INDICATOR MUST BE 0 OR 1<BR/>VPEBSUA10S : INVALID ENROLLMENT ACTION CHANGE<BR/>VPEBSUA11E : VALID VALUES FOR OFFER STATUS IS 1<BR/>VPEBSUA12S : ORG NUMBER NOT FOUND<BR/>VPEBSUA13E : VALID VALUE FOR OFFER STATUS PREVIOUSLY CANCELED MUST = 1<BR/>VPEBSUA15S : ORG NUMBER NOT FOUND<BR/>VPEBSUA16S : ORG NUMBER NOT FOUND<BR/>VPEBSUA17S : ORG NUMBER NOT FOUND<BR/>VPEBSUA18S : OFFER ENROLLMENT NOT FOUND<BR/>VPEBSUA19S : OFFER ENROLLMENT NOT FOUND<BR/>VPEBSUA20S : OFFER ENROLLMENT NOT FOUND<BR/>VPEBSUA21S : OFFER DEFINITION NOT FOUND<BR/>VPEBSUA22S : OFFER DEFINITION NOT FOUND<BR/>VPEBSUA23S : OFFER DEFINITION NOT FOUND<BR/>VPEBSUA24S : INVALID ENROLLMENT ACTION FOR ADD-ON PRODUCT OFFER TYPE<BR/>VPEBSUA25S : START DATE MUST BE WITHIN DTE RANGE OF OFFER and => NEXT PROC DT<BR/>VPEBSUA26S : START DATE CANNOT BE MAINTAINED<BR/>VPEBSUA27S : INVALID EXPIRE DATE; VALID VALUE MUST BE WITHIN THE DATE RANGE<BR/>VPEBSUA28S : EXPIRE DATE CANNOT BE MAINTAINED<BR/>VPEBSUA29S : EFF DATE INVALIDVALID VALUES MUST BE GREATER THEN NEXT PROC DT<BR/>VPEBSUA30S : EFF DATE SHOULD BE ZEROS FOR THIS OFFER TYPE<BR/>VPEBSUA31S : FAILED DURING CALL ADD INSURANCE SERVICE<BR/>VPEBSUA32S : EXPIRE DATE IS NOT ALLOWED TO BE MAINTAINED; EXPIRED OFFER<BR/>VPEBSUA33I : NO UPDATE
*/
type OfferEnrolmentUpdateV1FvEmeaStatus465 struct {
	Payload *models.FsErrorDetails
}

func (o *OfferEnrolmentUpdateV1FvEmeaStatus465) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/offerEnrolmentUpdate][%d] offerEnrolmentUpdateV1FvEmeaStatus465  %+v", 465, o.Payload)
}

func (o *OfferEnrolmentUpdateV1FvEmeaStatus465) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *OfferEnrolmentUpdateV1FvEmeaStatus465) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
