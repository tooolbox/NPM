// Code generated by go-swagger; DO NOT EDIT.

package loyalty_and_rewards_core

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// LoyaltyRedemptionV1FvEmeaReader is a Reader for the LoyaltyRedemptionV1FvEmea structure.
type LoyaltyRedemptionV1FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LoyaltyRedemptionV1FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLoyaltyRedemptionV1FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLoyaltyRedemptionV1FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewLoyaltyRedemptionV1FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewLoyaltyRedemptionV1FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewLoyaltyRedemptionV1FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewLoyaltyRedemptionV1FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewLoyaltyRedemptionV1FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewLoyaltyRedemptionV1FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewLoyaltyRedemptionV1FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 465:
		result := NewLoyaltyRedemptionV1FvEmeaStatus465()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLoyaltyRedemptionV1FvEmeaOK creates a LoyaltyRedemptionV1FvEmeaOK with default headers values
func NewLoyaltyRedemptionV1FvEmeaOK() *LoyaltyRedemptionV1FvEmeaOK {
	return &LoyaltyRedemptionV1FvEmeaOK{}
}

/*LoyaltyRedemptionV1FvEmeaOK handles this case with default header values.

successful operation
*/
type LoyaltyRedemptionV1FvEmeaOK struct {
	Payload *models.LoyaltyRedemptionResponse
}

func (o *LoyaltyRedemptionV1FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loyaltyRedemption][%d] loyaltyRedemptionV1FvEmeaOK  %+v", 200, o.Payload)
}

func (o *LoyaltyRedemptionV1FvEmeaOK) GetPayload() *models.LoyaltyRedemptionResponse {
	return o.Payload
}

func (o *LoyaltyRedemptionV1FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LoyaltyRedemptionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoyaltyRedemptionV1FvEmeaBadRequest creates a LoyaltyRedemptionV1FvEmeaBadRequest with default headers values
func NewLoyaltyRedemptionV1FvEmeaBadRequest() *LoyaltyRedemptionV1FvEmeaBadRequest {
	return &LoyaltyRedemptionV1FvEmeaBadRequest{}
}

/*LoyaltyRedemptionV1FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type LoyaltyRedemptionV1FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *LoyaltyRedemptionV1FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loyaltyRedemption][%d] loyaltyRedemptionV1FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *LoyaltyRedemptionV1FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *LoyaltyRedemptionV1FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoyaltyRedemptionV1FvEmeaUnauthorized creates a LoyaltyRedemptionV1FvEmeaUnauthorized with default headers values
func NewLoyaltyRedemptionV1FvEmeaUnauthorized() *LoyaltyRedemptionV1FvEmeaUnauthorized {
	return &LoyaltyRedemptionV1FvEmeaUnauthorized{}
}

/*LoyaltyRedemptionV1FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type LoyaltyRedemptionV1FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *LoyaltyRedemptionV1FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loyaltyRedemption][%d] loyaltyRedemptionV1FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *LoyaltyRedemptionV1FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *LoyaltyRedemptionV1FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoyaltyRedemptionV1FvEmeaForbidden creates a LoyaltyRedemptionV1FvEmeaForbidden with default headers values
func NewLoyaltyRedemptionV1FvEmeaForbidden() *LoyaltyRedemptionV1FvEmeaForbidden {
	return &LoyaltyRedemptionV1FvEmeaForbidden{}
}

/*LoyaltyRedemptionV1FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type LoyaltyRedemptionV1FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *LoyaltyRedemptionV1FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loyaltyRedemption][%d] loyaltyRedemptionV1FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *LoyaltyRedemptionV1FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *LoyaltyRedemptionV1FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoyaltyRedemptionV1FvEmeaNotFound creates a LoyaltyRedemptionV1FvEmeaNotFound with default headers values
func NewLoyaltyRedemptionV1FvEmeaNotFound() *LoyaltyRedemptionV1FvEmeaNotFound {
	return &LoyaltyRedemptionV1FvEmeaNotFound{}
}

/*LoyaltyRedemptionV1FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type LoyaltyRedemptionV1FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *LoyaltyRedemptionV1FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loyaltyRedemption][%d] loyaltyRedemptionV1FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *LoyaltyRedemptionV1FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *LoyaltyRedemptionV1FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoyaltyRedemptionV1FvEmeaTooManyRequests creates a LoyaltyRedemptionV1FvEmeaTooManyRequests with default headers values
func NewLoyaltyRedemptionV1FvEmeaTooManyRequests() *LoyaltyRedemptionV1FvEmeaTooManyRequests {
	return &LoyaltyRedemptionV1FvEmeaTooManyRequests{}
}

/*LoyaltyRedemptionV1FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type LoyaltyRedemptionV1FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *LoyaltyRedemptionV1FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loyaltyRedemption][%d] loyaltyRedemptionV1FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *LoyaltyRedemptionV1FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *LoyaltyRedemptionV1FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoyaltyRedemptionV1FvEmeaStatus452 creates a LoyaltyRedemptionV1FvEmeaStatus452 with default headers values
func NewLoyaltyRedemptionV1FvEmeaStatus452() *LoyaltyRedemptionV1FvEmeaStatus452 {
	return &LoyaltyRedemptionV1FvEmeaStatus452{}
}

/*LoyaltyRedemptionV1FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type LoyaltyRedemptionV1FvEmeaStatus452 struct {
}

func (o *LoyaltyRedemptionV1FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loyaltyRedemption][%d] loyaltyRedemptionV1FvEmeaStatus452 ", 452)
}

func (o *LoyaltyRedemptionV1FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLoyaltyRedemptionV1FvEmeaStatus453 creates a LoyaltyRedemptionV1FvEmeaStatus453 with default headers values
func NewLoyaltyRedemptionV1FvEmeaStatus453() *LoyaltyRedemptionV1FvEmeaStatus453 {
	return &LoyaltyRedemptionV1FvEmeaStatus453{}
}

/*LoyaltyRedemptionV1FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type LoyaltyRedemptionV1FvEmeaStatus453 struct {
}

func (o *LoyaltyRedemptionV1FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loyaltyRedemption][%d] loyaltyRedemptionV1FvEmeaStatus453 ", 453)
}

func (o *LoyaltyRedemptionV1FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLoyaltyRedemptionV1FvEmeaStatus455 creates a LoyaltyRedemptionV1FvEmeaStatus455 with default headers values
func NewLoyaltyRedemptionV1FvEmeaStatus455() *LoyaltyRedemptionV1FvEmeaStatus455 {
	return &LoyaltyRedemptionV1FvEmeaStatus455{}
}

/*LoyaltyRedemptionV1FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type LoyaltyRedemptionV1FvEmeaStatus455 struct {
}

func (o *LoyaltyRedemptionV1FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loyaltyRedemption][%d] loyaltyRedemptionV1FvEmeaStatus455 ", 455)
}

func (o *LoyaltyRedemptionV1FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLoyaltyRedemptionV1FvEmeaStatus465 creates a LoyaltyRedemptionV1FvEmeaStatus465 with default headers values
func NewLoyaltyRedemptionV1FvEmeaStatus465() *LoyaltyRedemptionV1FvEmeaStatus465 {
	return &LoyaltyRedemptionV1FvEmeaStatus465{}
}

/*LoyaltyRedemptionV1FvEmeaStatus465 handles this case with default header values.

Backend Response Code and message in odsMessages field: <BR/><BR/>VPLKSPA01S : SERVICE COULD NOT OBTAIN STORAGE AREA<BR/>VPLKSPA02S : SERVICE INPUT TO ADD ADJUST SERVICE IS AN INCORRECT      LENGTH<BR/>VPLKSPA04S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPLKSPA05S : APPLICATION IN NO-PROCESSING STATUS RETRY IN A FEW MINUTES<BR/>VPLKSPA06S : INVALID ORG VALID VALUES ARE 001-997<BR/>VPLKSPA07E : CARD NUMBER ALREADY ENTEREDACCOUNT NUMBER NOT REQUIRED<BR/>VPLKSPA08S : SECURITY IS INVALID FOR ORGANIZATION<BR/>VPLKSPA09S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPLKSPA10S : APPLICATION IN NO-PROCESSING STATUS RETRY IN A FEW MINUTES<BR/>VPLKSPA11S : ORGANIZATION RECORD IS IN PENDING ADD STATUS<BR/>VPLKSPA12S : ORGANIZATION RECORD STATUS IS INCOMPLETE OR PURGED OR CLOSED<BR/>VPLKSPA13S : ORGANIZATION RECORD NOT FOUND<BR/>VPLKSPA14E : CARD NUMBER ALREADY ENTEREDSCHEME NOT REQUIRED<BR/>VPLKSPA15E : ENTER EITHER VALID CARD NUMBER OR ACCOUNT NUMBER-SCHEME<BR/>VPLKSPA16E : ENTER EITHER VALID CARD NUMBER OR ACCOUNT NUMBER-SCHEME<BR/>VPLKSPA17S : POINT SCHEME ACCOUNT RECORD NOT FOUND<BR/>VPLKSPA18S : POINT SCHEME ACCOUNT RECORD ADD-PENDING STATUS<BR/>VPLKSPA19E : TRANSACTION DATE INVALID<BR/>VPLKSPA20S : POINTS ACCOUNT RECORD NOT FOUND<BR/>VPLKSPA21S : POINTS ACCOUNT RECORD ADD-PENDING STATUS<BR/>VPLKSPA22S : ACCOUNT STRIP FILE RECORD NOT FOUND<BR/>VPLKSPA23E : CANNOT BE REDEEMED BY CARD FOR THE ENTERED ORG<BR/>VPLKSPA24S : ACCOUNT DEMOGRAPHICS RECORD NOT FOUND<BR/>VPLKSPA25S : ACCOUNT DEMOGRAPHICS RECORD ADD-PENDING STATUS<BR/>VPLKSPA26S : CARD STRIP FILE RECORD NOT FOUND<BR/>VPLKSPA27S : INVALID CARD NUMBER - DIFFERENT LMS ORG<BR/>VPLKSPA28S : POINTS PLAN RECORD NOT FOUND<BR/>VPLKSPA29S : TRANSACTION DATE IS INVALID FOR POINTS PLAN RECORD<BR/>VPLKSPA30E : TRANSACTION CODE ENTERED IS INVALID<BR/>VPLKSPA31E : TRANSACTION AMT ENTERED SHOULD BE NUMERIC AND GREATER THAN ZERO<BR/>VPLKSPA32E : ACTUAL VALUE ENTERED SHOULD BE NUMERIC<BR/>VPLKSPA33E : GROUP CODE CANNOT BE SPACES<BR/>VPLKSPA34E : ENTER VALID PLAN TYPE<BR/>VPLKSPA35E : ENTER VALID PLAN PRIORITY<BR/>VPLKSPA36E : STORE NUMBER CANNOT BE SPACES FOR ENTERED TRANSACTION TYPE<BR/>VPLKSPA37E : STORE NUMBER HAS TO BE SPACES FOR ENTERED TRANSACTION TYPE<BR/>VPLKSPA38E : READ ON LMS POINTS MAINTENANCE RECORD FAILED<BR/>VPLKSPA39E : ONLINE LMS POINTS MAINTENANCE RECORD FULL<BR/>VPLKSPA41E : STORE NUMBER NOT ON STORE FILE<BR/>VPLKSPA42E : INVALID STORE NUMBER<BR/>VPL5SAA01S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPL5SAA02S : ORG NUMBER MUST BE NUMERIC AND VALID VALUES ARE 001-998<BR/>VPL5SAA03S : ORG NUMBER REQUIRED WHEN ACCOUNT NUMBER NOT PROVIDED<BR/>VPL5SAA04S : LOGO NUMBER MUST BE NUMERIC AND VALID VALUES ARE 001-998<BR/>VPL5SAA05S : LOGO NUMBER REQUIRED WHEN ACCOUNT NUMBER NOT PROVIDED<BR/>VPL5SAA06S : ORGANIZATION NOT DETERMINED<BR/>VPL5SAA07S : ORGANIZATION NOT DETERMINED<BR/>VPL5SAA08S : REQUESTED ORG NUMBER IS NOT FOUND<BR/>VPL5SAA09S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPL5SAA0AE : USER DATE 10 IS NOT A VALID DATE<BR/>VPL5SAA0BE : USER DATE 11 IS NOT A VALID DATE<BR/>VPL5SAA0CE : USER DATE 12 IS NOT A VALID DATE<BR/>VPL5SAA0DE : USER DATE 13 IS NOT A VALID DATE<BR/>VPL5SAA0EE : USER DATE 14 IS NOT A VALID DATE<BR/>VPL5SAA0GE : ALT EXPIRES DATE MUST BE EQUAL ZEROS<BR/>VPL5SAA0HE : RELATISHIP LOGO IS NOT VALID FOR PURCHASE CARDS<BR/>VPL5SAA0IE : RELATISHIP LOGO IS NOT VALID FOR CORPORATE CARDS<BR/>VPL5SAA0JE : MEMO BILLING CURRENCY MUST EQUAL ZEROS<BR/>VPL5SAA0KE : DUAL BILLING MUST NOT BE A VALUE OF 1 FOR RELATIONSHIP<BR/>VPL5SAA0LE : BILLING CYCLE MUST NOT EQUAL ZEROS<BR/>VPL5SAA0ME : CYCLE FIELD MUST EQUAL VALID CYCLES DEFINED ON SYSTEM RECORD<BR/>VPL5SAA0NE : ASSOCIATE REL TYPE MUST NOT EQUAL ZEROS<BR/>VPL5SAA0OE : ASSOCIATE ACCOUNT NUMBER MUST NOT EQUAL SPACES OR ZEROS<BR/>VPL5SAA0PE : ASSOCIATE ACCOUNT NUMBER MUST EQUAL SPACES OR ZEROS<BR/>VPL5SAA0QE : PRICING START DATE CAN NOT BE GREATER THAN PCT EXPIRE DATE<BR/>VPL5SAA0RE : PRICING STARTorEXPIRE DATE INVALID WHEN PCT ID EQUAL SPACES<BR/>VPL5SAA0SE : PRICING LEVEL EXPIRE DATE LESS THAN START DATE<BR/>VPL5SAA0TE : PCT LEVEL STARTorEXPIRE DATES INVALID WHEN PCT LEVEL NOT PROVIDED<BR/>VPL5SAA0UE : DATE TEMP CREDIT LIMIT EXPIRE IS NOT VALID FOR TEMP CREDIT LIMIT<BR/>VPL5SAA0VE : PREFER END DATE MUST BE GREATER THAN PREFER START DATE<BR/>VPL5SAA0WE : DATE PAYMENT EXPIRE MUST BE GREATER THAN PAYMENT START DATE<BR/>VPL5SAA0XE : DC ACH START DATE MUST BE LESS OR EQUAL DC ACH EXPIRE DATE<BR/>VPL5SAA0YE : DC REQUEST DAY INDICATOR MUST EQUAL ZEROS<BR/>VPL5SAA0ZE : DC REQUEST DAY MUST BE BETWEEN 01 AND 31<BR/>VPL5SAA10S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES<BR/>VPL5SAA11S : ORG RECORD NOT FOUND<BR/>VPL5SAA12S : LOGO RECORD NOT FOUND<BR/>VPL5SAA14S : SYSTEM RECORD NOT FOUND<BR/>VPL5SAA1AE : DC REQUEST DAY MUST BE GREATER THAN ZERO<BR/>VPL5SAA1BE : FIXED PAYMENTorAMOUNT PERCENT FIELD INVALID<BR/>VPL5SAA1CE : FIXED PAYMENTorAMOUNT PERCENT FIELD INVALID WHEN OVERRIDE IS SPACE<BR/>VPL5SAA1DE : PAYMENT OVERRIDE MUST EQUAL SPACE<BR/>VPL5SAA1ES : PCT ENTRY DOES NOT EXIST<BR/>VPL5SAA1FS : ACCT CTL TABLE ID INVALID-CSHorRTL PLANSorCHGF ACRINT NOT OBTAINED<BR/>VPL5SAA1GS : ACCT CTL TABLE ID INVALID-CSHorRTL PLANSorCHGF ACRINT NOT OBTAINED<BR/>VPL5SAA1HS : FEE CTL TABLE ID INVALID - GRACE LIMITS FREQUENCIES NOT OBTAINED<BR/>VPL5SAA1IS : FEE CTL TABLE ID INVALID - GRACE LIMITS FREQUENCIES NOT OBTAINED<BR/>VPL5SAA1JS : AUTH CRITERIA TABLE NOT FOUND<BR/>VPL5SAA1KS : CANNOT ADD A PURCHASE CARD ACCOUNT TO A CORPORATE RELATIONSHIP<BR/>VPL5SAA1LS : CANNOT ADD A CORPORATE ACCOUNT TO A PURCHASE CARD RELATIONSHIP<BR/>VPL5SAA1MS : CANNOT ADD A NON HCS ACCOUNT TO A HCS CARD RELATIONSHIP<BR/>VPL5SAA1NE : DUE FIELD MUST EQUAL ZEROS<BR/>VPL5SAA1OE : DUE FIELD MUST BE GREATER THAN ZEROS<BR/>VPL5SAA1PE : CYCLE FIELD MUST BE GREATER THAN ZEROS<BR/>VPL5SAA1QE : PCT LEVEL EXPIRE DATE INVALID WHEN PCT LVL START DTE NOT PROVIDED<BR/>VPL5SAA1RE : EXPIRE DATE INVALID WHEN PCT CNTRL START DATE NOT PROVIDED<BR/>VPL5SAA1SE : PCT LEVEL START DATE INVALID WHEN PCT LEVEL NOT PROVIDED<BR/>VPL5SAA1TE : PREPAID PLAN NUMBER MUST BE NUMERIC AND NOT EQUAL ZERO<BR/>VPL5SAA1US : PREPAID PLAN NUMBER NOT FOUND<BR/>VPL5SAA1VE : PREPAID PLAN NUMBER IS NOT A VALID TYPE<BR/>VPL5SAA1WE : SINGLE LOAD MAX MUST BE GREATER THAN SINGLE LOAD MIN<BR/>VPL5SAA1XE : LOAD FREQUENCY CAN NOT BE > 0 WHEN LOAD NUMBER = ZERO<BR/>VPL5SAA1YE : MAX AMOUNT CAN NOT BE LESS THAN MIN AMOUNT<BR/>VPL5SAA1ZE : SINGLE LOAD MIN CAN NOT EXCEED LOGO SINGLE LOAD MIN<BR/>VPL5SAA2AE : SINGLE LOAD MAX CAN NOT EXCEED LOGO SINGLE LOAD MAX<BR/>VPL5SAA2BE : MAX LOAD AMOUNT CAN NOT BE ZERO<BR/>VPL5SAA2CE : DAUL BILLING MUST EQUAL ZERO FOR PREPAID ACCOUNT TYPE<BR/>VPL5SAA2DE : BILLING LEVEL MUST BE 1 FOR PREPAID ACCOUNT TYPE<BR/>VPL5SAA2EE : FLEX BILL MUST BE N FOR PREPAID ACCOUNT TYPE<BR/>VPL5SAA2FE : PREPAID FLAG MUST EQUAL ZERO FOR NON PREPAID ACCOUNT TYPE<BR/>VPL5SAA2GE : WAIVE INT CHG MUST EQUAL ZERO FOR PREPAID ACCOUNT TYPE<BR/>VPL5SAA2HE : WAIVE CASH AVAIL MUST BE Y FOR PREPAID ACCOUNT TYPE<BR/>VPL5SAA2IE : PREPMT ALLOWED MUST EQUAL ZERO FOR PREPAID ACCOUNT TYPE<BR/>VPL5SAA2JE : PREPMT MONTHS MUST EQUAL ZERO FOR PREPAID ACCOUNT TYPE<BR/>VPL5SAA2KE : PREPMT ZERO MUST EQUAL ZERO FOR PREPAID ACCOUNT TYPE<BR/>VPL5SAA2LE : LOAN LIMIT MUST BE N FOR PREPAID ACCOUNT TYPE<BR/>VPL5SAA2ME : CASH PLAN NUMBER MUST EQUAL ZEROS FOR PREPAID ACCOUNT TYPE<BR/>VPL5SAA2NE : RETAIL PLAN NUMBER MUST EQUAL ZEROS FOR PREPAID ACCOUNT TYPE<BR/>VPL5SAA2OE : INTEREST VARIANCE MUST EQUAL ZEROS FOR PREPAID ACCOUNT TYPE<BR/>VPL5SAA2PE : VARIANCE EFFECTIVE DATE MUST EQUAL ZEROS FOR PREPAID ACCT TYPE<BR/>VPL5SAA2QE : PLAN PMT OVERRIDE MUST EQUAL ZEROS FOR PREPAID ACCOUNT TYPE<BR/>VPL5SAA2RE : FIXED PMT AMTorPCT MUST EQUAL ZEROS FOR PREPAID ACCOUNT TYPE<BR/>VPL5SAA2SE : PAYMENT HOLD MUST EQUAL ZEROS FOR PREPAID ACCOUNT TYPE<BR/>VPL5SAA2TE : TEMP CREDIT LIMIT MUST EQUAL ZEROS FOR ACCOUNT TYPE<BR/>VPL5SAA2UE : TEMP CREDIT LIMIT EXPIRE DATE MUST EQUAL ZEROS FOR ACCOUNT TYPE<BR/>VPL5SAA2VE : PREFER MIN AMOUNT MUST EQUAL ZEROS FOR PREPAID ACCOUNT TYPE<BR/>VPL5SAA2WE : PREFER INT DAYS MUST EQUAL ZEROS FOR PREPAID ACCOUNT TYPE<BR/>VPL5SAA2XE : PAYMENT ACH FLAG MUST EQUAL ZEROS FOR ACCOUNT TYPE<BR/>VPL5SAA2YE : DC ACH AMOUNT MUST EQUAL ZEROS FOR ACCOUNT TYPE<BR/>VPL5SAA2ZE : DD NOM AMTorPCT FLAG MUST EQUAL ZEROS FOR ACCOUNT TYPE<BR/>VPL5SAA3AE : DD NOM AMTorPCT MUST EQUAL ZEROS FOR ACCOUNT TYPE<BR/>VPL5SAA3BE : PREFER START DATE MUST EQUAL ZEROS FOR PREPAID ACCOUNT TYPE<BR/>VPL5SAA3CE : PREFER END DATE MUST EQUAL ZEROS FOR PREPAID ACCOUNT TYPE<BR/>VPL5SAA3DE : PREFER PROMO DATE MUST EQUAL ZEROS FOR PREPAID ACCOUNT TYPE<BR/>VPL5SAA3EE : DD INTERIM PMTS MUST EQUAL ZEROS FOR PREPAID ACCOUNT TYPE<BR/>VPL5SAA3FE : DD DAILY FREQ MUST EQUAL ZEROS FOR ACCOUNT TYPE<BR/>VPL5SAA3GE : DD CREDIT BAL MUST EQUAL ZEROS FOR ACCOUNT TYPE<BR/>VPL5SAA3HE : PAYMENT REMIT METHOD MUST EQUAL ZEROS FOR ACCOUNT TYPE<BR/>VPL5SAA3IE : DC ACH PLAN MUST EQUAL ZEROS FOR ACCOUNT TYPE<BR/>VPL5SAA3JE : DD RorT BANK ID MUST EQUAL ZEROS FOR ACCOUNT TYPE<BR/>VPL5SAA3KE : DC RorT BANK ID MUST EQUAL ZEROS FOR ACCOUNT TYPE<BR/>VPL5SAA3LE : DD PAYMENT EXPIRE DATE MUST EQUAL ZEROS FOR ACCOUNT TYPE<BR/>VPL5SAA3ME : DD PAYMENT START DATE MUST EQUAL ZEROS FOR ACCOUNT TYPE<BR/>VPL5SAA3NE : DC EXPIRE DATE MUST EQUAL ZEROS FOR ACCOUNT TYPE<BR/>VPL5SAA3OE : DC START DATE MUST EQUAL ZEROS FOR ACCOUNT TYPE<BR/>VPL5SAA3PE : DD ACH TYPE MUST EQUAL SPACE FOR ACCOUNT TYPE<BR/>VPL5SAA3QE : DD ACH ACCOUNT NUMBER MUST EQUAL SPACES FOR ACCOUNT TYPE<BR/>VPL5SAA3SE : DC ACCOUNT TYPE EQUAL ZEROS FOR ACCOUNT TYPE<BR/>VPL5SAA3TE : DC REQUEST DAY INDICATOR MUST EQUAL ZEROS FOR ACCOUNT TYPE<BR/>VPL5SAA3UE : DC ACCOUNT NUMBER MUST EQUAL SPACES FOR ACCOUNT TYPE<BR/>VPL5SAA3VE : DD REQUEST DAY MUST EQUAL ZEROS FOR ACCOUNT TYPE<BR/>VPL5SAA3WE : DD PYMT CHANGE DATE MUST EQUAL ZEROS FOR ACCOUNT TYPE<BR/>VPL5SAA3XE : WAIVE INTL ATM FEE MUST EQUAL ZEROS FOR NON PREPAID ACCOUNT TYPE<BR/>VPL5SAA3YE : WAIVE DOM ATM FEE MUST EQUAL ZEROS FOR NON PREPAID ACCOUNT TYPE<BR/>VPL5SAA3ZE : WAIVE INTL POS FEE MUST EQUAL ZEROS FOR NON PREPAID ACCOUNT TYPE<BR/>VPL5SAA4AE : WAIVE DOM POS FEE MUST EQUAL ZEROS FOR NON PREPAID ACCOUNT TYPE<BR/>VPL5SAA4BE : WAIVE LOAD FEE MUST EQUAL ZEROS FOR NON PREPAID ACCOUNT TYPE<BR/>VPL5SAA4CE : WAIVE RELOAD FEE MUST EQUAL ZEROS FOR NON PREPAID ACCOUNT TYPE<BR/>VPL5SAA4DE : WAIVE DORM FEE MUST EQUAL ZEROS FOR NON PREPAID ACCOUNT TYPE<BR/>VPL5SAA4EE : WAIVE REFUND FEE MUST EQUAL ZEROS FOR NON PREPAID ACCOUNT TYPE<BR/>VPL5SAA4FE : WAIVE STMT FEE MUST EQUAL ZEROS FOR NON PREPAID ACCOUNT TYPE<BR/>VPL5SAA4GE : PREPAID LOAD NBR MUST EQUAL ZEROS FOR NON PREPAID ACCOUNT TYPE<BR/>VPL5SAA4HE : PREPAID MAX LOAD MUST EQUAL ZEROS FOR NON PREPAID ACCOUNT TYPE<BR/>VPL5SAA4IE : PREPAID MIN LOAD MUST EQUAL ZEROS FOR NON PREPAID ACCOUNT TYPE<BR/>VPL5SAA4JE : PREPAID LOAD AMT MUST EQUAL ZEROS FOR NON PREPAID ACCOUNT TYPE<BR/>VPL5SAA4KE : PREPAID LOAD FREQ MUST EQUAL ZEROS FOR NON PREPAID ACCOUNT TYPE<BR/>VPL5SAA4LE : WAIVE FEE CHG MUST EQUAL 1 FOR NON PREPAID ACCOUNT TYPE<BR/>VPL5SAA4ME : DD ACH REQ DAY MUST EQUAL ZEROS FOR NON PREPAID ACCOUNT TYPE<BR/>VPL5SAA4NE : PREPAID LOAD FEE MUST EQUAL ZEROS FOR NON PREPAID ACCOUNT TYPE<BR/>VPL5SAA4OE : TERMSorCONDITIONS DATE MUST BE GREATER THAN ZEROS<BR/>VPL5SAA4UE : VARIANCE EFFECTIVE DATE INVALID WHEN RATE VARIANCES 1-12 = 0<BR/>VPL5SAA4VS : NUMBER GENERATION SERVICE FAILED<BR/>VPL5SAA4WE : STATE OF RESIDENCE DOES NOT MATCH LOGO STATE OF RESIDENCE<BR/>VPL5SAA4XE : STATE OF RESIDENCE IS REQUIRED<BR/>VPL5SAA4YS : SERVICE COULD NOT OBTAIN STORAGE AREA<BR/>VPL5SAA4ZS : SERVICE INPUT TO AorA SERVICE IS AN INCORRECT LENGTH<BR/>VPL5SAA5CE : ALT CUST ADDRESS START DATE NOT A VALID DATE<BR/>VPL5SAA5DE : CORRESPONDING CUSTOMER NUMBER NOT FOUND<BR/>VPL5SAA5EE : DEFAULT PROMO PLAN SHOULD BE ZEROS FOR PREPAID ACCOUNTS<BR/>VPL5SAA5FE : DEFAULT PROMO PLAN NUMBER IS NOT NUMERIC<BR/>VPL5SAA6DE : DC ACH RorT BANK ID VALUE INVALID FOR ACCOUNT TYPE<BR/>VPL5SAA6EE : DC ACH RorT BANK ID IS NOT A VALID NACHA FORMAT<BR/>VPL5SAA6FE : LOGO NOT SETUP TO PROCESS DIRECT DEBIT or CREDIT<BR/>VPL5SAA6GE : ON DEMAND DC TYPE VALUE INVALID FOR ACCOUNT TYPE<BR/>VPL5SAA6HE : DC ACH ACCOUNT INVALID FOR ACCOUNT TYPE<BR/>VPL5SAA6JE : DC ON DEMAND IBAN NOT VALID FOR ACCOUNT TYPE<BR/>VPL5SAA6KE : LOGO NOT SETUP TO PROCESS ON DEMAND IBAN<BR/>VPL5SAA6LE : DC ON DEMAND IBAN IS REQUIRED<BR/>VPL5SAA6ME : IBS DDA ROUTING NBR REQUIRED WHEN DDA ACCT PROVIDED<BR/>VPL5SAA6NE : IBS SAV ROUTING NBR REQUIRED WHEN SAV ACCT PROVIDED<BR/>VPL5SAA6PE : LOGO NOT SETUP TO PROCESS DC IBAN<BR/>VPL5SAA6RE : DC IBAN IS REQUIRED<BR/>VPL5SAA6SE : DD NOM AMTorPCT FLAG MUST = 0 1 2 3 OR 9<BR/>VPL5SAA6TE : DD NOM AMTorPCT MUST BE GREATER THAN ZEROS<BR/>VPL5SAA6UE : DD NOM AMTorPCT VALUE IS INVALID<BR/>VPL5SAA6VE : DD IBAN IS REQUIRED<BR/>VPL5SAAI5S : ORG CAN NOT BE DETERMINED<BR/>VPL5SAAI6S : LOGO CAN NOT BE DETERMINED<BR/>VPL5SAAI7S : AUTO GENERATION OF ACCOUNT NUMBER NOT ACTIVE<BR/>VPL5SAAI8S : SERVICE COULD NOT OBTAIN STORAGE FOR NBRGEN INPUT AREA<BR/>VPL5SAAI9S : SERVICE COULD NOT OBTAIN STORAGE FOR NBRGEN OUTPUT AREA<BR/>VPL5SAAJ0S : MISMATCHED GENERATED FOREIGN ORG<BR/>VPL5SAAJ1S : BILLING ACCOUNTS MUST BEGIN WITH 999<BR/>VPL5SAAJ2S : CONTROL AND DIVERSION ACCOUNTS MUST BEGIN WITH 998<BR/>VPL5SAAJ3S : ACCOUNT NUMBER PROVIDED ALREADY EXISTS<BR/>VPL5SAAJ4S : EMBOSSER NUMBER ALREADY EXISTS<BR/>VPL5SAAJ5S : ACCOUNT ALREADY EXISTS ON RELATIONSHIP MASTER<BR/>VPL5SAAJ6S : FOREIGN ACCOUNT ALREADY EXISTS<BR/>VPL5SAAJ7S : FOREIGN EMBOSSER ALREADY EXISTS<BR/>VPL5SAAJ8S : FOREIGN ACCOUNT ALREADY EXISTS FOR RELATIONSHIP<BR/>VPL5SAAJ9S : ACCOUNT NUMBER CHECK DIGIT IS INVALID<BR/>VPL5SAAK0S : DUAL LOGO NOT FOUND<BR/>VPL5SAAK2S : CUSTOMER NUMBER NOT FOUND<BR/>VPL5SAAK3S : SYSTEM RECORD NOT FOUND<BR/>VPL5SAAK4S : RELATIONSHIPS NOT ACTIVATED ON ORG CTRL RECORD<BR/>VPL5SAAK5S : RELATIONSHIP NUMBER REQUIRED WHEN HCS IS ACTIVE FOR THIS ORG<BR/>VPL5SAAK6S : RELATIONSHIPS NOT ACTIVE ON DUAL ORG RECORD<BR/>VPL5SAAK7S : RELATIONSHIP NUMBER CAN NOT BE ENTERED FOR PREPAID LOGO<BR/>VPL5SAAK8S : RELATIONSHIP RECORD DOES NOT EXIST<BR/>VPL5SAAL0S : FOREIGN RELATIONSHIP RECORD DOES NOT EXIST<BR/>VPL5SAAL1E : CARD SCHEME 2 NOT VALID FOR JCB ACCOUNTS<BR/>VPL5SAAL2E : WAIVE CARD FEE FIELD MUST = 0 OR 1<BR/>VPL5SAAL3E : HCS MUST BE ACTIVE FOR ACCOUNT TYPE VALUES 1 2 OR 3<BR/>VPL5SAAL3E : HCS MUST BE ACTIVE FOR ACCOUNT TYPE VALUES 1 2 OR 3<BR/>VPL5SAAL4E : SWEEPING NOT ALLOWED IN THIS LOGO<BR/>VPL5SAAL5E : ALT CUST ADDRESS EXPIRY DATE NOT A VALID DATE<BR/>VPL5SAAL6E : EXPIRY DATE CAN NOT BE LESS THAN CURRENT PROCESSING DATE<BR/>VPL5SAAL7S : ALTERNATE CUSTOMER NUMBER NOT ON FILE<BR/>VPL5SAAL9E : PRIMARY ACCOUNT FLAG MUST EQUAL SPACE<BR/>VPL5SAAM0E : PRIMARY ACCOUNT NOT ALLOWED - NO RELATIONSHIP RECORD EXISTS<BR/>VPL5SAAM1E : CREDIT LIMIT MUST EQUAL ZEROS<BR/>VPL5SAAM2E : CREDIT LIMIT MUST BE GREATER THAN ZEROS<BR/>VPL5SAAM4E : CREDIT LIMIT CAN NOT EXCEED RELATIONSHIP CREDIT LIMIT<BR/>VPL5SAAM6E : CREDIT LIMIT EXCEEDS SECURED AMOUNT<BR/>VPL5SAAM7E : CUSTOMER NUMBER REQUIRED<BR/>VPL5SAAM8S : CUSTOMER NUMBER NOT FOUND<BR/>VPL5SAAM9E : CARD SCHEME FOR PREPAID ACCOUNT MUST EQUAL 0<BR/>VPL5SAAN0S : FOREIGN CUSTOMER NUMBER NOT FOUND<BR/>VPL5SAAN1E : GENERIC CUSTOMER NOT ALLOWED WHEN PREPAID FLAG IS NOT 1<BR/>VPL5SAAN2E : MEMO BILL CURRENCY MUST BE ZEROS WHEN DUAL CURRENCY IS NOT ACTIVE<BR/>VPL5SAAN3E : MEMO BILL CURRENCY NOT DEFINED<BR/>VPL5SAAN3E : MEMO BILL CURRENCY NOT DEFINED<BR/>VPL5SAAN4E : PRIM ACCT BILLING LEVEL CANNOT BE 1 WHEN REL BILLING LVL = 0 OR 2<BR/>VPL5SAAN5E : BILLING LEVEL MUST EQUAL 0 OR 1<BR/>VPL5SAAN6E : BILLING LEVEL MUST EQUAL 0<BR/>VPL5SAAN7E : BILLING LEVEL IS INVALID FOR RELATIONSHIP<BR/>VPL5SAAN8E : BILLING LEVEL MUST EQUAL 1 WHEN ACCT IS NOT TIED TO RELATIONSHIP<BR/>VPL5SAAN9E : DATE OPENED CAN MUST NOT EQUAL ZEROS<BR/>VPL5SAAO0E : OPENED DATE NOT VALID DATE CAN NOT BE > CURR PROCESSING DATE<BR/>VPL5SAAO1E : APPLI DATE NOT A VALID DATE<BR/>VPL5SAAO2E : CARD SCHEME MUST EQUAL ZERO FOR ACCOUNTS NOT IN A RELATIONSHIP<BR/>VPL5SAAO3E : CARD SCHEME CAN NOT EQUAL 0 FOR ACCOUNT IN A RELATIONSHIP<BR/>VPL5SAAO4E : NO RELATIONSHIP BEING ADDED CARD SCHEME CANNOT BE 1<BR/>VPL5SAAO5E : ORG CARD SCHEME 2or3 NOT ACTIVE CARD SCHEME CANNOT BE 2 OR 3<BR/>VPL5SAAO6E : BILLING CYCLE MUST EQUAL RELATIONSHIP BILLING CYCLE<BR/>VPL5SAAO7E : VALID VALUES FOR PREPAID ACCOUNTS ARE SPACE I O U OR Z<BR/>VPL5SAAO8E : VALID VALUES ARE SPACE 0-9 C H I R S O U OR Z<BR/>VPL5SAAO9E : RELATIONSHIP ACCOUNTS STATEMENT FREQ MUST EQUAL 01<BR/>VPL5SAAP0E : FREQ FIELD INVALID - VALID VALUES OF 01-12 62 OR 99<BR/>VPL5SAAP1E : CARD EXPIRATION NOT A VALID DATE<BR/>VPL5SAAP2E : CARD EXP MUST BE GREATER THAN THE CURRENT PROCESSING DATE<BR/>VPL5SAAP5E : CARD FEE IS NOT A VALID DATE<BR/>VPL5SAAP6E : CEDIT BUREAU DATE NOT A VALID DATE<BR/>VPL5SAAP7E : TERMSorCONDITIONS DATE NOT A VALID DATE<BR/>VPL5SAAP8E : ASSOC DATE NOT A VALID DATE<BR/>VPL5SAAP9E : ASSOC CUSTOMER NUMBER NOT ON FILE<BR/>VPL5SAAQ0E : STATE OF RESIDENCE IS NOT FOUND ON USURY TABLE<BR/>VPL5SAAQ1E : STATE OF RESIDENCE IS INVALID ON USURY TABLE<BR/>VPL5SAAQ2E : STATE OF RESIDENCE IS NOT FOUND<BR/>VPL5SAAQ3E : STATE OF RESIDENCE DOES NOT EXIST<BR/>VPL5SAAQ4E : PRICING CONTROL ID IS NOT FOUND<BR/>VPL5SAAQ5E : PRICING CONTROL ID DOES NOT EXIST<BR/>VPL5SAAQ6E : ISSUANCE ID DOES NOT EXIST<BR/>VPL5SAAQ7E : ISSUANCE ID REQUIRED FOR BANKCARD ACCOUNT<BR/>VPL5SAAQ8E : ISSUANCE ID IS NOT FOUND ON USURY TABLE<BR/>VPL5SAAQ9E : ISSUANCE ID IS NOT FOUND<BR/>VPL5SAAR0E : ISSUANCE ID DOES NOT EXIST<BR/>VPL5SAAR1E : START DATE INVALID WHEN PCT CNTRL ID NOT PROVIDED<BR/>VPL5SAAR2E : START DATE FOR THE PRICING CTRL NOT A VALID DATE<BR/>VPL5SAAR3E : START DATE FOR THE PRICING CTRL MUST BE = OR > NEXT PROCESSING DT<BR/>VPL5SAAR4E : EXPIRE DATE FOR THE PRICING CTRL NOT A VALID DATE<BR/>VPL5SAAR5E : EXPIRE DATE FOR THE PRICING CTRL MUST BE = OR > PCT START DATE<BR/>VPL5SAAR6E : PCT LEVEL START DATE FOR THE PCT LEVEL NOT A VALID DATE<BR/>VPL5SAAR7E : PCT LEVEL START DATE FOR PCT LEVEL MUST BE = OR > NEXT PROCESS DT<BR/>VPL5SAAR8E : PCT LEVEL EXPIRE DATE FOR THE PCT LEVEL NOT A VALID DATE<BR/>VPL5SAAS0E : PAYMENT SKIP NOT ALLOWED<BR/>VPL5SAAS2S : CASH PLAN NUMBER NOT ON FILE OR NOT A CASH TYPE<BR/>VPL5SAAS2S : CASH PLAN NUMBER NOT ON FILE OR NOT A CASH TYPE<BR/>VPL5SAAS3E : RETAIL PLAN NUMBER INVALID FOR NON BANKCARD ACCOUNTS<BR/>VPL5SAAS4E : RETAIL PLAN NUMBER INVALID FOR PREPAID ACCOUNTS<BR/>VPL5SAAS5S : RETAIL PLAN NUMBER NOT ON FILE OR NOT A RETAIL TYPE<BR/>VPL5SAAS6E : INT VARIANCE EFFECTIVE DATE NOT A VALID DATE<BR/>VPL5SAAS7E : INT VARIANCE EFFECTIVE DATE MUST BE > CURRENT PROCESSING DATE<BR/>VPL5SAAS8E : DDA ROUTING NUMBER REQUIRED WHEN DDA ACCOUNT PROVIDED<BR/>VPL5SAAS9E : SAV ROUTING NUMBER REQUIRED WHEN SAV ACCOUNT PROVIDED<BR/>VPL5SAAT4E : CARD TECH FIELD INVALID<BR/>VPL5SAAT5E : CARD TECH FIELD MUST = 0 FOR CARD SCHEME 2<BR/>VPL5SAAT6E : SMART CARD NOT ALLOWED<BR/>VPL5SAAT7E : TEMP CREDIT LIMIT NOT ALLOWED FOR RELATIONSHIP ACCOUNT<BR/>VPL5SAAT8E : TEMP CREDIT LIMIT EQUAL CREDIT LIMIT<BR/>VPL5SAAT9E : TEMP CREDIT LIMIT GREATER THAN LOGO CREDIT LIMIT CEILING<BR/>VPL5SAAU0E : DATE TEMP CREDIT LIMIT EXPIRE IS NOT A VALID DATE<BR/>VPL5SAAU1E : EXPIRE DATE FOR TEMP CREDIT LINE MUST BE > OR = CURR PROCESS DATE<BR/>VPL5SAAU2E : DD PAYMENT INVALID FOR DEBIT CARDS<BR/>VPL5SAAU3E : DD PAYMENT MUST EQUAL ZEROS<BR/>VPL5SAAU4E : DD PAYMENT MUST EQUAL ZEROS<BR/>VPL5SAAU5E : DD PAYMENT INVALID VALUE - VALID VALUES ARE 1 2 AND 7<BR/>VPL5SAAU6E : DD PAYMENT MUST EQUAL 0 WHEN REL BILLING LEVEL EQUAL 0<BR/>VPL5SAAU7E : DD NOM AMTorPCT FLAG INVALID FOR DEBIT CARD<BR/>VPL5SAAU8E : DD NOM AMTorPCT MUST EQUAL ZEROS<BR/>VPL5SAAU9E : DD NOM AMTorPCT MUST BE GREATER THAN ZEROS<BR/>VPL5SAAV0E : DD NOM AMTorPCT VALUE IS INVALID<BR/>VPL5SAAV1E : PREFER START DATE IS NOT A VALID DATE<BR/>VPL5SAAV2E : PREFER END DATE IS NOT A VALID DATE<BR/>VPL5SAAV3E : PREFER PROMO DATE IS NOT A VALID DATE<BR/>VPL5SAAV4E : DD INTERIM PAYMENTS MUST EQUAL 0<BR/>VPL5SAAV5E : DD DAILY FREQUENCY INVALID - ACCOUNT IN HCS RELATIONSHIP<BR/>VPL5SAAV6E : DD DAILY FREQUENCY FIELD MUST = 0<BR/>VPL5SAAV7E : DD REQ DAY MUST EQUAL ZER0 WHEN DD DAILY FREQUENCY NOT EQUAL ZERO<BR/>VPL5SAAV8E : DD PAYMENT MUST EQUAL 2 WHEN DD DAILY FREQUENCY NOT EQUAL ZERO<BR/>VPL5SAAV9E : DD PAYMENT CHANGE DATE MUST EQUAL ZERO WHEN DD DAILY FREQ = ZERO<BR/>VPL5SAAW0E : DD CREDIT BALANCE INVALID - ACCOUNT IN A HCS RELATIONSHIP<BR/>VPL5SAAW1E : DD PAYMENT REMITANCE METHOD MUST EQUAL 0 WHEN BILLING LVL = 0<BR/>VPL5SAAW2S : DC PLAN DOES NOT EXIST<BR/>VPL5SAAW3E : DC PLAN NOT A RETAIL PLAN<BR/>VPL5SAAW4E : DD RorT BANK ID MUST BE GREATER THAN ZEROS<BR/>VPL5SAAW5E : DD RorT BANK ID IS NOT A VALID NACHA FORMAT<BR/>VPL5SAAW6E : DC RorT BANK ID IS NOT A VALID NACHA FORMAT<BR/>VPL5SAAW7E : DD PAYMENT EXPIRE DATE NOT A VALID DATE<BR/>VPL5SAAW8E : DD PAYMENT EXPIRE DATE MUST BE > OR = NEXT PROCESSING DATE<BR/>VPL5SAAX0E : DD PAYMENT START DATE IS NOT A VALID DATE<BR/>VPL5SAAX1E : DD PAYMENT START MUST BE GREATER OR EQUAL NEXT PROCESSING DATE<BR/>VPL5SAAX2E : DC ACH EXPIRE DATE IS NOT A VALID DATE<BR/>VPL5SAAX3E : DC ACH EXPIRE DATE MUST BE GREATER OR EQUAL NEXT PROCESSING DATE<BR/>VPL5SAAX4E : DC ACH START DATE IS NOT A VALID DATE<BR/>VPL5SAAX5E : DD ACCOUNT NUMBER MUST BE GREATER THAN ZEROS<BR/>VPL5SAAX6E : DD REQUEST DAY MUST = 0 WHEN LOGO DD PAYMENT FLAG IS S OR D<BR/>VPL5SAAX7E : DD REQUEST DAY MUST BE BETWEEN 01 AND 31<BR/>VPL5SAAX8E : DC REQUEST DAY INDICATOR MUST EQUAL ZEROS<BR/>VPL5SAAX9E : DD PAYMENT CHANGE DATE INVALID FOR DEBIT CARDS<BR/>VPL5SAAY0E : DD PAYMENT CHANGE DATE IS NOT A VALID DATE<BR/>VPL5SAAY1E : DD PAYMENT CHANGE DATE MUST BE > OR = NEXT PROCESSING DATE<BR/>VPL5SAAY2E : DD PAYMENT CHANGE DATE MUST BE GREATER OR EQUAL START DATE<BR/>VPL5SAAY3E : DD PAYMENT CHANGE DATE MUST BE < OR EQUAL PAYMENT EXPIRATION DATE<BR/>VPL5SAAY4E : DD PAYMENT CHANGE DATE IS INVALID<BR/>VPL5SAAY5S : PROMOTION NOT ON FILE<BR/>VPL5SAAY6S : PROMOTION NOT VALID<BR/>VPL5SAAY7E : OWNING BRANCH MUST BE GREATER THAN ZEROS FOR BANKCARD ACCOUNTS<BR/>VPL5SAAY8S : OWNING BRANCH NOT ON FILE<BR/>VPL5SAAZ1E : USER DATE 1 IS NOT A VALID DATE<BR/>VPL5SAAZ2E : USER DATE 2 IS NOT A VALID DATE<BR/>VPL5SAAZ3E : USER DATE 3 IS NOT A VALID DATE<BR/>VPL5SAAZ4E : USER DATE 4 IS NOT A VALID DATE<BR/>VPL5SAAZ5E : USER DATE 5 IS NOT A VALID DATE<BR/>VPL5SAAZ6E : USER DATE 6 IS NOT A VALID DATE<BR/>VPL5SAAZ7E : USER DATE 7 IS NOT A VALID DATE<BR/>VPL5SAAZ8E : USER DATE 8 IS NOT A VALID DATE<BR/>VPL5SAAZ9E : USER DATE 9 IS NOT A VALID DATE<BR/>VPL5SAB33E : INVALID ON DEM DC IBAN - MOD97 VALIDATION FAILED<BR/>VPL5SAB34E : INVALID DD IBAN - MOD97 VALIDATION CHECK FAILED<BR/> : <BR/>VPL5SAI02S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES<BR/>VPL5SAI03E : ORGANIZATION IS NOT NUMERIC OR MUST BE VALUE BETWEEN 000 AND 998<BR/>VPL5SAI04E : REQUESTED CARDorACCT NUMBER IS NOT NUMERIC OR EQUAL SPACES<BR/>VPL5SAI05E : INVALID FOREIGN USE IND SPECIFIED - VALID VALUES ARE SPACE 0 OR 1<BR/>VPL5SAI06S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES<BR/>VPL5SAI07S : ORGANIZATION NOT FOUND ON FILE<BR/>VPL5SAI08S : FOREIGN ORGANIZATION NOT FOUND ON FILE<BR/>VPL5SAI09S : ACCOUNT NUMBER NOT FOUND<BR/>VPL5SAI10S : ACCOUNT NUMBER NOT FOUND ON FILE<BR/>VPL5SAI11S : LOGO NOT FOUND ON FILE<BR/>VPL5SAI12S : CUSTOMER NOT FOUND ON FILE<BR/>VPL5SAI13I : FOREIGN USE ORG UNAVAILABLE PROCESSED LOCAL ORG ACCOUNT DATA<BR/>VPL5SAIZ1S : SERVICE COULD NOT OBTAIN STORAGE AREA<BR/>VPL5SAIZ2S : SERVICE INPUT TO ACCOUNT INQ SERVICE IS AN INCORRECT LENGTH<BR/>VPL5SAIZ3S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPL5SAIZ4S : REQUESTED ORGANIZATION COULD NOT BE DETERMINED<BR/>VPL5SAIZ5S : REQUESTED ORGANIZATION NOT FOUND<BR/>VPL5SAIZ6S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/> : <BR/>VPL5SAP55E : ATM CASH NBR FIELD VALUE MUST BE NUMERIC<BR/>VPL5SAP57E : TXN LIMIT ATM FIELD VALUE MUST BE NUMERIC<BR/>VPL5SAP59E : OTC CASH AMT FIELD VALUE MUST BE NUMERIC<BR/>VPL5SAP61E : OTC CASH NBR FIELD VALUE MUST BE NUMERIC<BR/>VPL5SAP63E : TXN LIMIT OTC FIELD VALUE MUST BE NUMERIC<BR/>VPL5SAP65E : RETAIL AMT FIELD VALUE MUST BE NUMERIC<BR/>VPL5SAP67E : RETAIL NBR FIELD VALUE MUST BE NUMERIC<BR/>VPL5SAP69E : TXN LIMIT RETAIL FIELD VALUE MUST BE NUMERIC<BR/>VPL5SAP71E : DATE USER 1 FIELD MUST BE NUMERIC AND IN JULIAN FORMAT<BR/>VPL5SAP72E : DATE USER 2 FIELD MUST BE NUMERIC AND IN JULIAN FORMAT<BR/>VPL5SAP73E : ADMIN BRCH FIELD VALUE MUST BE NUMERIC<BR/>VPL5SAP74E : ADMIN BRCH DELIVERY OPTION FIELD VALUE MUST BE NUMERIC<BR/>VPL5SAP75E : NEXT CARD EXPIRE DATE MUST BE NUMERIC AND FUTURE DATE<BR/>VPL5SAP76E : _1ST ISS BR FIELD VALUE MUST BE NUMERIC<BR/>VPL5SAP77E : _1ST ISS BR DELIVERY OPTION FIELD VALUE MUST BE NUMERIC<BR/>VPL5SAP83E : MAXIMUM FIELD MUST BE NUMERIC<BR/>VPL5SAP84E : NBR FIELD MUST BE NUMERIC<BR/>VPL5SAP01S : SERVICE COULD NOT OBTAIN STORAGE AREA<BR/>VPL5SAP02S : SERVICE INPUT TO AorP SERVICE IS AN INCORRECT LENGTH<BR/>VPL5SAP04S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPL5SAP06S : ACCOUNT NUMBER REQUIRED IF CARD NUMBER NOT PROVIDED<BR/>VPL5SAP07S : NO VALID ORG FOUND FOR POST-TO-ACCOUNT<BR/>VPL5SAP08S : ORGANIZATION NOT DETERMINED<BR/>VPL5SAP09S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES<BR/>VPL5SAP10S : SYSTEM RECORD NOT FOUND<BR/>VPL5SAP11S : ORGANIZATION NUMBER NOT FOUND<BR/>VPL5SAP12S : ACCOUNT NUMBER NOT FOUND<BR/>VPL5SAP13S : LOGO RECORD NOT FOUND<BR/>VPL5SAP14S : CARD NUMBER ALREADY EXISTS<BR/>VPL5SAP15S : CARD NBR AND ACCOUNT NBR MUST BE EQUAL FOR CARD SCHEME<BR/>VPL5SAP16S : CARD NUMBER CHECK DIGIT IS INVALID<BR/>VPL5SAP17S : CARD NUMBER GENERATION FAILED<BR/>VPL5SAP18S : CARD SEQUENCE ALREADY AT MAXIMUM FOR CARD NUMBER<BR/>VPL5SAP19S : CARD SEQUENCE ALREADY AT MAXIMUM FOR CHIP CARD NUMBER<BR/>VPL5SAP20S : SERVICE COULD NOT OBTAIN STORAGE AREA FOR NUMBER GEN INPUT<BR/>VPL5SAP21S : SERVICE COULD NOT OBTAIN STORAGE AREA FOR NUMBER GEN OUTPUT<BR/>VPL5SAP22S : CARD NUMBER ALREADY EXISTS ON DUAL ORG<BR/>VPL5SAP23S : CHIP CARD RECORD ALREADY EXISTS<BR/>VPL5SAP24S : CHIP CARD RECORD ALREADY EXISTS ON DUAL ORG<BR/>VPL5SAP25E : RECORD NUMBER IS INVALID<BR/>VPL5SAP26E : CARD ACTION VALUE MUST BE ZERO OR 1<BR/>VPL5SAP28E : NUMBER CARDS REQUESTED MUST EQUAL ZERO OR 1<BR/>VPL5SAP29E : EMBOSSING CARD FIELD MUST BE NUMERIC<BR/>VPL5SAP30E : EMBOSSING REQ FIELD MUST BE NUMERIC<BR/>VPL5SAP31E : NAME TYPE IS INVALID<BR/>VPL5SAP32E : EMBOSSED NAME TYPE MUST NOT EQUAL 3<BR/>VPL5SAP33E : EMBOSSED NAME 1 MUST BE GREATER THAN SPACE<BR/>VPL5SAP34E : SC ACTIVE FIELD VALUE IS INVALID<BR/>VPL5SAP35E : PLUS FIELD MUST BE NUMERIC<BR/>VPL5SAP36E : PLUS FIELD VALUE IS INVALID<BR/>VPL5SAP37E : PIN DELAY DAYS FIELD MUST BE NUMERIC<BR/>VPL5SAP38E : PIN DELAY DAYS MUST EQUAL ZERO FOR SMART CARD<BR/>VPL5SAP39E : EXPIRATION DATE MUST BE NUMERIC<BR/>VPL5SAP40E : EXPIRATION DATE FIELD FORMAT IS INVALID<BR/>VPL5SAP41E : PIN OFFSET FIELD MUST BE NUMERIC<BR/>VPL5SAP42E : POS SERVICE CODE FIELD IS INVALID<BR/>VPL5SAP43E : CARDHOLDER FLAG FIELD VALUE IS INVALID<BR/>VPL5SAP44E : MINI FIELD MUST BE NUMERIC AND VALID VALUES ARE 0 THRU 2<BR/>VPL5SAP45E : MINI FIELD MUST EQUAL ZERO FOR NON-VISA ACCOUNT<BR/>VPL5SAP46E : PIN SUPPRESSION FIELD MUST BE 0 OR 1<BR/>VPL5SAP47E : BLOCK CODE MUST EQUAL A - Z OR SPACE<BR/>VPL5SAP48E : CURR CRDorACT FIELD VALUE IS INVALID<BR/>VPL5SAP49E : MAXIMUM FREQ FIELD IS INVALID<BR/>VPL5SAP50E : MAXIMUM FREQ INPUT NOT ALLOWED WHEN NO AUTH LIMIT OVRRD<BR/>VPL5SAP53E : ATM CASH AMT FIELD VALUE MUST BE NUMERIC<BR/>VPL5SAP54E : ATM CASH AMT FIELD UPDATE IS NOT ALLOWED<BR/>VPL5SAP56E : ATM CASH NBR FIELD UPDATE IS NOT ALLOWED<BR/>VPL5SAP58E : TXN LIMIT ATM FIELD UPDATE IS NOT ALLOWED<BR/>VPL5SAP60E : OTC CASH AMT FIELD UPDATE IS NOT ALLOWED<BR/>VPL5SAP62E : OTC CASH NBR FIELD UPDATE IS NOT ALLOWED<BR/>VPL5SAP64E : TXN LIMIT OTC FIELD UPDATE IS NOT ALLOWED<BR/>VPL5SAP66E : RETAIL AMT FIELD UPDATE IS NOT ALLOWED<BR/>VPL5SAP68E : RETAIL NBR FIELD UPDATE IS NOT ALLOWED<BR/>VPL5SAP70E : TXN LIMIT RETAIL FIELD UPDATE IS NOT ALLOWED<BR/>VPL5SAP75E : NEXT CARD EXPIRE DATE MUST BE NUMERIC AND FUTURE DATE<BR/>VPL5SAP78E : AUTH CRITERIA TABLE NUMBER IS INVALID<BR/>VPL5SAP79E : SDP PROCESSING NOT SUPPORTED BY LOGO<BR/>VPL5SAP80E : SDP CYCLE NOT SUPPORTED BY SYSTEM<BR/>VPL5SAP81S : PROGRAM ID IS INVALID<BR/>VPL5SAP82E : PROGRAM ID MUST NOT BE GREATER THAN ZERO FOR MAG STRIP<BR/>VPL5SAP85E : FREQ FIELD MUST BE NUMERIC<BR/>VPL5SAP86E : ORG NOT VALID FOR POST-TO-ACCOUNT<BR/>VPL5SAP87E : CUSTOMER NUMBER IS INVALID<BR/>VPL5SAP89E : RECORD NUMBER MUST BE NUMERIC AND LESS THAN 9999<BR/>VPL5SAP90E : NAME TYPE 1 MUST BE NUMERIC<BR/>VPL5SAP91E : NAME TYPE 2 MUST BE NUMERIC<BR/>VPL5SAP92S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES<BR/>VPL5SAP93S : ORG INVALID<BR/>VPL5SAP94E : VALUE MUST BE EITHER 1 THRU 4 OR A THRU G<BR/>VPL5SAP95E : CARDHOLDER FLAG MUST EQUAL 0 OR 1 FOR CARD SCHEME 2 OR 3<BR/>VPL5SAP96E : INVALID ISO LANGUAGE CODE<BR/>VPL5SAP97E : CARD DELAY DAYS VALUE MUST BE NUMERIC<BR/>VPL5SAP98E : VALID PORECESS TYPE VALUE IS '0'<BR/>VPL5SAPA0E : CARD LOGO MUST BE NUMERIC<BR/>VPL5SAPA1E : DVC MUST EQUAL A OR D<BR/>VPL5SAPA2E : DVC MUST EQUAL C OR F<BR/>VPL5SAPA3E : DVC MUST EQUAL D<BR/>VPL5SAPA4E : DVC MUST EQUAL F<BR/>VPL5SAPA5E : DVC MUST EQUAL
*/
type LoyaltyRedemptionV1FvEmeaStatus465 struct {
	Payload *models.FsErrorDetails
}

func (o *LoyaltyRedemptionV1FvEmeaStatus465) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loyaltyRedemption][%d] loyaltyRedemptionV1FvEmeaStatus465  %+v", 465, o.Payload)
}

func (o *LoyaltyRedemptionV1FvEmeaStatus465) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *LoyaltyRedemptionV1FvEmeaStatus465) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
