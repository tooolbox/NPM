// Code generated by go-swagger; DO NOT EDIT.

package loyalty_and_rewards_core

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// LoyaltyRedemptionInquiryV1FvEmeaReader is a Reader for the LoyaltyRedemptionInquiryV1FvEmea structure.
type LoyaltyRedemptionInquiryV1FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LoyaltyRedemptionInquiryV1FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLoyaltyRedemptionInquiryV1FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLoyaltyRedemptionInquiryV1FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewLoyaltyRedemptionInquiryV1FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewLoyaltyRedemptionInquiryV1FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewLoyaltyRedemptionInquiryV1FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewLoyaltyRedemptionInquiryV1FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewLoyaltyRedemptionInquiryV1FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewLoyaltyRedemptionInquiryV1FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewLoyaltyRedemptionInquiryV1FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 465:
		result := NewLoyaltyRedemptionInquiryV1FvEmeaStatus465()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLoyaltyRedemptionInquiryV1FvEmeaOK creates a LoyaltyRedemptionInquiryV1FvEmeaOK with default headers values
func NewLoyaltyRedemptionInquiryV1FvEmeaOK() *LoyaltyRedemptionInquiryV1FvEmeaOK {
	return &LoyaltyRedemptionInquiryV1FvEmeaOK{}
}

/*LoyaltyRedemptionInquiryV1FvEmeaOK handles this case with default header values.

successful operation
*/
type LoyaltyRedemptionInquiryV1FvEmeaOK struct {
	Payload *models.LoyaltyRedemptionInquiryResponse
}

func (o *LoyaltyRedemptionInquiryV1FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loyaltyRedemptionInquiry][%d] loyaltyRedemptionInquiryV1FvEmeaOK  %+v", 200, o.Payload)
}

func (o *LoyaltyRedemptionInquiryV1FvEmeaOK) GetPayload() *models.LoyaltyRedemptionInquiryResponse {
	return o.Payload
}

func (o *LoyaltyRedemptionInquiryV1FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LoyaltyRedemptionInquiryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoyaltyRedemptionInquiryV1FvEmeaBadRequest creates a LoyaltyRedemptionInquiryV1FvEmeaBadRequest with default headers values
func NewLoyaltyRedemptionInquiryV1FvEmeaBadRequest() *LoyaltyRedemptionInquiryV1FvEmeaBadRequest {
	return &LoyaltyRedemptionInquiryV1FvEmeaBadRequest{}
}

/*LoyaltyRedemptionInquiryV1FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type LoyaltyRedemptionInquiryV1FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *LoyaltyRedemptionInquiryV1FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loyaltyRedemptionInquiry][%d] loyaltyRedemptionInquiryV1FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *LoyaltyRedemptionInquiryV1FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *LoyaltyRedemptionInquiryV1FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoyaltyRedemptionInquiryV1FvEmeaUnauthorized creates a LoyaltyRedemptionInquiryV1FvEmeaUnauthorized with default headers values
func NewLoyaltyRedemptionInquiryV1FvEmeaUnauthorized() *LoyaltyRedemptionInquiryV1FvEmeaUnauthorized {
	return &LoyaltyRedemptionInquiryV1FvEmeaUnauthorized{}
}

/*LoyaltyRedemptionInquiryV1FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type LoyaltyRedemptionInquiryV1FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *LoyaltyRedemptionInquiryV1FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loyaltyRedemptionInquiry][%d] loyaltyRedemptionInquiryV1FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *LoyaltyRedemptionInquiryV1FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *LoyaltyRedemptionInquiryV1FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoyaltyRedemptionInquiryV1FvEmeaForbidden creates a LoyaltyRedemptionInquiryV1FvEmeaForbidden with default headers values
func NewLoyaltyRedemptionInquiryV1FvEmeaForbidden() *LoyaltyRedemptionInquiryV1FvEmeaForbidden {
	return &LoyaltyRedemptionInquiryV1FvEmeaForbidden{}
}

/*LoyaltyRedemptionInquiryV1FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type LoyaltyRedemptionInquiryV1FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *LoyaltyRedemptionInquiryV1FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loyaltyRedemptionInquiry][%d] loyaltyRedemptionInquiryV1FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *LoyaltyRedemptionInquiryV1FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *LoyaltyRedemptionInquiryV1FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoyaltyRedemptionInquiryV1FvEmeaNotFound creates a LoyaltyRedemptionInquiryV1FvEmeaNotFound with default headers values
func NewLoyaltyRedemptionInquiryV1FvEmeaNotFound() *LoyaltyRedemptionInquiryV1FvEmeaNotFound {
	return &LoyaltyRedemptionInquiryV1FvEmeaNotFound{}
}

/*LoyaltyRedemptionInquiryV1FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type LoyaltyRedemptionInquiryV1FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *LoyaltyRedemptionInquiryV1FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loyaltyRedemptionInquiry][%d] loyaltyRedemptionInquiryV1FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *LoyaltyRedemptionInquiryV1FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *LoyaltyRedemptionInquiryV1FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoyaltyRedemptionInquiryV1FvEmeaTooManyRequests creates a LoyaltyRedemptionInquiryV1FvEmeaTooManyRequests with default headers values
func NewLoyaltyRedemptionInquiryV1FvEmeaTooManyRequests() *LoyaltyRedemptionInquiryV1FvEmeaTooManyRequests {
	return &LoyaltyRedemptionInquiryV1FvEmeaTooManyRequests{}
}

/*LoyaltyRedemptionInquiryV1FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type LoyaltyRedemptionInquiryV1FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *LoyaltyRedemptionInquiryV1FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loyaltyRedemptionInquiry][%d] loyaltyRedemptionInquiryV1FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *LoyaltyRedemptionInquiryV1FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *LoyaltyRedemptionInquiryV1FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoyaltyRedemptionInquiryV1FvEmeaStatus452 creates a LoyaltyRedemptionInquiryV1FvEmeaStatus452 with default headers values
func NewLoyaltyRedemptionInquiryV1FvEmeaStatus452() *LoyaltyRedemptionInquiryV1FvEmeaStatus452 {
	return &LoyaltyRedemptionInquiryV1FvEmeaStatus452{}
}

/*LoyaltyRedemptionInquiryV1FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type LoyaltyRedemptionInquiryV1FvEmeaStatus452 struct {
}

func (o *LoyaltyRedemptionInquiryV1FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loyaltyRedemptionInquiry][%d] loyaltyRedemptionInquiryV1FvEmeaStatus452 ", 452)
}

func (o *LoyaltyRedemptionInquiryV1FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLoyaltyRedemptionInquiryV1FvEmeaStatus453 creates a LoyaltyRedemptionInquiryV1FvEmeaStatus453 with default headers values
func NewLoyaltyRedemptionInquiryV1FvEmeaStatus453() *LoyaltyRedemptionInquiryV1FvEmeaStatus453 {
	return &LoyaltyRedemptionInquiryV1FvEmeaStatus453{}
}

/*LoyaltyRedemptionInquiryV1FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type LoyaltyRedemptionInquiryV1FvEmeaStatus453 struct {
}

func (o *LoyaltyRedemptionInquiryV1FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loyaltyRedemptionInquiry][%d] loyaltyRedemptionInquiryV1FvEmeaStatus453 ", 453)
}

func (o *LoyaltyRedemptionInquiryV1FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLoyaltyRedemptionInquiryV1FvEmeaStatus455 creates a LoyaltyRedemptionInquiryV1FvEmeaStatus455 with default headers values
func NewLoyaltyRedemptionInquiryV1FvEmeaStatus455() *LoyaltyRedemptionInquiryV1FvEmeaStatus455 {
	return &LoyaltyRedemptionInquiryV1FvEmeaStatus455{}
}

/*LoyaltyRedemptionInquiryV1FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type LoyaltyRedemptionInquiryV1FvEmeaStatus455 struct {
}

func (o *LoyaltyRedemptionInquiryV1FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loyaltyRedemptionInquiry][%d] loyaltyRedemptionInquiryV1FvEmeaStatus455 ", 455)
}

func (o *LoyaltyRedemptionInquiryV1FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLoyaltyRedemptionInquiryV1FvEmeaStatus465 creates a LoyaltyRedemptionInquiryV1FvEmeaStatus465 with default headers values
func NewLoyaltyRedemptionInquiryV1FvEmeaStatus465() *LoyaltyRedemptionInquiryV1FvEmeaStatus465 {
	return &LoyaltyRedemptionInquiryV1FvEmeaStatus465{}
}

/*LoyaltyRedemptionInquiryV1FvEmeaStatus465 handles this case with default header values.

Backend Response Code and message in odsMessages field: <BR/><BR/>VPLKSRI01S : SERVICE COULD NOT OBTAIN STORAGE AREA<BR/>VPLKSRI02S : SERVICE INPUT TO INQ REDEEM SERVICE IS INCORRECT<BR/>VPLKSRI04S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPLKSRI05S : LMS IS IN AFTER HOURS RETRY IN A FEW MINUTES<BR/>VPLKSRI06S : INVALID ORG VALID VALUES ARE 001-997<BR/>VPLKSRI08S : SECURITY IS INVALID FOR ORGANIZATION<BR/>VPLKSRI09S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPLKSRI10S : APPLICATION IN NO-PROCESSING STATUS RETRY IN A FEW MINUTES<BR/>VPLKSRI11S : ORGANIZATION RECORD NOT FOUND<BR/>VPLKSRI14S : BATCH DATE MUST BE NUMERIC<BR/>VPLKSRI15S : INVALID CARD NUMBER<BR/>VPLKSRI16S : INVALID CARD NUMBER - DIFFERENT LMS ORG<BR/>VPLKSRI17E : INVALID ACCOUNT NUMBER - MUST BE NUMERIC<BR/>VPLKSRI18E : ENTER EITHER VALID CARD NUMBER OR ACCOUNT NUMBER-SCHEME<BR/>VPLKSRI19S : TRANSACTION RECORD NOT FOUND ON FILE<BR/>VPLKSRI20E : INVALID FUNCTION CODE VALID VALUES ARE P N AND SPACES<BR/>VPLKSRI21E : SEQUENCE NUMBER MUST BE GREATER THAN ZERO<BR/>VPLKSRI22E : REDEMPTION BY CARD IS NOT ALLOWED FOR THE ENTERED ORG<BR/>VPLKSRI23E : CMS CARD NUMBER ALREADY ENTERED ACCOUNT NUMBER NOT REQUIRED<BR/>VPLKSRI24E : CMS CARD NUMBER ALREADY ENTERED SCHEME NOT REQUIRED<BR/>VPLKSRI25S : POINTS ACCOUNT RECORD NOT FOUND<BR/>VPLKSRI26S : ACCOUNT STRIP FILE RECORD NOT FOUND<BR/>VPLKSRI27S : ACCOUNT DEMOGRAPHICS RECORD NOT FOUND<BR/>VPLKSRI28S : POINT SCHEME ACCOUNT RECORD NOT FOUND<BR/>VPLKSRI29S : POINTS ACCOUNT RECORD IS IN ADD PENDING STATUS<BR/>VPLKSRI30S : ACCOUNT DEMOGRAPHICS RECORD IS IN ADD PENDING STATUS<BR/>VPLKSRI38E : TRANSACTION MEMO RECORD NOT FOUND ON FIL
*/
type LoyaltyRedemptionInquiryV1FvEmeaStatus465 struct {
	Payload *models.FsErrorDetails
}

func (o *LoyaltyRedemptionInquiryV1FvEmeaStatus465) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loyaltyRedemptionInquiry][%d] loyaltyRedemptionInquiryV1FvEmeaStatus465  %+v", 465, o.Payload)
}

func (o *LoyaltyRedemptionInquiryV1FvEmeaStatus465) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *LoyaltyRedemptionInquiryV1FvEmeaStatus465) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
