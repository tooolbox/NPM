// Code generated by go-swagger; DO NOT EDIT.

package statement

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// StatementPdfListV1FvEmeaReader is a Reader for the StatementPdfListV1FvEmea structure.
type StatementPdfListV1FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StatementPdfListV1FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStatementPdfListV1FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewStatementPdfListV1FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewStatementPdfListV1FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewStatementPdfListV1FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewStatementPdfListV1FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewStatementPdfListV1FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 466:
		result := NewStatementPdfListV1FvEmeaStatus466()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewStatementPdfListV1FvEmeaOK creates a StatementPdfListV1FvEmeaOK with default headers values
func NewStatementPdfListV1FvEmeaOK() *StatementPdfListV1FvEmeaOK {
	return &StatementPdfListV1FvEmeaOK{}
}

/*StatementPdfListV1FvEmeaOK handles this case with default header values.

Success
*/
type StatementPdfListV1FvEmeaOK struct {
	Payload *models.StatementListResponse
}

func (o *StatementPdfListV1FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/statementPdfList][%d] statementPdfListV1FvEmeaOK  %+v", 200, o.Payload)
}

func (o *StatementPdfListV1FvEmeaOK) GetPayload() *models.StatementListResponse {
	return o.Payload
}

func (o *StatementPdfListV1FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StatementListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStatementPdfListV1FvEmeaUnauthorized creates a StatementPdfListV1FvEmeaUnauthorized with default headers values
func NewStatementPdfListV1FvEmeaUnauthorized() *StatementPdfListV1FvEmeaUnauthorized {
	return &StatementPdfListV1FvEmeaUnauthorized{}
}

/*StatementPdfListV1FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials
*/
type StatementPdfListV1FvEmeaUnauthorized struct {
}

func (o *StatementPdfListV1FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/statementPdfList][%d] statementPdfListV1FvEmeaUnauthorized ", 401)
}

func (o *StatementPdfListV1FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStatementPdfListV1FvEmeaForbidden creates a StatementPdfListV1FvEmeaForbidden with default headers values
func NewStatementPdfListV1FvEmeaForbidden() *StatementPdfListV1FvEmeaForbidden {
	return &StatementPdfListV1FvEmeaForbidden{}
}

/*StatementPdfListV1FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation
*/
type StatementPdfListV1FvEmeaForbidden struct {
}

func (o *StatementPdfListV1FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/statementPdfList][%d] statementPdfListV1FvEmeaForbidden ", 403)
}

func (o *StatementPdfListV1FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStatementPdfListV1FvEmeaStatus452 creates a StatementPdfListV1FvEmeaStatus452 with default headers values
func NewStatementPdfListV1FvEmeaStatus452() *StatementPdfListV1FvEmeaStatus452 {
	return &StatementPdfListV1FvEmeaStatus452{}
}

/*StatementPdfListV1FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type StatementPdfListV1FvEmeaStatus452 struct {
}

func (o *StatementPdfListV1FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/statementPdfList][%d] statementPdfListV1FvEmeaStatus452 ", 452)
}

func (o *StatementPdfListV1FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStatementPdfListV1FvEmeaStatus453 creates a StatementPdfListV1FvEmeaStatus453 with default headers values
func NewStatementPdfListV1FvEmeaStatus453() *StatementPdfListV1FvEmeaStatus453 {
	return &StatementPdfListV1FvEmeaStatus453{}
}

/*StatementPdfListV1FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type StatementPdfListV1FvEmeaStatus453 struct {
}

func (o *StatementPdfListV1FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/statementPdfList][%d] statementPdfListV1FvEmeaStatus453 ", 453)
}

func (o *StatementPdfListV1FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStatementPdfListV1FvEmeaStatus455 creates a StatementPdfListV1FvEmeaStatus455 with default headers values
func NewStatementPdfListV1FvEmeaStatus455() *StatementPdfListV1FvEmeaStatus455 {
	return &StatementPdfListV1FvEmeaStatus455{}
}

/*StatementPdfListV1FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type StatementPdfListV1FvEmeaStatus455 struct {
}

func (o *StatementPdfListV1FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/statementPdfList][%d] statementPdfListV1FvEmeaStatus455 ", 455)
}

func (o *StatementPdfListV1FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStatementPdfListV1FvEmeaStatus466 creates a StatementPdfListV1FvEmeaStatus466 with default headers values
func NewStatementPdfListV1FvEmeaStatus466() *StatementPdfListV1FvEmeaStatus466 {
	return &StatementPdfListV1FvEmeaStatus466{}
}

/*StatementPdfListV1FvEmeaStatus466 handles this case with default header values.

Statement Backend Exception Occurred
*/
type StatementPdfListV1FvEmeaStatus466 struct {
	Payload *models.FsErrorDetails
}

func (o *StatementPdfListV1FvEmeaStatus466) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/statementPdfList][%d] statementPdfListV1FvEmeaStatus466  %+v", 466, o.Payload)
}

func (o *StatementPdfListV1FvEmeaStatus466) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *StatementPdfListV1FvEmeaStatus466) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
