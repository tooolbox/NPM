// Code generated by go-swagger; DO NOT EDIT.

package card_maintenance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// FraudMonitorFlagUpdateV1FvEmeaReader is a Reader for the FraudMonitorFlagUpdateV1FvEmea structure.
type FraudMonitorFlagUpdateV1FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FraudMonitorFlagUpdateV1FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFraudMonitorFlagUpdateV1FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewFraudMonitorFlagUpdateV1FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewFraudMonitorFlagUpdateV1FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFraudMonitorFlagUpdateV1FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFraudMonitorFlagUpdateV1FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewFraudMonitorFlagUpdateV1FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewFraudMonitorFlagUpdateV1FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewFraudMonitorFlagUpdateV1FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewFraudMonitorFlagUpdateV1FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 465:
		result := NewFraudMonitorFlagUpdateV1FvEmeaStatus465()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFraudMonitorFlagUpdateV1FvEmeaOK creates a FraudMonitorFlagUpdateV1FvEmeaOK with default headers values
func NewFraudMonitorFlagUpdateV1FvEmeaOK() *FraudMonitorFlagUpdateV1FvEmeaOK {
	return &FraudMonitorFlagUpdateV1FvEmeaOK{}
}

/*FraudMonitorFlagUpdateV1FvEmeaOK handles this case with default header values.

successful operation
*/
type FraudMonitorFlagUpdateV1FvEmeaOK struct {
	Payload *models.FraudMonitorFlagUpdateResponse
}

func (o *FraudMonitorFlagUpdateV1FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/fraudMonitorFlagUpdate][%d] fraudMonitorFlagUpdateV1FvEmeaOK  %+v", 200, o.Payload)
}

func (o *FraudMonitorFlagUpdateV1FvEmeaOK) GetPayload() *models.FraudMonitorFlagUpdateResponse {
	return o.Payload
}

func (o *FraudMonitorFlagUpdateV1FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FraudMonitorFlagUpdateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFraudMonitorFlagUpdateV1FvEmeaBadRequest creates a FraudMonitorFlagUpdateV1FvEmeaBadRequest with default headers values
func NewFraudMonitorFlagUpdateV1FvEmeaBadRequest() *FraudMonitorFlagUpdateV1FvEmeaBadRequest {
	return &FraudMonitorFlagUpdateV1FvEmeaBadRequest{}
}

/*FraudMonitorFlagUpdateV1FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type FraudMonitorFlagUpdateV1FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *FraudMonitorFlagUpdateV1FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/fraudMonitorFlagUpdate][%d] fraudMonitorFlagUpdateV1FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *FraudMonitorFlagUpdateV1FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *FraudMonitorFlagUpdateV1FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFraudMonitorFlagUpdateV1FvEmeaUnauthorized creates a FraudMonitorFlagUpdateV1FvEmeaUnauthorized with default headers values
func NewFraudMonitorFlagUpdateV1FvEmeaUnauthorized() *FraudMonitorFlagUpdateV1FvEmeaUnauthorized {
	return &FraudMonitorFlagUpdateV1FvEmeaUnauthorized{}
}

/*FraudMonitorFlagUpdateV1FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type FraudMonitorFlagUpdateV1FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *FraudMonitorFlagUpdateV1FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/fraudMonitorFlagUpdate][%d] fraudMonitorFlagUpdateV1FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *FraudMonitorFlagUpdateV1FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *FraudMonitorFlagUpdateV1FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFraudMonitorFlagUpdateV1FvEmeaForbidden creates a FraudMonitorFlagUpdateV1FvEmeaForbidden with default headers values
func NewFraudMonitorFlagUpdateV1FvEmeaForbidden() *FraudMonitorFlagUpdateV1FvEmeaForbidden {
	return &FraudMonitorFlagUpdateV1FvEmeaForbidden{}
}

/*FraudMonitorFlagUpdateV1FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type FraudMonitorFlagUpdateV1FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *FraudMonitorFlagUpdateV1FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/fraudMonitorFlagUpdate][%d] fraudMonitorFlagUpdateV1FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *FraudMonitorFlagUpdateV1FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *FraudMonitorFlagUpdateV1FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFraudMonitorFlagUpdateV1FvEmeaNotFound creates a FraudMonitorFlagUpdateV1FvEmeaNotFound with default headers values
func NewFraudMonitorFlagUpdateV1FvEmeaNotFound() *FraudMonitorFlagUpdateV1FvEmeaNotFound {
	return &FraudMonitorFlagUpdateV1FvEmeaNotFound{}
}

/*FraudMonitorFlagUpdateV1FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type FraudMonitorFlagUpdateV1FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *FraudMonitorFlagUpdateV1FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/fraudMonitorFlagUpdate][%d] fraudMonitorFlagUpdateV1FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *FraudMonitorFlagUpdateV1FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *FraudMonitorFlagUpdateV1FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFraudMonitorFlagUpdateV1FvEmeaTooManyRequests creates a FraudMonitorFlagUpdateV1FvEmeaTooManyRequests with default headers values
func NewFraudMonitorFlagUpdateV1FvEmeaTooManyRequests() *FraudMonitorFlagUpdateV1FvEmeaTooManyRequests {
	return &FraudMonitorFlagUpdateV1FvEmeaTooManyRequests{}
}

/*FraudMonitorFlagUpdateV1FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type FraudMonitorFlagUpdateV1FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *FraudMonitorFlagUpdateV1FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/fraudMonitorFlagUpdate][%d] fraudMonitorFlagUpdateV1FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *FraudMonitorFlagUpdateV1FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *FraudMonitorFlagUpdateV1FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFraudMonitorFlagUpdateV1FvEmeaStatus452 creates a FraudMonitorFlagUpdateV1FvEmeaStatus452 with default headers values
func NewFraudMonitorFlagUpdateV1FvEmeaStatus452() *FraudMonitorFlagUpdateV1FvEmeaStatus452 {
	return &FraudMonitorFlagUpdateV1FvEmeaStatus452{}
}

/*FraudMonitorFlagUpdateV1FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type FraudMonitorFlagUpdateV1FvEmeaStatus452 struct {
}

func (o *FraudMonitorFlagUpdateV1FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/fraudMonitorFlagUpdate][%d] fraudMonitorFlagUpdateV1FvEmeaStatus452 ", 452)
}

func (o *FraudMonitorFlagUpdateV1FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFraudMonitorFlagUpdateV1FvEmeaStatus453 creates a FraudMonitorFlagUpdateV1FvEmeaStatus453 with default headers values
func NewFraudMonitorFlagUpdateV1FvEmeaStatus453() *FraudMonitorFlagUpdateV1FvEmeaStatus453 {
	return &FraudMonitorFlagUpdateV1FvEmeaStatus453{}
}

/*FraudMonitorFlagUpdateV1FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type FraudMonitorFlagUpdateV1FvEmeaStatus453 struct {
}

func (o *FraudMonitorFlagUpdateV1FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/fraudMonitorFlagUpdate][%d] fraudMonitorFlagUpdateV1FvEmeaStatus453 ", 453)
}

func (o *FraudMonitorFlagUpdateV1FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFraudMonitorFlagUpdateV1FvEmeaStatus455 creates a FraudMonitorFlagUpdateV1FvEmeaStatus455 with default headers values
func NewFraudMonitorFlagUpdateV1FvEmeaStatus455() *FraudMonitorFlagUpdateV1FvEmeaStatus455 {
	return &FraudMonitorFlagUpdateV1FvEmeaStatus455{}
}

/*FraudMonitorFlagUpdateV1FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type FraudMonitorFlagUpdateV1FvEmeaStatus455 struct {
}

func (o *FraudMonitorFlagUpdateV1FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/fraudMonitorFlagUpdate][%d] fraudMonitorFlagUpdateV1FvEmeaStatus455 ", 455)
}

func (o *FraudMonitorFlagUpdateV1FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFraudMonitorFlagUpdateV1FvEmeaStatus465 creates a FraudMonitorFlagUpdateV1FvEmeaStatus465 with default headers values
func NewFraudMonitorFlagUpdateV1FvEmeaStatus465() *FraudMonitorFlagUpdateV1FvEmeaStatus465 {
	return &FraudMonitorFlagUpdateV1FvEmeaStatus465{}
}

/*FraudMonitorFlagUpdateV1FvEmeaStatus465 handles this case with default header values.

Backend Response Code and message in odsMessages field: <BR/><BR/>VPE5SFM01 : CARD NUMBER REQUIRED<BR/>VPE5SFM02 : CARD NUMBER NOT FOUND<BR/>VPE5SFM03 : CARD SEQUENCE NUMBER NOT NUMERIC<BR/>VPE5SFM04 : FRAUD MONITOR FLAG MUST BE A VALID VALUE OR SPACES<BR/>VPE5SFM05 : FRAUD MONITOR FLAG IS OF LOWER PRIORITY<BR/>VPE5SFM06 : FRAUD MONITOR EXPIRY DATE IS NOT A VALID DATE<BR/>VPE5SFM07 : FRAUD MONITOR EXPIRY DATE NOT A FUTURE DATE<BR/>VPE5SFM08 : SERVICE REQUEST LENGTH ERROR<BR/>VPE5SFM10 : CMS FILE-TABLE RECORD NOT FOUND<BR/>VPE5SFM11 : ORGANIZATION NOT DETERMINED<BR/>VPE5SFM12 : ORG RECORD NOT ON FILE<BR/>VPE5SFM13 : LOGO RECORD NOT ON FILE<BR/>VPE5SFM14 : EMBOSSER FILE READ ERROR<BR/>VPE5SFM15 : NO SECURITY ACCESS<BR/>VPE5SFM16 : ACCOUNT NUMBER NOT FOUND<BR/>VPE5SFM17 : ACCOUNT FILE READ ERROR<BR/>VPE5SFM18 : USER ACCESS NOT ACTIVE<BR/>VPE5SFM19 : SUPPLEMENTAL SECURITY RECORD NOT FOUND<BR/>VPE5SFM20 : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES<BR/>VPE5SFM21 : FRAUD MONITOR FLAG NOT SET EXP DATE MUST BE
*/
type FraudMonitorFlagUpdateV1FvEmeaStatus465 struct {
	Payload *models.FsErrorDetails
}

func (o *FraudMonitorFlagUpdateV1FvEmeaStatus465) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/fraudMonitorFlagUpdate][%d] fraudMonitorFlagUpdateV1FvEmeaStatus465  %+v", 465, o.Payload)
}

func (o *FraudMonitorFlagUpdateV1FvEmeaStatus465) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *FraudMonitorFlagUpdateV1FvEmeaStatus465) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
