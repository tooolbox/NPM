// Code generated by go-swagger; DO NOT EDIT.

package card_maintenance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// LostStolenUpdateV2FvEmeaReader is a Reader for the LostStolenUpdateV2FvEmea structure.
type LostStolenUpdateV2FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LostStolenUpdateV2FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLostStolenUpdateV2FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLostStolenUpdateV2FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewLostStolenUpdateV2FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewLostStolenUpdateV2FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewLostStolenUpdateV2FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewLostStolenUpdateV2FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewLostStolenUpdateV2FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewLostStolenUpdateV2FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewLostStolenUpdateV2FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 465:
		result := NewLostStolenUpdateV2FvEmeaStatus465()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLostStolenUpdateV2FvEmeaOK creates a LostStolenUpdateV2FvEmeaOK with default headers values
func NewLostStolenUpdateV2FvEmeaOK() *LostStolenUpdateV2FvEmeaOK {
	return &LostStolenUpdateV2FvEmeaOK{}
}

/*LostStolenUpdateV2FvEmeaOK handles this case with default header values.

successful operation
*/
type LostStolenUpdateV2FvEmeaOK struct {
	Payload *models.LostStolenUpdateResponse2
}

func (o *LostStolenUpdateV2FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/lostStolenUpdate][%d] lostStolenUpdateV2FvEmeaOK  %+v", 200, o.Payload)
}

func (o *LostStolenUpdateV2FvEmeaOK) GetPayload() *models.LostStolenUpdateResponse2 {
	return o.Payload
}

func (o *LostStolenUpdateV2FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LostStolenUpdateResponse2)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLostStolenUpdateV2FvEmeaBadRequest creates a LostStolenUpdateV2FvEmeaBadRequest with default headers values
func NewLostStolenUpdateV2FvEmeaBadRequest() *LostStolenUpdateV2FvEmeaBadRequest {
	return &LostStolenUpdateV2FvEmeaBadRequest{}
}

/*LostStolenUpdateV2FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type LostStolenUpdateV2FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *LostStolenUpdateV2FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/lostStolenUpdate][%d] lostStolenUpdateV2FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *LostStolenUpdateV2FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *LostStolenUpdateV2FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLostStolenUpdateV2FvEmeaUnauthorized creates a LostStolenUpdateV2FvEmeaUnauthorized with default headers values
func NewLostStolenUpdateV2FvEmeaUnauthorized() *LostStolenUpdateV2FvEmeaUnauthorized {
	return &LostStolenUpdateV2FvEmeaUnauthorized{}
}

/*LostStolenUpdateV2FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type LostStolenUpdateV2FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *LostStolenUpdateV2FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/lostStolenUpdate][%d] lostStolenUpdateV2FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *LostStolenUpdateV2FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *LostStolenUpdateV2FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLostStolenUpdateV2FvEmeaForbidden creates a LostStolenUpdateV2FvEmeaForbidden with default headers values
func NewLostStolenUpdateV2FvEmeaForbidden() *LostStolenUpdateV2FvEmeaForbidden {
	return &LostStolenUpdateV2FvEmeaForbidden{}
}

/*LostStolenUpdateV2FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type LostStolenUpdateV2FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *LostStolenUpdateV2FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/lostStolenUpdate][%d] lostStolenUpdateV2FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *LostStolenUpdateV2FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *LostStolenUpdateV2FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLostStolenUpdateV2FvEmeaNotFound creates a LostStolenUpdateV2FvEmeaNotFound with default headers values
func NewLostStolenUpdateV2FvEmeaNotFound() *LostStolenUpdateV2FvEmeaNotFound {
	return &LostStolenUpdateV2FvEmeaNotFound{}
}

/*LostStolenUpdateV2FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type LostStolenUpdateV2FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *LostStolenUpdateV2FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/lostStolenUpdate][%d] lostStolenUpdateV2FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *LostStolenUpdateV2FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *LostStolenUpdateV2FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLostStolenUpdateV2FvEmeaTooManyRequests creates a LostStolenUpdateV2FvEmeaTooManyRequests with default headers values
func NewLostStolenUpdateV2FvEmeaTooManyRequests() *LostStolenUpdateV2FvEmeaTooManyRequests {
	return &LostStolenUpdateV2FvEmeaTooManyRequests{}
}

/*LostStolenUpdateV2FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type LostStolenUpdateV2FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *LostStolenUpdateV2FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/lostStolenUpdate][%d] lostStolenUpdateV2FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *LostStolenUpdateV2FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *LostStolenUpdateV2FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLostStolenUpdateV2FvEmeaStatus452 creates a LostStolenUpdateV2FvEmeaStatus452 with default headers values
func NewLostStolenUpdateV2FvEmeaStatus452() *LostStolenUpdateV2FvEmeaStatus452 {
	return &LostStolenUpdateV2FvEmeaStatus452{}
}

/*LostStolenUpdateV2FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type LostStolenUpdateV2FvEmeaStatus452 struct {
}

func (o *LostStolenUpdateV2FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/lostStolenUpdate][%d] lostStolenUpdateV2FvEmeaStatus452 ", 452)
}

func (o *LostStolenUpdateV2FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLostStolenUpdateV2FvEmeaStatus453 creates a LostStolenUpdateV2FvEmeaStatus453 with default headers values
func NewLostStolenUpdateV2FvEmeaStatus453() *LostStolenUpdateV2FvEmeaStatus453 {
	return &LostStolenUpdateV2FvEmeaStatus453{}
}

/*LostStolenUpdateV2FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type LostStolenUpdateV2FvEmeaStatus453 struct {
}

func (o *LostStolenUpdateV2FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/lostStolenUpdate][%d] lostStolenUpdateV2FvEmeaStatus453 ", 453)
}

func (o *LostStolenUpdateV2FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLostStolenUpdateV2FvEmeaStatus455 creates a LostStolenUpdateV2FvEmeaStatus455 with default headers values
func NewLostStolenUpdateV2FvEmeaStatus455() *LostStolenUpdateV2FvEmeaStatus455 {
	return &LostStolenUpdateV2FvEmeaStatus455{}
}

/*LostStolenUpdateV2FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type LostStolenUpdateV2FvEmeaStatus455 struct {
}

func (o *LostStolenUpdateV2FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/lostStolenUpdate][%d] lostStolenUpdateV2FvEmeaStatus455 ", 455)
}

func (o *LostStolenUpdateV2FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLostStolenUpdateV2FvEmeaStatus465 creates a LostStolenUpdateV2FvEmeaStatus465 with default headers values
func NewLostStolenUpdateV2FvEmeaStatus465() *LostStolenUpdateV2FvEmeaStatus465 {
	return &LostStolenUpdateV2FvEmeaStatus465{}
}

/*LostStolenUpdateV2FvEmeaStatus465 handles this case with default header values.

Backend Response Code and message in odsMessages field: <BR/><BR/>VPE5SLS01E : ORGANIZATION NUMBER MUST BE NUMERIC AND VALID VALUES ARE 000-998<BR/>VPE5SLS01S : SERVICE COULD NOT OBTAIN STORAGE AREA<BR/>VPE5SLS02S : SERVICE INPUT TO LOSTorSTOLEN SVC IS AN INCORRECT LENGTH<BR/>VPE5SLS03S : FILE TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPE5SLS04S : FILE TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPE5SLS05E : CARD NUMBER SHOULD BE PROVIDED AND BE NUMERIC<BR/>VPE5SLS06S : ORGANIZATION NOT FOUND<BR/>VPE5SLS07S : REQUESTED ORG NUMBER IS NOT FOUND<BR/>VPE5SLS08S : NOT ABLE TO OBTAIN STORAGE FOR THE ALPHA SEARCH IorP CPY<BR/>VPE5SLS09S : NOT ABLE TO OBTAIN STORAGE FOR THE ALPHA SEARCH OorP CPY<BR/>VPE5SLS11S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES<BR/>VPE5SLS12S : ORGANIZATION FILE UNAVAILABL
*/
type LostStolenUpdateV2FvEmeaStatus465 struct {
	Payload *models.FsErrorDetails
}

func (o *LostStolenUpdateV2FvEmeaStatus465) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v2/lostStolenUpdate][%d] lostStolenUpdateV2FvEmeaStatus465  %+v", 465, o.Payload)
}

func (o *LostStolenUpdateV2FvEmeaStatus465) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *LostStolenUpdateV2FvEmeaStatus465) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
