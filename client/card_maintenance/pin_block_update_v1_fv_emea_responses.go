// Code generated by go-swagger; DO NOT EDIT.

package card_maintenance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// PinBlockUpdateV1FvEmeaReader is a Reader for the PinBlockUpdateV1FvEmea structure.
type PinBlockUpdateV1FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PinBlockUpdateV1FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPinBlockUpdateV1FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPinBlockUpdateV1FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPinBlockUpdateV1FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPinBlockUpdateV1FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPinBlockUpdateV1FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPinBlockUpdateV1FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewPinBlockUpdateV1FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewPinBlockUpdateV1FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewPinBlockUpdateV1FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 465:
		result := NewPinBlockUpdateV1FvEmeaStatus465()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPinBlockUpdateV1FvEmeaOK creates a PinBlockUpdateV1FvEmeaOK with default headers values
func NewPinBlockUpdateV1FvEmeaOK() *PinBlockUpdateV1FvEmeaOK {
	return &PinBlockUpdateV1FvEmeaOK{}
}

/*PinBlockUpdateV1FvEmeaOK handles this case with default header values.

successful operation
*/
type PinBlockUpdateV1FvEmeaOK struct {
	Payload *models.PinBlockUpdateResponse
}

func (o *PinBlockUpdateV1FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/pinBlockUpdate][%d] pinBlockUpdateV1FvEmeaOK  %+v", 200, o.Payload)
}

func (o *PinBlockUpdateV1FvEmeaOK) GetPayload() *models.PinBlockUpdateResponse {
	return o.Payload
}

func (o *PinBlockUpdateV1FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PinBlockUpdateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPinBlockUpdateV1FvEmeaBadRequest creates a PinBlockUpdateV1FvEmeaBadRequest with default headers values
func NewPinBlockUpdateV1FvEmeaBadRequest() *PinBlockUpdateV1FvEmeaBadRequest {
	return &PinBlockUpdateV1FvEmeaBadRequest{}
}

/*PinBlockUpdateV1FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type PinBlockUpdateV1FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *PinBlockUpdateV1FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/pinBlockUpdate][%d] pinBlockUpdateV1FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *PinBlockUpdateV1FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *PinBlockUpdateV1FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPinBlockUpdateV1FvEmeaUnauthorized creates a PinBlockUpdateV1FvEmeaUnauthorized with default headers values
func NewPinBlockUpdateV1FvEmeaUnauthorized() *PinBlockUpdateV1FvEmeaUnauthorized {
	return &PinBlockUpdateV1FvEmeaUnauthorized{}
}

/*PinBlockUpdateV1FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type PinBlockUpdateV1FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *PinBlockUpdateV1FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/pinBlockUpdate][%d] pinBlockUpdateV1FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *PinBlockUpdateV1FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *PinBlockUpdateV1FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPinBlockUpdateV1FvEmeaForbidden creates a PinBlockUpdateV1FvEmeaForbidden with default headers values
func NewPinBlockUpdateV1FvEmeaForbidden() *PinBlockUpdateV1FvEmeaForbidden {
	return &PinBlockUpdateV1FvEmeaForbidden{}
}

/*PinBlockUpdateV1FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type PinBlockUpdateV1FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *PinBlockUpdateV1FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/pinBlockUpdate][%d] pinBlockUpdateV1FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *PinBlockUpdateV1FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *PinBlockUpdateV1FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPinBlockUpdateV1FvEmeaNotFound creates a PinBlockUpdateV1FvEmeaNotFound with default headers values
func NewPinBlockUpdateV1FvEmeaNotFound() *PinBlockUpdateV1FvEmeaNotFound {
	return &PinBlockUpdateV1FvEmeaNotFound{}
}

/*PinBlockUpdateV1FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type PinBlockUpdateV1FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *PinBlockUpdateV1FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/pinBlockUpdate][%d] pinBlockUpdateV1FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *PinBlockUpdateV1FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *PinBlockUpdateV1FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPinBlockUpdateV1FvEmeaTooManyRequests creates a PinBlockUpdateV1FvEmeaTooManyRequests with default headers values
func NewPinBlockUpdateV1FvEmeaTooManyRequests() *PinBlockUpdateV1FvEmeaTooManyRequests {
	return &PinBlockUpdateV1FvEmeaTooManyRequests{}
}

/*PinBlockUpdateV1FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type PinBlockUpdateV1FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *PinBlockUpdateV1FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/pinBlockUpdate][%d] pinBlockUpdateV1FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *PinBlockUpdateV1FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *PinBlockUpdateV1FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPinBlockUpdateV1FvEmeaStatus452 creates a PinBlockUpdateV1FvEmeaStatus452 with default headers values
func NewPinBlockUpdateV1FvEmeaStatus452() *PinBlockUpdateV1FvEmeaStatus452 {
	return &PinBlockUpdateV1FvEmeaStatus452{}
}

/*PinBlockUpdateV1FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type PinBlockUpdateV1FvEmeaStatus452 struct {
}

func (o *PinBlockUpdateV1FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/pinBlockUpdate][%d] pinBlockUpdateV1FvEmeaStatus452 ", 452)
}

func (o *PinBlockUpdateV1FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPinBlockUpdateV1FvEmeaStatus453 creates a PinBlockUpdateV1FvEmeaStatus453 with default headers values
func NewPinBlockUpdateV1FvEmeaStatus453() *PinBlockUpdateV1FvEmeaStatus453 {
	return &PinBlockUpdateV1FvEmeaStatus453{}
}

/*PinBlockUpdateV1FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type PinBlockUpdateV1FvEmeaStatus453 struct {
}

func (o *PinBlockUpdateV1FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/pinBlockUpdate][%d] pinBlockUpdateV1FvEmeaStatus453 ", 453)
}

func (o *PinBlockUpdateV1FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPinBlockUpdateV1FvEmeaStatus455 creates a PinBlockUpdateV1FvEmeaStatus455 with default headers values
func NewPinBlockUpdateV1FvEmeaStatus455() *PinBlockUpdateV1FvEmeaStatus455 {
	return &PinBlockUpdateV1FvEmeaStatus455{}
}

/*PinBlockUpdateV1FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type PinBlockUpdateV1FvEmeaStatus455 struct {
}

func (o *PinBlockUpdateV1FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/pinBlockUpdate][%d] pinBlockUpdateV1FvEmeaStatus455 ", 455)
}

func (o *PinBlockUpdateV1FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPinBlockUpdateV1FvEmeaStatus465 creates a PinBlockUpdateV1FvEmeaStatus465 with default headers values
func NewPinBlockUpdateV1FvEmeaStatus465() *PinBlockUpdateV1FvEmeaStatus465 {
	return &PinBlockUpdateV1FvEmeaStatus465{}
}

/*PinBlockUpdateV1FvEmeaStatus465 handles this case with default header values.

Backend Response Code and message in odsMessages field: <BR/><BR/>VPE5SPUZ1S : SERVICE COULD NOT OBTAIN STORAGE AREA<BR/>VPE5SPUZ2S : SERVICE INPUT TO PIN UPDATE SERVICE IS AN INCORRECT LENGTH<BR/>VPE5SPUZ3S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPE5SPUZ4S : REQUESTED ORGANIZATION COULD NOT BE DETERMINED<BR/>VPE5SPUZ5S : REQUESTED ORGANIZATION NOT FOUND<BR/>VPE5SPUZ6S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPE5SPU02S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES<BR/>VPE5SPU03E : CARD NUMBER MUST BE NUMERIC AND GREATER THAN ZERO.<BR/>VPE5SPU04E : PIN BLOCK MUST BE PROVIDED<BR/>VPE5SPU05E : USER ID MUST BE NUMERIC<BR/>VPE5SPU06E : SUPERVISOR ID MUST BE NUMERIC<BR/>VPE5SPU07E : TERMINAL ID MUST BE NUMERIC<BR/>VPE5SPU08E : PIN SET REVERSAL FLAG CONTAINS INVALID DATA              00010000<BR/>VPE5SPU08S : ORGANIZATION RECORD NOT FOUND<BR/>VPE5SPU09S : CARD NUMBER DOES NOT EXIST<BR/>VPE5SPU10S : LOGO RECORD NOT FOUND ON FILE<BR/>VPE5SPU11S : ERROR IN INPUT DATA FOR POR GENERATION<BR/>VPE5SPU12S : PIN BLOCK DATA ERROR<BR/>VPE5SPU13S : INVALID USER STORAGE INDEX FOR POR GENERATION<BR/>VPE5SPU14S : VW-INVALID CARD NUMBER<BR/>VPE5SPU15S : INVALID PIN BLOCK FORMAT CODE<BR/>VPE5SPU16S : PIN IS FEWER THAN 4 OR MORE THAN 12 DIGITS<BR/>VPE5SPU17S : HSM ERROR DURING VW COMMAND<BR/>VPE5SPU18S : SRMorHSM FATAL ERROR<BR/>VPE5SPU19S : INVALID POR<BR/>VPE5SPU20S : ERROR IN INPUT DATA FOR PIN OFFSET GENERATION<BR/>VPE5SPU21S : HSM ERROR DURING TG COMMAND<BR/>VPE5SPU22S : SRMorHSM FATAL ERROR<BR/>VPE5SPU23S : PIN SET REVERSAL NOT SET ATM PIN IND SET TO 1           00020000<BR/>VPE5SPU24S : PIN SET NOT SET ATM PIN IND NOT SET TO 1                00030000<BR/>VPE5SPU25S : ATM PIN IND AT LOGO LEVEL IS NOT SET TO 1                00031000<BR/>VPE5SPU26S : AMEC RECORD NOT FOUND OR PURGED<BR/>VPE5SPU27S : AMCD RECORD NOT FOUND<BR/>VPE5SPU28S : PIN CHANGE NOT ALLOWED<BR/>VPE5SPU29S : ACCOUNT NUMBER NOT FOUND<BR/>VPE5SPU30E : INVALID CHANNEL INDICATO
*/
type PinBlockUpdateV1FvEmeaStatus465 struct {
	Payload *models.FsErrorDetails
}

func (o *PinBlockUpdateV1FvEmeaStatus465) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/pinBlockUpdate][%d] pinBlockUpdateV1FvEmeaStatus465  %+v", 465, o.Payload)
}

func (o *PinBlockUpdateV1FvEmeaStatus465) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *PinBlockUpdateV1FvEmeaStatus465) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
