// Code generated by go-swagger; DO NOT EDIT.

package card_maintenance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// InstantIssuanceStatusUpdateV1FvEmeaReader is a Reader for the InstantIssuanceStatusUpdateV1FvEmea structure.
type InstantIssuanceStatusUpdateV1FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InstantIssuanceStatusUpdateV1FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInstantIssuanceStatusUpdateV1FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewInstantIssuanceStatusUpdateV1FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewInstantIssuanceStatusUpdateV1FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewInstantIssuanceStatusUpdateV1FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInstantIssuanceStatusUpdateV1FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewInstantIssuanceStatusUpdateV1FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewInstantIssuanceStatusUpdateV1FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewInstantIssuanceStatusUpdateV1FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewInstantIssuanceStatusUpdateV1FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 465:
		result := NewInstantIssuanceStatusUpdateV1FvEmeaStatus465()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewInstantIssuanceStatusUpdateV1FvEmeaOK creates a InstantIssuanceStatusUpdateV1FvEmeaOK with default headers values
func NewInstantIssuanceStatusUpdateV1FvEmeaOK() *InstantIssuanceStatusUpdateV1FvEmeaOK {
	return &InstantIssuanceStatusUpdateV1FvEmeaOK{}
}

/*InstantIssuanceStatusUpdateV1FvEmeaOK handles this case with default header values.

successful operation
*/
type InstantIssuanceStatusUpdateV1FvEmeaOK struct {
	Payload *models.InstantIssuanceStatusUpdateResponse
}

func (o *InstantIssuanceStatusUpdateV1FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/instantIssuanceStatusUpdate][%d] instantIssuanceStatusUpdateV1FvEmeaOK  %+v", 200, o.Payload)
}

func (o *InstantIssuanceStatusUpdateV1FvEmeaOK) GetPayload() *models.InstantIssuanceStatusUpdateResponse {
	return o.Payload
}

func (o *InstantIssuanceStatusUpdateV1FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InstantIssuanceStatusUpdateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInstantIssuanceStatusUpdateV1FvEmeaBadRequest creates a InstantIssuanceStatusUpdateV1FvEmeaBadRequest with default headers values
func NewInstantIssuanceStatusUpdateV1FvEmeaBadRequest() *InstantIssuanceStatusUpdateV1FvEmeaBadRequest {
	return &InstantIssuanceStatusUpdateV1FvEmeaBadRequest{}
}

/*InstantIssuanceStatusUpdateV1FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type InstantIssuanceStatusUpdateV1FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *InstantIssuanceStatusUpdateV1FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/instantIssuanceStatusUpdate][%d] instantIssuanceStatusUpdateV1FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *InstantIssuanceStatusUpdateV1FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *InstantIssuanceStatusUpdateV1FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInstantIssuanceStatusUpdateV1FvEmeaUnauthorized creates a InstantIssuanceStatusUpdateV1FvEmeaUnauthorized with default headers values
func NewInstantIssuanceStatusUpdateV1FvEmeaUnauthorized() *InstantIssuanceStatusUpdateV1FvEmeaUnauthorized {
	return &InstantIssuanceStatusUpdateV1FvEmeaUnauthorized{}
}

/*InstantIssuanceStatusUpdateV1FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type InstantIssuanceStatusUpdateV1FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *InstantIssuanceStatusUpdateV1FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/instantIssuanceStatusUpdate][%d] instantIssuanceStatusUpdateV1FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *InstantIssuanceStatusUpdateV1FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *InstantIssuanceStatusUpdateV1FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInstantIssuanceStatusUpdateV1FvEmeaForbidden creates a InstantIssuanceStatusUpdateV1FvEmeaForbidden with default headers values
func NewInstantIssuanceStatusUpdateV1FvEmeaForbidden() *InstantIssuanceStatusUpdateV1FvEmeaForbidden {
	return &InstantIssuanceStatusUpdateV1FvEmeaForbidden{}
}

/*InstantIssuanceStatusUpdateV1FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type InstantIssuanceStatusUpdateV1FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *InstantIssuanceStatusUpdateV1FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/instantIssuanceStatusUpdate][%d] instantIssuanceStatusUpdateV1FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *InstantIssuanceStatusUpdateV1FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *InstantIssuanceStatusUpdateV1FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInstantIssuanceStatusUpdateV1FvEmeaNotFound creates a InstantIssuanceStatusUpdateV1FvEmeaNotFound with default headers values
func NewInstantIssuanceStatusUpdateV1FvEmeaNotFound() *InstantIssuanceStatusUpdateV1FvEmeaNotFound {
	return &InstantIssuanceStatusUpdateV1FvEmeaNotFound{}
}

/*InstantIssuanceStatusUpdateV1FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type InstantIssuanceStatusUpdateV1FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *InstantIssuanceStatusUpdateV1FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/instantIssuanceStatusUpdate][%d] instantIssuanceStatusUpdateV1FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *InstantIssuanceStatusUpdateV1FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *InstantIssuanceStatusUpdateV1FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInstantIssuanceStatusUpdateV1FvEmeaTooManyRequests creates a InstantIssuanceStatusUpdateV1FvEmeaTooManyRequests with default headers values
func NewInstantIssuanceStatusUpdateV1FvEmeaTooManyRequests() *InstantIssuanceStatusUpdateV1FvEmeaTooManyRequests {
	return &InstantIssuanceStatusUpdateV1FvEmeaTooManyRequests{}
}

/*InstantIssuanceStatusUpdateV1FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type InstantIssuanceStatusUpdateV1FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *InstantIssuanceStatusUpdateV1FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/instantIssuanceStatusUpdate][%d] instantIssuanceStatusUpdateV1FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *InstantIssuanceStatusUpdateV1FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *InstantIssuanceStatusUpdateV1FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInstantIssuanceStatusUpdateV1FvEmeaStatus452 creates a InstantIssuanceStatusUpdateV1FvEmeaStatus452 with default headers values
func NewInstantIssuanceStatusUpdateV1FvEmeaStatus452() *InstantIssuanceStatusUpdateV1FvEmeaStatus452 {
	return &InstantIssuanceStatusUpdateV1FvEmeaStatus452{}
}

/*InstantIssuanceStatusUpdateV1FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type InstantIssuanceStatusUpdateV1FvEmeaStatus452 struct {
}

func (o *InstantIssuanceStatusUpdateV1FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/instantIssuanceStatusUpdate][%d] instantIssuanceStatusUpdateV1FvEmeaStatus452 ", 452)
}

func (o *InstantIssuanceStatusUpdateV1FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInstantIssuanceStatusUpdateV1FvEmeaStatus453 creates a InstantIssuanceStatusUpdateV1FvEmeaStatus453 with default headers values
func NewInstantIssuanceStatusUpdateV1FvEmeaStatus453() *InstantIssuanceStatusUpdateV1FvEmeaStatus453 {
	return &InstantIssuanceStatusUpdateV1FvEmeaStatus453{}
}

/*InstantIssuanceStatusUpdateV1FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type InstantIssuanceStatusUpdateV1FvEmeaStatus453 struct {
}

func (o *InstantIssuanceStatusUpdateV1FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/instantIssuanceStatusUpdate][%d] instantIssuanceStatusUpdateV1FvEmeaStatus453 ", 453)
}

func (o *InstantIssuanceStatusUpdateV1FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInstantIssuanceStatusUpdateV1FvEmeaStatus455 creates a InstantIssuanceStatusUpdateV1FvEmeaStatus455 with default headers values
func NewInstantIssuanceStatusUpdateV1FvEmeaStatus455() *InstantIssuanceStatusUpdateV1FvEmeaStatus455 {
	return &InstantIssuanceStatusUpdateV1FvEmeaStatus455{}
}

/*InstantIssuanceStatusUpdateV1FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type InstantIssuanceStatusUpdateV1FvEmeaStatus455 struct {
}

func (o *InstantIssuanceStatusUpdateV1FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/instantIssuanceStatusUpdate][%d] instantIssuanceStatusUpdateV1FvEmeaStatus455 ", 455)
}

func (o *InstantIssuanceStatusUpdateV1FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInstantIssuanceStatusUpdateV1FvEmeaStatus465 creates a InstantIssuanceStatusUpdateV1FvEmeaStatus465 with default headers values
func NewInstantIssuanceStatusUpdateV1FvEmeaStatus465() *InstantIssuanceStatusUpdateV1FvEmeaStatus465 {
	return &InstantIssuanceStatusUpdateV1FvEmeaStatus465{}
}

/*InstantIssuanceStatusUpdateV1FvEmeaStatus465 handles this case with default header values.

Backend Response Code and message in odsMessages field: <BR/><BR/>VPL5SSEZ1S : SERVICE COULD NOT OBTAIN STORAGE AREA<BR/>VPL5SSEZ2S : INPUT TO INSTANCE ISSUANCE STATUS UPDATE SERVICE IS AN IN        CORRECT LENGTH<BR/>VPL5SSEZ2S : INPUT TO INSTANCE ISSUANCE STATUS UPDATE SERVICE IS AN IN        CORRECT LENGTH<BR/>VPL5SSEZ3S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPL5SSEZ4S : REQUESTED ORGANIZATION NOT FOUND<BR/>VPL5SSEZ5S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPL5SSE02S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINU        TES<BR/>VPL5SSE03E : CUST NBR MUST BE NUMERIC AND GREATER THAN ZEROES<BR/>VPL5SSE04E : VALID VALUES OF STATUS FLAG ARE 3 4 5 6 7 8 AND 9<BR/>VPE5SSE05S : CUSTOMER NUMBER IS NOT NUMERIC OR EQUALS SPACES<BR/>VPE5SSE08S : ORGANIZATION NUMBER NOT DETERMINED<BR/>VPE5SSE09S : ORGANIZATION FILE NOT OPEN<BR/>VPE5SSE10S : REQUESTED ORGANIZATION NUMBER IS NOT FOUND<BR/>VPE5SSE11S : ERROR IN ACCESSING ORGANIZATION FILE<BR/>VPE5SSE12S : NAME AND ADDRESS FILE NOT OPEN<BR/>VPE5SSE13S : REQUESTED CUSTOMER NUMBER IS NOT FOUND<BR/>VPE5SSE14S : ERROR IN ACCESSING NAME AND ADDRESS FILE<BR/>VPE5SSE15S : ERROR IN ACCESSING CUST TO CARD CROSS REFERENCE FILE<BR/>VPE5SSE16E : ERROR IN END BROWSING CUST TO CARD CROSS REFERENCE FILE<BR/>VPE5SSE17E : REQUESTED CARD NUMBER IS NOT FOUND<BR/>VPE5SSE18E : REQUESTED LOGO NUMBER IS NOT FOUND<BR/>VPE5SSE19E : REQUESTED ACCT NUMBER IS NOT FOUND<BR/>VPE5SSE20I : MEMO NOTES NOT UPDATED<BR/>VPE5SSE21I : CARD ACTIVATION FAILED<BR/>VPL5SSE22S : SERVICE COULD NOT OBTAIN STORAGE FOR INSTANT ISSUANCE            INPUT AREA<BR/>VPL5SSE23S : SERVICE COULD NOT OBTAIN STORAGE FOR INSTANT ISSUANCE            OUTPUT ARE
*/
type InstantIssuanceStatusUpdateV1FvEmeaStatus465 struct {
	Payload *models.FsErrorDetails
}

func (o *InstantIssuanceStatusUpdateV1FvEmeaStatus465) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/instantIssuanceStatusUpdate][%d] instantIssuanceStatusUpdateV1FvEmeaStatus465  %+v", 465, o.Payload)
}

func (o *InstantIssuanceStatusUpdateV1FvEmeaStatus465) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *InstantIssuanceStatusUpdateV1FvEmeaStatus465) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
