// Code generated by go-swagger; DO NOT EDIT.

package card_maintenance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// CardBlockCodeUpdateV1FvEmeaReader is a Reader for the CardBlockCodeUpdateV1FvEmea structure.
type CardBlockCodeUpdateV1FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CardBlockCodeUpdateV1FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCardBlockCodeUpdateV1FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCardBlockCodeUpdateV1FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCardBlockCodeUpdateV1FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCardBlockCodeUpdateV1FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCardBlockCodeUpdateV1FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCardBlockCodeUpdateV1FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewCardBlockCodeUpdateV1FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewCardBlockCodeUpdateV1FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewCardBlockCodeUpdateV1FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 465:
		result := NewCardBlockCodeUpdateV1FvEmeaStatus465()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCardBlockCodeUpdateV1FvEmeaOK creates a CardBlockCodeUpdateV1FvEmeaOK with default headers values
func NewCardBlockCodeUpdateV1FvEmeaOK() *CardBlockCodeUpdateV1FvEmeaOK {
	return &CardBlockCodeUpdateV1FvEmeaOK{}
}

/*CardBlockCodeUpdateV1FvEmeaOK handles this case with default header values.

successful operation
*/
type CardBlockCodeUpdateV1FvEmeaOK struct {
	Payload *models.CardBlockCodeUpdateResponse
}

func (o *CardBlockCodeUpdateV1FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/cardBlockCodeUpdate][%d] cardBlockCodeUpdateV1FvEmeaOK  %+v", 200, o.Payload)
}

func (o *CardBlockCodeUpdateV1FvEmeaOK) GetPayload() *models.CardBlockCodeUpdateResponse {
	return o.Payload
}

func (o *CardBlockCodeUpdateV1FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CardBlockCodeUpdateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCardBlockCodeUpdateV1FvEmeaBadRequest creates a CardBlockCodeUpdateV1FvEmeaBadRequest with default headers values
func NewCardBlockCodeUpdateV1FvEmeaBadRequest() *CardBlockCodeUpdateV1FvEmeaBadRequest {
	return &CardBlockCodeUpdateV1FvEmeaBadRequest{}
}

/*CardBlockCodeUpdateV1FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type CardBlockCodeUpdateV1FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *CardBlockCodeUpdateV1FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/cardBlockCodeUpdate][%d] cardBlockCodeUpdateV1FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *CardBlockCodeUpdateV1FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *CardBlockCodeUpdateV1FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCardBlockCodeUpdateV1FvEmeaUnauthorized creates a CardBlockCodeUpdateV1FvEmeaUnauthorized with default headers values
func NewCardBlockCodeUpdateV1FvEmeaUnauthorized() *CardBlockCodeUpdateV1FvEmeaUnauthorized {
	return &CardBlockCodeUpdateV1FvEmeaUnauthorized{}
}

/*CardBlockCodeUpdateV1FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type CardBlockCodeUpdateV1FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *CardBlockCodeUpdateV1FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/cardBlockCodeUpdate][%d] cardBlockCodeUpdateV1FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *CardBlockCodeUpdateV1FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *CardBlockCodeUpdateV1FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCardBlockCodeUpdateV1FvEmeaForbidden creates a CardBlockCodeUpdateV1FvEmeaForbidden with default headers values
func NewCardBlockCodeUpdateV1FvEmeaForbidden() *CardBlockCodeUpdateV1FvEmeaForbidden {
	return &CardBlockCodeUpdateV1FvEmeaForbidden{}
}

/*CardBlockCodeUpdateV1FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type CardBlockCodeUpdateV1FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *CardBlockCodeUpdateV1FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/cardBlockCodeUpdate][%d] cardBlockCodeUpdateV1FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *CardBlockCodeUpdateV1FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *CardBlockCodeUpdateV1FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCardBlockCodeUpdateV1FvEmeaNotFound creates a CardBlockCodeUpdateV1FvEmeaNotFound with default headers values
func NewCardBlockCodeUpdateV1FvEmeaNotFound() *CardBlockCodeUpdateV1FvEmeaNotFound {
	return &CardBlockCodeUpdateV1FvEmeaNotFound{}
}

/*CardBlockCodeUpdateV1FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type CardBlockCodeUpdateV1FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *CardBlockCodeUpdateV1FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/cardBlockCodeUpdate][%d] cardBlockCodeUpdateV1FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *CardBlockCodeUpdateV1FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *CardBlockCodeUpdateV1FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCardBlockCodeUpdateV1FvEmeaTooManyRequests creates a CardBlockCodeUpdateV1FvEmeaTooManyRequests with default headers values
func NewCardBlockCodeUpdateV1FvEmeaTooManyRequests() *CardBlockCodeUpdateV1FvEmeaTooManyRequests {
	return &CardBlockCodeUpdateV1FvEmeaTooManyRequests{}
}

/*CardBlockCodeUpdateV1FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type CardBlockCodeUpdateV1FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *CardBlockCodeUpdateV1FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/cardBlockCodeUpdate][%d] cardBlockCodeUpdateV1FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *CardBlockCodeUpdateV1FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *CardBlockCodeUpdateV1FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCardBlockCodeUpdateV1FvEmeaStatus452 creates a CardBlockCodeUpdateV1FvEmeaStatus452 with default headers values
func NewCardBlockCodeUpdateV1FvEmeaStatus452() *CardBlockCodeUpdateV1FvEmeaStatus452 {
	return &CardBlockCodeUpdateV1FvEmeaStatus452{}
}

/*CardBlockCodeUpdateV1FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type CardBlockCodeUpdateV1FvEmeaStatus452 struct {
}

func (o *CardBlockCodeUpdateV1FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/cardBlockCodeUpdate][%d] cardBlockCodeUpdateV1FvEmeaStatus452 ", 452)
}

func (o *CardBlockCodeUpdateV1FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCardBlockCodeUpdateV1FvEmeaStatus453 creates a CardBlockCodeUpdateV1FvEmeaStatus453 with default headers values
func NewCardBlockCodeUpdateV1FvEmeaStatus453() *CardBlockCodeUpdateV1FvEmeaStatus453 {
	return &CardBlockCodeUpdateV1FvEmeaStatus453{}
}

/*CardBlockCodeUpdateV1FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type CardBlockCodeUpdateV1FvEmeaStatus453 struct {
}

func (o *CardBlockCodeUpdateV1FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/cardBlockCodeUpdate][%d] cardBlockCodeUpdateV1FvEmeaStatus453 ", 453)
}

func (o *CardBlockCodeUpdateV1FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCardBlockCodeUpdateV1FvEmeaStatus455 creates a CardBlockCodeUpdateV1FvEmeaStatus455 with default headers values
func NewCardBlockCodeUpdateV1FvEmeaStatus455() *CardBlockCodeUpdateV1FvEmeaStatus455 {
	return &CardBlockCodeUpdateV1FvEmeaStatus455{}
}

/*CardBlockCodeUpdateV1FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type CardBlockCodeUpdateV1FvEmeaStatus455 struct {
}

func (o *CardBlockCodeUpdateV1FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/cardBlockCodeUpdate][%d] cardBlockCodeUpdateV1FvEmeaStatus455 ", 455)
}

func (o *CardBlockCodeUpdateV1FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCardBlockCodeUpdateV1FvEmeaStatus465 creates a CardBlockCodeUpdateV1FvEmeaStatus465 with default headers values
func NewCardBlockCodeUpdateV1FvEmeaStatus465() *CardBlockCodeUpdateV1FvEmeaStatus465 {
	return &CardBlockCodeUpdateV1FvEmeaStatus465{}
}

/*CardBlockCodeUpdateV1FvEmeaStatus465 handles this case with default header values.

Backend Response Code and message in odsMessages field: <BR/><BR/>VPL1S0100S : SERVICE REQUEST LENGTH ERROR                                     SERVICE INPUT FOR SERVICE IS AN INCORRECT LENGTH<BR/>VPL5S0003S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES     CMS IS NO-PROCESSING STATE<BR/>VPL5S0006S : REQUESTED ORG NUMBER IS NOT FOUND                                USER IS NOT ALLOWED TO ACCESS THE ORG<BR/>VPL5S0007E : CARDorACCT NUMBER IS NOT NUMERIC                                  INPUT CARDorACCT NUMBER IS NOT NUMERIC<BR/>VPL5S0008E : ORGANIZATION NOT DETERMINED<BR/>VPL5S0012S : ACCOUNT NOT FOUND ON FILE<BR/>VPL5S0016S : EMBOSSER RECORD NOT FOUND ON FILE<BR/>VPL5S0029S : ORG NUMBER MUST BE NUMERIC AND VALID VALUES ARE 001-998          ORG IS NOT NUMERIC<BR/>VPL5S0054S : PRIORITY CANT BE LOWER THAN OLD BLKCD<BR/>VPL5S0055S : PLEASE ENTER THE RECORD NUMBER                                   PLEASE ENTER THE RECORD NUMBER<BR/>VPL5S0104S : REASON CODE NOT NUMERIC<BR/>VPL5S0105S : ENTER ACCT NUMBER OR CARD NUMBER.                                BOTH CANNOT BE ENTERED IN THE SAME REQUEST.<BR/>VPL5S9002S : ERROR ACCESSING ACCOUNT FILE<BR/>VPL5S9004S : ERROR ACCESSING STATEMENT FILE<BR/>VPL5S9005S : FILE-TABLE RECORD NOT FOUND<BR/>VPL5S9007S : CMS LOGO RECORD NOT ON FILE<BR/>VPL5S9009S : EMBOSSER FILE READ ERRO
*/
type CardBlockCodeUpdateV1FvEmeaStatus465 struct {
	Payload *models.FsErrorDetails
}

func (o *CardBlockCodeUpdateV1FvEmeaStatus465) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/cardBlockCodeUpdate][%d] cardBlockCodeUpdateV1FvEmeaStatus465  %+v", 465, o.Payload)
}

func (o *CardBlockCodeUpdateV1FvEmeaStatus465) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *CardBlockCodeUpdateV1FvEmeaStatus465) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
