// Code generated by go-swagger; DO NOT EDIT.

package customer_records

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// CustomerPhoneUpdateV1FvEmeaReader is a Reader for the CustomerPhoneUpdateV1FvEmea structure.
type CustomerPhoneUpdateV1FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CustomerPhoneUpdateV1FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCustomerPhoneUpdateV1FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCustomerPhoneUpdateV1FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCustomerPhoneUpdateV1FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCustomerPhoneUpdateV1FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCustomerPhoneUpdateV1FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCustomerPhoneUpdateV1FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewCustomerPhoneUpdateV1FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewCustomerPhoneUpdateV1FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewCustomerPhoneUpdateV1FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 465:
		result := NewCustomerPhoneUpdateV1FvEmeaStatus465()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCustomerPhoneUpdateV1FvEmeaOK creates a CustomerPhoneUpdateV1FvEmeaOK with default headers values
func NewCustomerPhoneUpdateV1FvEmeaOK() *CustomerPhoneUpdateV1FvEmeaOK {
	return &CustomerPhoneUpdateV1FvEmeaOK{}
}

/*CustomerPhoneUpdateV1FvEmeaOK handles this case with default header values.

successful operation
*/
type CustomerPhoneUpdateV1FvEmeaOK struct {
	Payload *models.CustomerPhoneUpdateResponse
}

func (o *CustomerPhoneUpdateV1FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/customerPhoneUpdate][%d] customerPhoneUpdateV1FvEmeaOK  %+v", 200, o.Payload)
}

func (o *CustomerPhoneUpdateV1FvEmeaOK) GetPayload() *models.CustomerPhoneUpdateResponse {
	return o.Payload
}

func (o *CustomerPhoneUpdateV1FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CustomerPhoneUpdateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerPhoneUpdateV1FvEmeaBadRequest creates a CustomerPhoneUpdateV1FvEmeaBadRequest with default headers values
func NewCustomerPhoneUpdateV1FvEmeaBadRequest() *CustomerPhoneUpdateV1FvEmeaBadRequest {
	return &CustomerPhoneUpdateV1FvEmeaBadRequest{}
}

/*CustomerPhoneUpdateV1FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type CustomerPhoneUpdateV1FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *CustomerPhoneUpdateV1FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/customerPhoneUpdate][%d] customerPhoneUpdateV1FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *CustomerPhoneUpdateV1FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *CustomerPhoneUpdateV1FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerPhoneUpdateV1FvEmeaUnauthorized creates a CustomerPhoneUpdateV1FvEmeaUnauthorized with default headers values
func NewCustomerPhoneUpdateV1FvEmeaUnauthorized() *CustomerPhoneUpdateV1FvEmeaUnauthorized {
	return &CustomerPhoneUpdateV1FvEmeaUnauthorized{}
}

/*CustomerPhoneUpdateV1FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type CustomerPhoneUpdateV1FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *CustomerPhoneUpdateV1FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/customerPhoneUpdate][%d] customerPhoneUpdateV1FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *CustomerPhoneUpdateV1FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *CustomerPhoneUpdateV1FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerPhoneUpdateV1FvEmeaForbidden creates a CustomerPhoneUpdateV1FvEmeaForbidden with default headers values
func NewCustomerPhoneUpdateV1FvEmeaForbidden() *CustomerPhoneUpdateV1FvEmeaForbidden {
	return &CustomerPhoneUpdateV1FvEmeaForbidden{}
}

/*CustomerPhoneUpdateV1FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type CustomerPhoneUpdateV1FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *CustomerPhoneUpdateV1FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/customerPhoneUpdate][%d] customerPhoneUpdateV1FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *CustomerPhoneUpdateV1FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *CustomerPhoneUpdateV1FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerPhoneUpdateV1FvEmeaNotFound creates a CustomerPhoneUpdateV1FvEmeaNotFound with default headers values
func NewCustomerPhoneUpdateV1FvEmeaNotFound() *CustomerPhoneUpdateV1FvEmeaNotFound {
	return &CustomerPhoneUpdateV1FvEmeaNotFound{}
}

/*CustomerPhoneUpdateV1FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type CustomerPhoneUpdateV1FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *CustomerPhoneUpdateV1FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/customerPhoneUpdate][%d] customerPhoneUpdateV1FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *CustomerPhoneUpdateV1FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *CustomerPhoneUpdateV1FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerPhoneUpdateV1FvEmeaTooManyRequests creates a CustomerPhoneUpdateV1FvEmeaTooManyRequests with default headers values
func NewCustomerPhoneUpdateV1FvEmeaTooManyRequests() *CustomerPhoneUpdateV1FvEmeaTooManyRequests {
	return &CustomerPhoneUpdateV1FvEmeaTooManyRequests{}
}

/*CustomerPhoneUpdateV1FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type CustomerPhoneUpdateV1FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *CustomerPhoneUpdateV1FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/customerPhoneUpdate][%d] customerPhoneUpdateV1FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *CustomerPhoneUpdateV1FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *CustomerPhoneUpdateV1FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerPhoneUpdateV1FvEmeaStatus452 creates a CustomerPhoneUpdateV1FvEmeaStatus452 with default headers values
func NewCustomerPhoneUpdateV1FvEmeaStatus452() *CustomerPhoneUpdateV1FvEmeaStatus452 {
	return &CustomerPhoneUpdateV1FvEmeaStatus452{}
}

/*CustomerPhoneUpdateV1FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type CustomerPhoneUpdateV1FvEmeaStatus452 struct {
}

func (o *CustomerPhoneUpdateV1FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/customerPhoneUpdate][%d] customerPhoneUpdateV1FvEmeaStatus452 ", 452)
}

func (o *CustomerPhoneUpdateV1FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCustomerPhoneUpdateV1FvEmeaStatus453 creates a CustomerPhoneUpdateV1FvEmeaStatus453 with default headers values
func NewCustomerPhoneUpdateV1FvEmeaStatus453() *CustomerPhoneUpdateV1FvEmeaStatus453 {
	return &CustomerPhoneUpdateV1FvEmeaStatus453{}
}

/*CustomerPhoneUpdateV1FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type CustomerPhoneUpdateV1FvEmeaStatus453 struct {
}

func (o *CustomerPhoneUpdateV1FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/customerPhoneUpdate][%d] customerPhoneUpdateV1FvEmeaStatus453 ", 453)
}

func (o *CustomerPhoneUpdateV1FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCustomerPhoneUpdateV1FvEmeaStatus455 creates a CustomerPhoneUpdateV1FvEmeaStatus455 with default headers values
func NewCustomerPhoneUpdateV1FvEmeaStatus455() *CustomerPhoneUpdateV1FvEmeaStatus455 {
	return &CustomerPhoneUpdateV1FvEmeaStatus455{}
}

/*CustomerPhoneUpdateV1FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type CustomerPhoneUpdateV1FvEmeaStatus455 struct {
}

func (o *CustomerPhoneUpdateV1FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/customerPhoneUpdate][%d] customerPhoneUpdateV1FvEmeaStatus455 ", 455)
}

func (o *CustomerPhoneUpdateV1FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCustomerPhoneUpdateV1FvEmeaStatus465 creates a CustomerPhoneUpdateV1FvEmeaStatus465 with default headers values
func NewCustomerPhoneUpdateV1FvEmeaStatus465() *CustomerPhoneUpdateV1FvEmeaStatus465 {
	return &CustomerPhoneUpdateV1FvEmeaStatus465{}
}

/*CustomerPhoneUpdateV1FvEmeaStatus465 handles this case with default header values.

Backend Response Code and message in odsMessages field: <BR/><BR/>VPL5SPN01S : SERVICE COULD NOT OBTAIN STORAGE AREA<BR/>VPL5SPN02S : SERVICE INPUT TO PIN VALIDATE SERVICE IS AN INCORRECT LENGTH<BR/>VPL5SPN04S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPL5SPN05S : ORGANIZATION VALUE MUST BE NUMERIC. VALID VALUES ARE 000-998<BR/>VPL5SPN06S : CUSTOMER ACCOUNT OR CARD NUMBER REQUIRED<BR/>VPL5SPN07S : ORGorLOGO COULD NOT BE DETERMINED FOR THE ACCOUNT<BR/>VPL5SPN08S : SECURITY IS INVALID FOR ORGANIZATION<BR/>VPL5SPN09S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPL5SPN10S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES<BR/>VPL5SPN11S : ORGANIZATION FILE NOT OPEN<BR/>VPL5SPN12S : ORGANIZATION RECORD NOT FOUND<BR/>VPL5SPN13S : DUAL ORGANIZATION RECORD NOT FOUND<BR/>VPL5SPN14S : ACCOUNT FILE NOT OPEN<BR/>VPL5SPN15S : ACCOUNT NOT FOUND OR IN ADD PENDING CLOSED OR PURGED STATUS<BR/>VPL5SPN16S : ACCOUNT DEMOGRAPHIC FILE NOT OPEN<BR/>VPL5SPN17S : ACCOUNT DEMOGRAPHIC RECORD NOT FOUND<BR/>VPL5SPN18S : OWNER INDICATOR EQUALS CO-OWNER BUT NO CO-OWNER EXISTS<BR/>VPL5SPN01E : VALID VALUES FOR NUMBER TYPE ARE SPACE 0 OR 1<BR/>VPL5SPN02E : ORG SHOULD BE GREATER THAN 0 FOR NUMBER TYPE 1 CUST NBR<BR/>VPL5SPN03E : VALID VALUES FOR FOREIGN USE INDICATOR ARE SPACE 0 OR 1<BR/>VPL5SPN04E : VALID VALUES FOR OWNER INDICATOR ARE SPACE 0 OR 1<BR/>VPL5SPN05E : VALID VALUES FOR CONTACT TYPE ARE 1 2 3 OR
*/
type CustomerPhoneUpdateV1FvEmeaStatus465 struct {
	Payload *models.FsErrorDetails
}

func (o *CustomerPhoneUpdateV1FvEmeaStatus465) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/customerPhoneUpdate][%d] customerPhoneUpdateV1FvEmeaStatus465  %+v", 465, o.Payload)
}

func (o *CustomerPhoneUpdateV1FvEmeaStatus465) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *CustomerPhoneUpdateV1FvEmeaStatus465) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
