// Code generated by go-swagger; DO NOT EDIT.

package account_maintenance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// MarketingPreferencesUpdateV1FvEmeaReader is a Reader for the MarketingPreferencesUpdateV1FvEmea structure.
type MarketingPreferencesUpdateV1FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MarketingPreferencesUpdateV1FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewMarketingPreferencesUpdateV1FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewMarketingPreferencesUpdateV1FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewMarketingPreferencesUpdateV1FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewMarketingPreferencesUpdateV1FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewMarketingPreferencesUpdateV1FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewMarketingPreferencesUpdateV1FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewMarketingPreferencesUpdateV1FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewMarketingPreferencesUpdateV1FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewMarketingPreferencesUpdateV1FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 465:
		result := NewMarketingPreferencesUpdateV1FvEmeaStatus465()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewMarketingPreferencesUpdateV1FvEmeaOK creates a MarketingPreferencesUpdateV1FvEmeaOK with default headers values
func NewMarketingPreferencesUpdateV1FvEmeaOK() *MarketingPreferencesUpdateV1FvEmeaOK {
	return &MarketingPreferencesUpdateV1FvEmeaOK{}
}

/*MarketingPreferencesUpdateV1FvEmeaOK handles this case with default header values.

successful operation
*/
type MarketingPreferencesUpdateV1FvEmeaOK struct {
	Payload *models.MarketingPreferencesUpdateResponse
}

func (o *MarketingPreferencesUpdateV1FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/marketingPreferencesUpdate][%d] marketingPreferencesUpdateV1FvEmeaOK  %+v", 200, o.Payload)
}

func (o *MarketingPreferencesUpdateV1FvEmeaOK) GetPayload() *models.MarketingPreferencesUpdateResponse {
	return o.Payload
}

func (o *MarketingPreferencesUpdateV1FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MarketingPreferencesUpdateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMarketingPreferencesUpdateV1FvEmeaBadRequest creates a MarketingPreferencesUpdateV1FvEmeaBadRequest with default headers values
func NewMarketingPreferencesUpdateV1FvEmeaBadRequest() *MarketingPreferencesUpdateV1FvEmeaBadRequest {
	return &MarketingPreferencesUpdateV1FvEmeaBadRequest{}
}

/*MarketingPreferencesUpdateV1FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type MarketingPreferencesUpdateV1FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *MarketingPreferencesUpdateV1FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/marketingPreferencesUpdate][%d] marketingPreferencesUpdateV1FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *MarketingPreferencesUpdateV1FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *MarketingPreferencesUpdateV1FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMarketingPreferencesUpdateV1FvEmeaUnauthorized creates a MarketingPreferencesUpdateV1FvEmeaUnauthorized with default headers values
func NewMarketingPreferencesUpdateV1FvEmeaUnauthorized() *MarketingPreferencesUpdateV1FvEmeaUnauthorized {
	return &MarketingPreferencesUpdateV1FvEmeaUnauthorized{}
}

/*MarketingPreferencesUpdateV1FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type MarketingPreferencesUpdateV1FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *MarketingPreferencesUpdateV1FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/marketingPreferencesUpdate][%d] marketingPreferencesUpdateV1FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *MarketingPreferencesUpdateV1FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *MarketingPreferencesUpdateV1FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMarketingPreferencesUpdateV1FvEmeaForbidden creates a MarketingPreferencesUpdateV1FvEmeaForbidden with default headers values
func NewMarketingPreferencesUpdateV1FvEmeaForbidden() *MarketingPreferencesUpdateV1FvEmeaForbidden {
	return &MarketingPreferencesUpdateV1FvEmeaForbidden{}
}

/*MarketingPreferencesUpdateV1FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type MarketingPreferencesUpdateV1FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *MarketingPreferencesUpdateV1FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/marketingPreferencesUpdate][%d] marketingPreferencesUpdateV1FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *MarketingPreferencesUpdateV1FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *MarketingPreferencesUpdateV1FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMarketingPreferencesUpdateV1FvEmeaNotFound creates a MarketingPreferencesUpdateV1FvEmeaNotFound with default headers values
func NewMarketingPreferencesUpdateV1FvEmeaNotFound() *MarketingPreferencesUpdateV1FvEmeaNotFound {
	return &MarketingPreferencesUpdateV1FvEmeaNotFound{}
}

/*MarketingPreferencesUpdateV1FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type MarketingPreferencesUpdateV1FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *MarketingPreferencesUpdateV1FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/marketingPreferencesUpdate][%d] marketingPreferencesUpdateV1FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *MarketingPreferencesUpdateV1FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *MarketingPreferencesUpdateV1FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMarketingPreferencesUpdateV1FvEmeaTooManyRequests creates a MarketingPreferencesUpdateV1FvEmeaTooManyRequests with default headers values
func NewMarketingPreferencesUpdateV1FvEmeaTooManyRequests() *MarketingPreferencesUpdateV1FvEmeaTooManyRequests {
	return &MarketingPreferencesUpdateV1FvEmeaTooManyRequests{}
}

/*MarketingPreferencesUpdateV1FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type MarketingPreferencesUpdateV1FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *MarketingPreferencesUpdateV1FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/marketingPreferencesUpdate][%d] marketingPreferencesUpdateV1FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *MarketingPreferencesUpdateV1FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *MarketingPreferencesUpdateV1FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMarketingPreferencesUpdateV1FvEmeaStatus452 creates a MarketingPreferencesUpdateV1FvEmeaStatus452 with default headers values
func NewMarketingPreferencesUpdateV1FvEmeaStatus452() *MarketingPreferencesUpdateV1FvEmeaStatus452 {
	return &MarketingPreferencesUpdateV1FvEmeaStatus452{}
}

/*MarketingPreferencesUpdateV1FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type MarketingPreferencesUpdateV1FvEmeaStatus452 struct {
}

func (o *MarketingPreferencesUpdateV1FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/marketingPreferencesUpdate][%d] marketingPreferencesUpdateV1FvEmeaStatus452 ", 452)
}

func (o *MarketingPreferencesUpdateV1FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewMarketingPreferencesUpdateV1FvEmeaStatus453 creates a MarketingPreferencesUpdateV1FvEmeaStatus453 with default headers values
func NewMarketingPreferencesUpdateV1FvEmeaStatus453() *MarketingPreferencesUpdateV1FvEmeaStatus453 {
	return &MarketingPreferencesUpdateV1FvEmeaStatus453{}
}

/*MarketingPreferencesUpdateV1FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type MarketingPreferencesUpdateV1FvEmeaStatus453 struct {
}

func (o *MarketingPreferencesUpdateV1FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/marketingPreferencesUpdate][%d] marketingPreferencesUpdateV1FvEmeaStatus453 ", 453)
}

func (o *MarketingPreferencesUpdateV1FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewMarketingPreferencesUpdateV1FvEmeaStatus455 creates a MarketingPreferencesUpdateV1FvEmeaStatus455 with default headers values
func NewMarketingPreferencesUpdateV1FvEmeaStatus455() *MarketingPreferencesUpdateV1FvEmeaStatus455 {
	return &MarketingPreferencesUpdateV1FvEmeaStatus455{}
}

/*MarketingPreferencesUpdateV1FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type MarketingPreferencesUpdateV1FvEmeaStatus455 struct {
}

func (o *MarketingPreferencesUpdateV1FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/marketingPreferencesUpdate][%d] marketingPreferencesUpdateV1FvEmeaStatus455 ", 455)
}

func (o *MarketingPreferencesUpdateV1FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewMarketingPreferencesUpdateV1FvEmeaStatus465 creates a MarketingPreferencesUpdateV1FvEmeaStatus465 with default headers values
func NewMarketingPreferencesUpdateV1FvEmeaStatus465() *MarketingPreferencesUpdateV1FvEmeaStatus465 {
	return &MarketingPreferencesUpdateV1FvEmeaStatus465{}
}

/*MarketingPreferencesUpdateV1FvEmeaStatus465 handles this case with default header values.

Backend Response Code and message in odsMessages field: <BR/><BR/>VPE5SMPZ1S : SERVICE COULD NOT OBTAIN STORAGE AREA<BR/>VPE5SMPZ2S : SERVICE INPUT TO MorP SERVICE IS AN INCORRECT LENGTH<BR/>VPE5SMPZ3S : FILE-TABLE USED BY THIS SERVICE IS MISSING<BR/>VPE5SMPZ4S : ORGANIZATION NUMBER NOT DETERMINED<BR/>VPE5SMPZ5S : USER IS NOT ALLOWED TO ACCESS THE ORG<BR/>VPE5SMPZ6S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPE5SMP01E : ORG NOT VALID<BR/>VPE5SMP01I : CO-MAKER RECORD DOES NOT EXIST<BR/>VPE5SMP02S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES<BR/>VPE5SMP03S : INVALID CUST NUMBER<BR/>VPE5SMP04S : INVALID ACTION INDICATOR<BR/>VPE5SMP09S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES<BR/>VPE5SMP10S : CMS SYSTEM RECORD NOT ON FILE<BR/>VPE5SMP11S : CMS ORG RECORD NOT ON FILE<BR/>VPE5SMP12S : TO ADD OR UPDATE FILE THE ORG LEVEL INDICATOR SHOULD BE ACTIVE<BR/>VPE5SMP13S : AMNA FILE NOT IN OPEN STATUS<BR/>VPE5SMP14S : AMNA REC NOT FOUND<BR/>VPE5SMP15S : NOT A VALID RETURN-CODE FOR AMNA READ<BR/>VPE5SMP22S : CUSTOMER MARKETING CHANNELorPRODUCT FILE NOT OPEN<BR/>VPE5SMP23S : ADD-PENDING CLOSED PURGED FOR ZMMW FILE<BR/>VPE5SMP24S : CANNOT BE ADDED AS RECORD IS ALREADY PRESENT IN MKTNG FILE<BR/>VPE5SMP25S : ZMMW REC NOT FOUND<BR/>VPE5SMP26S : ERROR IN REWRITING CUSTOMER MARKETING CHANNELorPRODUCT FIL
*/
type MarketingPreferencesUpdateV1FvEmeaStatus465 struct {
	Payload *models.FsErrorDetails
}

func (o *MarketingPreferencesUpdateV1FvEmeaStatus465) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/marketingPreferencesUpdate][%d] marketingPreferencesUpdateV1FvEmeaStatus465  %+v", 465, o.Payload)
}

func (o *MarketingPreferencesUpdateV1FvEmeaStatus465) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *MarketingPreferencesUpdateV1FvEmeaStatus465) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
