// Code generated by go-swagger; DO NOT EDIT.

package account_maintenance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// CollectionsMaintenanceV1FvEmeaReader is a Reader for the CollectionsMaintenanceV1FvEmea structure.
type CollectionsMaintenanceV1FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CollectionsMaintenanceV1FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCollectionsMaintenanceV1FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCollectionsMaintenanceV1FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCollectionsMaintenanceV1FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCollectionsMaintenanceV1FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCollectionsMaintenanceV1FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCollectionsMaintenanceV1FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewCollectionsMaintenanceV1FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewCollectionsMaintenanceV1FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewCollectionsMaintenanceV1FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 465:
		result := NewCollectionsMaintenanceV1FvEmeaStatus465()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCollectionsMaintenanceV1FvEmeaOK creates a CollectionsMaintenanceV1FvEmeaOK with default headers values
func NewCollectionsMaintenanceV1FvEmeaOK() *CollectionsMaintenanceV1FvEmeaOK {
	return &CollectionsMaintenanceV1FvEmeaOK{}
}

/*CollectionsMaintenanceV1FvEmeaOK handles this case with default header values.

successful operation
*/
type CollectionsMaintenanceV1FvEmeaOK struct {
	Payload *models.CollectionsMaintenanceResponse
}

func (o *CollectionsMaintenanceV1FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/collectionsMaintenance][%d] collectionsMaintenanceV1FvEmeaOK  %+v", 200, o.Payload)
}

func (o *CollectionsMaintenanceV1FvEmeaOK) GetPayload() *models.CollectionsMaintenanceResponse {
	return o.Payload
}

func (o *CollectionsMaintenanceV1FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CollectionsMaintenanceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCollectionsMaintenanceV1FvEmeaBadRequest creates a CollectionsMaintenanceV1FvEmeaBadRequest with default headers values
func NewCollectionsMaintenanceV1FvEmeaBadRequest() *CollectionsMaintenanceV1FvEmeaBadRequest {
	return &CollectionsMaintenanceV1FvEmeaBadRequest{}
}

/*CollectionsMaintenanceV1FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type CollectionsMaintenanceV1FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *CollectionsMaintenanceV1FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/collectionsMaintenance][%d] collectionsMaintenanceV1FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *CollectionsMaintenanceV1FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *CollectionsMaintenanceV1FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCollectionsMaintenanceV1FvEmeaUnauthorized creates a CollectionsMaintenanceV1FvEmeaUnauthorized with default headers values
func NewCollectionsMaintenanceV1FvEmeaUnauthorized() *CollectionsMaintenanceV1FvEmeaUnauthorized {
	return &CollectionsMaintenanceV1FvEmeaUnauthorized{}
}

/*CollectionsMaintenanceV1FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type CollectionsMaintenanceV1FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *CollectionsMaintenanceV1FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/collectionsMaintenance][%d] collectionsMaintenanceV1FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *CollectionsMaintenanceV1FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *CollectionsMaintenanceV1FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCollectionsMaintenanceV1FvEmeaForbidden creates a CollectionsMaintenanceV1FvEmeaForbidden with default headers values
func NewCollectionsMaintenanceV1FvEmeaForbidden() *CollectionsMaintenanceV1FvEmeaForbidden {
	return &CollectionsMaintenanceV1FvEmeaForbidden{}
}

/*CollectionsMaintenanceV1FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type CollectionsMaintenanceV1FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *CollectionsMaintenanceV1FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/collectionsMaintenance][%d] collectionsMaintenanceV1FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *CollectionsMaintenanceV1FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *CollectionsMaintenanceV1FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCollectionsMaintenanceV1FvEmeaNotFound creates a CollectionsMaintenanceV1FvEmeaNotFound with default headers values
func NewCollectionsMaintenanceV1FvEmeaNotFound() *CollectionsMaintenanceV1FvEmeaNotFound {
	return &CollectionsMaintenanceV1FvEmeaNotFound{}
}

/*CollectionsMaintenanceV1FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type CollectionsMaintenanceV1FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *CollectionsMaintenanceV1FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/collectionsMaintenance][%d] collectionsMaintenanceV1FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *CollectionsMaintenanceV1FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *CollectionsMaintenanceV1FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCollectionsMaintenanceV1FvEmeaTooManyRequests creates a CollectionsMaintenanceV1FvEmeaTooManyRequests with default headers values
func NewCollectionsMaintenanceV1FvEmeaTooManyRequests() *CollectionsMaintenanceV1FvEmeaTooManyRequests {
	return &CollectionsMaintenanceV1FvEmeaTooManyRequests{}
}

/*CollectionsMaintenanceV1FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type CollectionsMaintenanceV1FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *CollectionsMaintenanceV1FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/collectionsMaintenance][%d] collectionsMaintenanceV1FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *CollectionsMaintenanceV1FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *CollectionsMaintenanceV1FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCollectionsMaintenanceV1FvEmeaStatus452 creates a CollectionsMaintenanceV1FvEmeaStatus452 with default headers values
func NewCollectionsMaintenanceV1FvEmeaStatus452() *CollectionsMaintenanceV1FvEmeaStatus452 {
	return &CollectionsMaintenanceV1FvEmeaStatus452{}
}

/*CollectionsMaintenanceV1FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type CollectionsMaintenanceV1FvEmeaStatus452 struct {
}

func (o *CollectionsMaintenanceV1FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/collectionsMaintenance][%d] collectionsMaintenanceV1FvEmeaStatus452 ", 452)
}

func (o *CollectionsMaintenanceV1FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCollectionsMaintenanceV1FvEmeaStatus453 creates a CollectionsMaintenanceV1FvEmeaStatus453 with default headers values
func NewCollectionsMaintenanceV1FvEmeaStatus453() *CollectionsMaintenanceV1FvEmeaStatus453 {
	return &CollectionsMaintenanceV1FvEmeaStatus453{}
}

/*CollectionsMaintenanceV1FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type CollectionsMaintenanceV1FvEmeaStatus453 struct {
}

func (o *CollectionsMaintenanceV1FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/collectionsMaintenance][%d] collectionsMaintenanceV1FvEmeaStatus453 ", 453)
}

func (o *CollectionsMaintenanceV1FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCollectionsMaintenanceV1FvEmeaStatus455 creates a CollectionsMaintenanceV1FvEmeaStatus455 with default headers values
func NewCollectionsMaintenanceV1FvEmeaStatus455() *CollectionsMaintenanceV1FvEmeaStatus455 {
	return &CollectionsMaintenanceV1FvEmeaStatus455{}
}

/*CollectionsMaintenanceV1FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type CollectionsMaintenanceV1FvEmeaStatus455 struct {
}

func (o *CollectionsMaintenanceV1FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/collectionsMaintenance][%d] collectionsMaintenanceV1FvEmeaStatus455 ", 455)
}

func (o *CollectionsMaintenanceV1FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCollectionsMaintenanceV1FvEmeaStatus465 creates a CollectionsMaintenanceV1FvEmeaStatus465 with default headers values
func NewCollectionsMaintenanceV1FvEmeaStatus465() *CollectionsMaintenanceV1FvEmeaStatus465 {
	return &CollectionsMaintenanceV1FvEmeaStatus465{}
}

/*CollectionsMaintenanceV1FvEmeaStatus465 handles this case with default header values.

Backend Response Code and message in odsMessages field: <BR/><BR/>VPE5SZMZ1S : SERVICE COULD NOT OBTAIN STORAGE AREA<BR/>VPE5SZMZ2S : INPUT TO COLLECTIONS INQorADDorUPDATE SERVICE IS AN INCORRECT      LENGTH<BR/>VPE5SZMZ2S : INPUT TO COLLECTIONS INQorADDorUPDATE SERVICE IS AN INCORRECT      LENGTH<BR/>VPE5SMEZ3S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPE5SME02S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES<BR/>VPE5SZMZ4S : REQUESTED ORGANIZATION COULD NOT BE DETERMINED<BR/>VPE5SZMZ5S : REQUESTED ORGANIZATION NOT FOUND<BR/>VPE5SZMZ6S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPE5SZM03S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES<BR/>VPE5SZM07S : SYSTEM RECORD NOT FOUND<BR/>VPE5SZM08S : ORGANIZATION RECORD NOT FOUND<BR/>VPE5SZM09S : ACCOUNT NUMBER DOES NOT EXIST OR INVALID ACCOUNT STATUS<BR/>VPE5SZM10S : NAME AND ADDRESS FILE NOT OPEN<BR/>VPE5SZM11S : CUSTOMER NBR DOES NOT EXIST OR INVALID ACCOUNT STATUS<BR/>VPE5SZM12S : ERROR IN ACCESSING NAME AND ADDRESS FILE<BR/>VPE5SZM13S : ZMCM FILE NOT OPEN<BR/>VPE5SZM14S : ZMCM RECORD NOT FOUND<BR/>VPE5SZM15S : RECORD ALREADY PRESENT IN ZMCM FILE<BR/>VPE5SZM32S : LOGO RECORD NOT FOUND OR ADD PENDING<BR/>VPE5SZM04E : INVALID ORG<BR/>VPE5SZM05S : ACCOUNT NUMBER NOT NUMERIC OR ZEROS<BR/>VPE5SZM06S : FUNCTION IND INVALID<BR/>VPE5SZM16E : CPM LETTER IND INVALID<BR/>VPE5SZM17E : CPM DIAL IND INVALID<BR/>VPE5SZM18E : CPM SMS IND INVALID<BR/>VPE5SZM19E : CPM EMAIL IND INVALID<BR/>VPE5SZM20E : CPM SECURED MAIL PREF INVALID<BR/>VPE5SZM21E : CPM UNSECURED MAIL PREF INVALID<BR/>VPE5SZM22E : PRIMARY DEFAULT FLAG INVALID<BR/>VPE5SZM23E : DAS IND INVALID<BR/>VPE5SZM24E : DFLT NTC DATE NOT NUMERIC<BR/>VPE5SZM25E : FINAL DEMAND NOTC DATE NOT NUMERIC<BR/>VPE5SZM26E : DATE LAST 192 ATTEMP NOT NUMERIC<BR/>VPE5SZM27E : DATE LAST PARTY CONT NOT NUMERIC<BR/>VPE5SZM28E : DAYS IN COLLECTION NOT NUMERIC<BR/>VPE5SZM29E : PROMISE TO PAY AMNT NOT NUMERIC<BR/>VPE5SZM30E : PMT ARRANGE FUNC CODE INVALID<BR/>VPE5SZM31E : PMT ARRANGE DATE NOT NUMERIC<BR/>VPE5SZM32E : CURRENT FUNCTION STATE NOT NUMERIC<BR/>VPE5SZM33E : SPCL HANDLING IND INVALID<BR/>VPE5SZM34E : EMPLOYEE STATUS IS NOT NUMERIC<BR/>VPE5SZM35E : SPCL ADDRESS INDICATOR IS NOT NUMERI
*/
type CollectionsMaintenanceV1FvEmeaStatus465 struct {
	Payload *models.FsErrorDetails
}

func (o *CollectionsMaintenanceV1FvEmeaStatus465) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/collectionsMaintenance][%d] collectionsMaintenanceV1FvEmeaStatus465  %+v", 465, o.Payload)
}

func (o *CollectionsMaintenanceV1FvEmeaStatus465) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *CollectionsMaintenanceV1FvEmeaStatus465) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
