// Code generated by go-swagger; DO NOT EDIT.

package account_maintenance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// AccountCloseV1FvEmeaReader is a Reader for the AccountCloseV1FvEmea structure.
type AccountCloseV1FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AccountCloseV1FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAccountCloseV1FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAccountCloseV1FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAccountCloseV1FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAccountCloseV1FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAccountCloseV1FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewAccountCloseV1FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewAccountCloseV1FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewAccountCloseV1FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewAccountCloseV1FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 465:
		result := NewAccountCloseV1FvEmeaStatus465()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAccountCloseV1FvEmeaOK creates a AccountCloseV1FvEmeaOK with default headers values
func NewAccountCloseV1FvEmeaOK() *AccountCloseV1FvEmeaOK {
	return &AccountCloseV1FvEmeaOK{}
}

/*AccountCloseV1FvEmeaOK handles this case with default header values.

successful operation
*/
type AccountCloseV1FvEmeaOK struct {
	Payload *models.AccountCloseResponse
}

func (o *AccountCloseV1FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountClose][%d] accountCloseV1FvEmeaOK  %+v", 200, o.Payload)
}

func (o *AccountCloseV1FvEmeaOK) GetPayload() *models.AccountCloseResponse {
	return o.Payload
}

func (o *AccountCloseV1FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccountCloseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountCloseV1FvEmeaBadRequest creates a AccountCloseV1FvEmeaBadRequest with default headers values
func NewAccountCloseV1FvEmeaBadRequest() *AccountCloseV1FvEmeaBadRequest {
	return &AccountCloseV1FvEmeaBadRequest{}
}

/*AccountCloseV1FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type AccountCloseV1FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *AccountCloseV1FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountClose][%d] accountCloseV1FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *AccountCloseV1FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AccountCloseV1FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountCloseV1FvEmeaUnauthorized creates a AccountCloseV1FvEmeaUnauthorized with default headers values
func NewAccountCloseV1FvEmeaUnauthorized() *AccountCloseV1FvEmeaUnauthorized {
	return &AccountCloseV1FvEmeaUnauthorized{}
}

/*AccountCloseV1FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type AccountCloseV1FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *AccountCloseV1FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountClose][%d] accountCloseV1FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *AccountCloseV1FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AccountCloseV1FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountCloseV1FvEmeaForbidden creates a AccountCloseV1FvEmeaForbidden with default headers values
func NewAccountCloseV1FvEmeaForbidden() *AccountCloseV1FvEmeaForbidden {
	return &AccountCloseV1FvEmeaForbidden{}
}

/*AccountCloseV1FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type AccountCloseV1FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *AccountCloseV1FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountClose][%d] accountCloseV1FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *AccountCloseV1FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AccountCloseV1FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountCloseV1FvEmeaNotFound creates a AccountCloseV1FvEmeaNotFound with default headers values
func NewAccountCloseV1FvEmeaNotFound() *AccountCloseV1FvEmeaNotFound {
	return &AccountCloseV1FvEmeaNotFound{}
}

/*AccountCloseV1FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type AccountCloseV1FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *AccountCloseV1FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountClose][%d] accountCloseV1FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *AccountCloseV1FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AccountCloseV1FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountCloseV1FvEmeaTooManyRequests creates a AccountCloseV1FvEmeaTooManyRequests with default headers values
func NewAccountCloseV1FvEmeaTooManyRequests() *AccountCloseV1FvEmeaTooManyRequests {
	return &AccountCloseV1FvEmeaTooManyRequests{}
}

/*AccountCloseV1FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type AccountCloseV1FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *AccountCloseV1FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountClose][%d] accountCloseV1FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *AccountCloseV1FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AccountCloseV1FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountCloseV1FvEmeaStatus452 creates a AccountCloseV1FvEmeaStatus452 with default headers values
func NewAccountCloseV1FvEmeaStatus452() *AccountCloseV1FvEmeaStatus452 {
	return &AccountCloseV1FvEmeaStatus452{}
}

/*AccountCloseV1FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type AccountCloseV1FvEmeaStatus452 struct {
}

func (o *AccountCloseV1FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountClose][%d] accountCloseV1FvEmeaStatus452 ", 452)
}

func (o *AccountCloseV1FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAccountCloseV1FvEmeaStatus453 creates a AccountCloseV1FvEmeaStatus453 with default headers values
func NewAccountCloseV1FvEmeaStatus453() *AccountCloseV1FvEmeaStatus453 {
	return &AccountCloseV1FvEmeaStatus453{}
}

/*AccountCloseV1FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type AccountCloseV1FvEmeaStatus453 struct {
}

func (o *AccountCloseV1FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountClose][%d] accountCloseV1FvEmeaStatus453 ", 453)
}

func (o *AccountCloseV1FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAccountCloseV1FvEmeaStatus455 creates a AccountCloseV1FvEmeaStatus455 with default headers values
func NewAccountCloseV1FvEmeaStatus455() *AccountCloseV1FvEmeaStatus455 {
	return &AccountCloseV1FvEmeaStatus455{}
}

/*AccountCloseV1FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type AccountCloseV1FvEmeaStatus455 struct {
}

func (o *AccountCloseV1FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountClose][%d] accountCloseV1FvEmeaStatus455 ", 455)
}

func (o *AccountCloseV1FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAccountCloseV1FvEmeaStatus465 creates a AccountCloseV1FvEmeaStatus465 with default headers values
func NewAccountCloseV1FvEmeaStatus465() *AccountCloseV1FvEmeaStatus465 {
	return &AccountCloseV1FvEmeaStatus465{}
}

/*AccountCloseV1FvEmeaStatus465 handles this case with default header values.

Backend Response Code and message in odsMessages field: <BR/><BR/>VPL5SCC01S : ACCOUNT OR CARD NUMBER IS REQUIRED<BR/>VPL5SCC02S : ORGANIZATION NOT DETERMINED<BR/>VPL5SCC03S : REQUESTED ORG NUMBER IS NOT FOUND<BR/>VPL5SCC04S : ORGANIZATION NUMBER NOT FOUND ON FILE<BR/>VPL5SCC05S : FOREIGN ORG RECORD NOT FOUND ON FILE<BR/>VPL5SCC06S : LOGO NUMBER NOT FOUND ON FILE<BR/>VPL5SCC10S : INVALID INTERNAL STATUS 8<BR/>VPL5SCC11S : STATUS CANNOT CHANGE TO CLOSED WHEN INSURANCE IS ACTIVE<BR/>VPL5SCC12S : CANNOT MANUAL CHGOFF AN ACCT WITH A ZERO OR CREDIT BALANCE<BR/>VPL5SCC13S : CANNOT RESET CHARGEOFF ON ACCOUNT WHEN DAYS IS > 0<BR/>VPL5SCC14S : CANNOT MANUAL CHARGE OFF THIS ACCT<BR/>VPL5SCC15S : CANNOT CHARGEOFF WITH RSN AN ACCT WITH 0 BAL OR CREDIT BAL<BR/>VPL5SCC16S : VALID ENTRIES FOR RSN CODE POSITION 1 ARE C B F OR T<BR/>VPL5SCC17S : ENTERED AUTO CorO RSN CODE - PLS CHG TO MANUAL RSN<BR/>VPL5SCC18S : RSN CODE MUST BE DEFINED ON ARML24<BR/>VPL5SCC19S : CANNOT CHARGEOFF WITH RSN ACCT CorO STAT MUST = 0<BR/>VPL5SCC21E : ORGANIZATION NUMBER MUST BE NUMERIC AND VALID VALUES ARE 000-998<BR/>VPL5SCC22E : FOREIGN USE MUST = SPACES 0LOCAL OR 1FOREIGN<BR/>VPL5SCC23E : REASON CODE IS REQUIRED FOR FUNC 2 - CHGOFF WITH RSN<BR/>VPL5SCC24E : VALID FUNC INDICATOR IS 0-ACCT CLS 1-MANUAL CHGOFF 2-CHGOFF RSN<BR/>VPL5SCCZ1S : SERVICE COULD NOT OBTAIN STORAGE AREA<BR/>VPL5SCCZ2S : SERVICE INPUT TO ACCT CLOSEorCHGOFF SVC IS AN INCORRECT LENGTH<BR/>VPL5SCCZ4S : FILE TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPL5SCCZ5S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES<BR/>VPL5SCCZ7S : ORGANIZATION FILE UNAVAILABLE<BR/>VPL5SCCZ9S : ACCOUNT FILE UNAVAILABLE<BR/>VPL5SCCZAS : ACCOUNT NOT FOUND<BR/>VPL5SCCZBS : LOGO FILE UNAVAILABLE<BR/>VPL5SCC08I : ACCOUNT STATUSorCHARGE OFF DATA UNCHANGED UPDATE BYPASSED<BR/>VPL5S9900S : RESOURCE IS UNAVAILABLE - CONTACT YOUR ADMINISTRATO
*/
type AccountCloseV1FvEmeaStatus465 struct {
	Payload *models.FsErrorDetails
}

func (o *AccountCloseV1FvEmeaStatus465) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountClose][%d] accountCloseV1FvEmeaStatus465  %+v", 465, o.Payload)
}

func (o *AccountCloseV1FvEmeaStatus465) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AccountCloseV1FvEmeaStatus465) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
