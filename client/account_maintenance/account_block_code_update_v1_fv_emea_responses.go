// Code generated by go-swagger; DO NOT EDIT.

package account_maintenance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// AccountBlockCodeUpdateV1FvEmeaReader is a Reader for the AccountBlockCodeUpdateV1FvEmea structure.
type AccountBlockCodeUpdateV1FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AccountBlockCodeUpdateV1FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAccountBlockCodeUpdateV1FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAccountBlockCodeUpdateV1FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAccountBlockCodeUpdateV1FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAccountBlockCodeUpdateV1FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAccountBlockCodeUpdateV1FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewAccountBlockCodeUpdateV1FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewAccountBlockCodeUpdateV1FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewAccountBlockCodeUpdateV1FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewAccountBlockCodeUpdateV1FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 465:
		result := NewAccountBlockCodeUpdateV1FvEmeaStatus465()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAccountBlockCodeUpdateV1FvEmeaOK creates a AccountBlockCodeUpdateV1FvEmeaOK with default headers values
func NewAccountBlockCodeUpdateV1FvEmeaOK() *AccountBlockCodeUpdateV1FvEmeaOK {
	return &AccountBlockCodeUpdateV1FvEmeaOK{}
}

/*AccountBlockCodeUpdateV1FvEmeaOK handles this case with default header values.

successful operation
*/
type AccountBlockCodeUpdateV1FvEmeaOK struct {
	Payload *models.AccountBlockCodeUpdateResponse
}

func (o *AccountBlockCodeUpdateV1FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountBlockCodeUpdate][%d] accountBlockCodeUpdateV1FvEmeaOK  %+v", 200, o.Payload)
}

func (o *AccountBlockCodeUpdateV1FvEmeaOK) GetPayload() *models.AccountBlockCodeUpdateResponse {
	return o.Payload
}

func (o *AccountBlockCodeUpdateV1FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccountBlockCodeUpdateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountBlockCodeUpdateV1FvEmeaBadRequest creates a AccountBlockCodeUpdateV1FvEmeaBadRequest with default headers values
func NewAccountBlockCodeUpdateV1FvEmeaBadRequest() *AccountBlockCodeUpdateV1FvEmeaBadRequest {
	return &AccountBlockCodeUpdateV1FvEmeaBadRequest{}
}

/*AccountBlockCodeUpdateV1FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type AccountBlockCodeUpdateV1FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *AccountBlockCodeUpdateV1FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountBlockCodeUpdate][%d] accountBlockCodeUpdateV1FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *AccountBlockCodeUpdateV1FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AccountBlockCodeUpdateV1FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountBlockCodeUpdateV1FvEmeaUnauthorized creates a AccountBlockCodeUpdateV1FvEmeaUnauthorized with default headers values
func NewAccountBlockCodeUpdateV1FvEmeaUnauthorized() *AccountBlockCodeUpdateV1FvEmeaUnauthorized {
	return &AccountBlockCodeUpdateV1FvEmeaUnauthorized{}
}

/*AccountBlockCodeUpdateV1FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type AccountBlockCodeUpdateV1FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *AccountBlockCodeUpdateV1FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountBlockCodeUpdate][%d] accountBlockCodeUpdateV1FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *AccountBlockCodeUpdateV1FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AccountBlockCodeUpdateV1FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountBlockCodeUpdateV1FvEmeaForbidden creates a AccountBlockCodeUpdateV1FvEmeaForbidden with default headers values
func NewAccountBlockCodeUpdateV1FvEmeaForbidden() *AccountBlockCodeUpdateV1FvEmeaForbidden {
	return &AccountBlockCodeUpdateV1FvEmeaForbidden{}
}

/*AccountBlockCodeUpdateV1FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type AccountBlockCodeUpdateV1FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *AccountBlockCodeUpdateV1FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountBlockCodeUpdate][%d] accountBlockCodeUpdateV1FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *AccountBlockCodeUpdateV1FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AccountBlockCodeUpdateV1FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountBlockCodeUpdateV1FvEmeaNotFound creates a AccountBlockCodeUpdateV1FvEmeaNotFound with default headers values
func NewAccountBlockCodeUpdateV1FvEmeaNotFound() *AccountBlockCodeUpdateV1FvEmeaNotFound {
	return &AccountBlockCodeUpdateV1FvEmeaNotFound{}
}

/*AccountBlockCodeUpdateV1FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type AccountBlockCodeUpdateV1FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *AccountBlockCodeUpdateV1FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountBlockCodeUpdate][%d] accountBlockCodeUpdateV1FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *AccountBlockCodeUpdateV1FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AccountBlockCodeUpdateV1FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountBlockCodeUpdateV1FvEmeaTooManyRequests creates a AccountBlockCodeUpdateV1FvEmeaTooManyRequests with default headers values
func NewAccountBlockCodeUpdateV1FvEmeaTooManyRequests() *AccountBlockCodeUpdateV1FvEmeaTooManyRequests {
	return &AccountBlockCodeUpdateV1FvEmeaTooManyRequests{}
}

/*AccountBlockCodeUpdateV1FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type AccountBlockCodeUpdateV1FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *AccountBlockCodeUpdateV1FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountBlockCodeUpdate][%d] accountBlockCodeUpdateV1FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *AccountBlockCodeUpdateV1FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AccountBlockCodeUpdateV1FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountBlockCodeUpdateV1FvEmeaStatus452 creates a AccountBlockCodeUpdateV1FvEmeaStatus452 with default headers values
func NewAccountBlockCodeUpdateV1FvEmeaStatus452() *AccountBlockCodeUpdateV1FvEmeaStatus452 {
	return &AccountBlockCodeUpdateV1FvEmeaStatus452{}
}

/*AccountBlockCodeUpdateV1FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type AccountBlockCodeUpdateV1FvEmeaStatus452 struct {
}

func (o *AccountBlockCodeUpdateV1FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountBlockCodeUpdate][%d] accountBlockCodeUpdateV1FvEmeaStatus452 ", 452)
}

func (o *AccountBlockCodeUpdateV1FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAccountBlockCodeUpdateV1FvEmeaStatus453 creates a AccountBlockCodeUpdateV1FvEmeaStatus453 with default headers values
func NewAccountBlockCodeUpdateV1FvEmeaStatus453() *AccountBlockCodeUpdateV1FvEmeaStatus453 {
	return &AccountBlockCodeUpdateV1FvEmeaStatus453{}
}

/*AccountBlockCodeUpdateV1FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type AccountBlockCodeUpdateV1FvEmeaStatus453 struct {
}

func (o *AccountBlockCodeUpdateV1FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountBlockCodeUpdate][%d] accountBlockCodeUpdateV1FvEmeaStatus453 ", 453)
}

func (o *AccountBlockCodeUpdateV1FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAccountBlockCodeUpdateV1FvEmeaStatus455 creates a AccountBlockCodeUpdateV1FvEmeaStatus455 with default headers values
func NewAccountBlockCodeUpdateV1FvEmeaStatus455() *AccountBlockCodeUpdateV1FvEmeaStatus455 {
	return &AccountBlockCodeUpdateV1FvEmeaStatus455{}
}

/*AccountBlockCodeUpdateV1FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type AccountBlockCodeUpdateV1FvEmeaStatus455 struct {
}

func (o *AccountBlockCodeUpdateV1FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountBlockCodeUpdate][%d] accountBlockCodeUpdateV1FvEmeaStatus455 ", 455)
}

func (o *AccountBlockCodeUpdateV1FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAccountBlockCodeUpdateV1FvEmeaStatus465 creates a AccountBlockCodeUpdateV1FvEmeaStatus465 with default headers values
func NewAccountBlockCodeUpdateV1FvEmeaStatus465() *AccountBlockCodeUpdateV1FvEmeaStatus465 {
	return &AccountBlockCodeUpdateV1FvEmeaStatus465{}
}

/*AccountBlockCodeUpdateV1FvEmeaStatus465 handles this case with default header values.

Backend Response Code and message in odsMessages field: <BR/><BR/>VPL5SAB01S : SERVICE COULD NOT OBTAIN STORAGE AREA<BR/>VPL5SAB02S : SERVICE INPUT TO AB SERVICE IS AN INCORRECT LENGTH<BR/>VPL5SAB04S : FILE-TABLE USED BY THIS SERVICE IS MISSING<BR/>VPL5SAB05S : CANNOT SET A BLOCK CODE ON A BILLING ACCOUNT<BR/>VPL5SAB06S : ACCOUNT NUMBER OR CARD NUMBER MUST BE PROVIDED<BR/>VPL5SAB07S : ORGANIZATION NUMBER MUST BE NUMERIC AND VALID VALUES ARE 001-998<BR/>VPL5SAB08S : ORGANIZATION NOT DETERMINED<BR/>VPL5SAB09S : SYSTEM RECORD NOT FOUND<BR/>VPL5SAB10S : ORGANIZATION NUMBER NOT FOUND<BR/>VPL5SAB11S : LOGO NUMBER NOT FOUND<BR/>VPL5SAB12S : CARD NUMBER NOT FOUND<BR/>VPL5SAB13S : BLOCK CODE CANNOT BE REPLACED WITH ONE OF A LOWER PRIORITY<BR/>VPL5SAB21E : INVALID FOREIGN USE IND SPECIFIED - VALID VALUES ARE 0-2<BR/>VPL5SAB22E : INVALID FUNCTION CODE - VALID VALUES ARE B OR U<BR/>VPL5SAB23E : INVALID BLOCK CODE<BR/>VPL5SAB24E : BLOCK CODE MUST EQUAL SPACE TO UNBLOCK ACCOUNT<BR/>VPL5SAB25E : MUST SPECIFY ACCOUNT BLOCK CODE 1 OR 2 TO UNBLOCK ACCOUNT<BR/>VPL5SAB26E : BLOCK CODE INDICATOR MUST BE NUMERIC AND EQUAL 0 1 OR 2<BR/>VPL5SAB27S : CMS IS NO-PROCESSING STATE. RE-TRY REQUEST IN A FEW MINUTES<BR/>VPL5SAB28S : DEFAULT PROMO PLAN NUMBER IS NOT NUMERIC<BR/>VPL5SAB29S : DEFAULT PROMO PLAN SHOULD BE ZEROS FOR PREPAID ACCOUNTS<BR/>VPL5SAB32S : ALT CUST ADDRESS START DATE NOT NUMERIC<BR/>VPL5SAB33E : INVALID ON DEM DC IBAN - MOD97 VALIDATION FAILED<BR/>VPL5SAB34E : INVALID DD IBAN - MOD97 VALIDATION CHECK FAILED<BR/>VPL5SAB35S : CORRESPONDING CUSTOMER NUMBER NOT FOUND<BR/>VPL5SAB40S : RELATIONSHIP MASTER FILE IS NOT OPEN<BR/>VPL5SAB41S : RELATIONSHIP RECORD NOT FOUND ON MASTER FILE<BR/>VPL5SAB42E : VALID VALUES FOR ACCOUNT RESTUCTURE ARE 'Y' OR 'N'<BR/>VPL5SAB42S : RELATIONSHIP BLOCK CODE HAS HIGHER PRIORITY THAN NEW BLOCK COD
*/
type AccountBlockCodeUpdateV1FvEmeaStatus465 struct {
	Payload *models.FsErrorDetails
}

func (o *AccountBlockCodeUpdateV1FvEmeaStatus465) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountBlockCodeUpdate][%d] accountBlockCodeUpdateV1FvEmeaStatus465  %+v", 465, o.Payload)
}

func (o *AccountBlockCodeUpdateV1FvEmeaStatus465) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AccountBlockCodeUpdateV1FvEmeaStatus465) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
