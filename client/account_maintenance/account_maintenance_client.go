// Code generated by go-swagger; DO NOT EDIT.

package account_maintenance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new account maintenance API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for account maintenance API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	AccountAddV1FvEmea(params *AccountAddV1FvEmeaParams) (*AccountAddV1FvEmeaOK, error)

	AccountBlockCodeUpdateV1FvEmea(params *AccountBlockCodeUpdateV1FvEmeaParams) (*AccountBlockCodeUpdateV1FvEmeaOK, error)

	AccountCloseV1FvEmea(params *AccountCloseV1FvEmeaParams) (*AccountCloseV1FvEmeaOK, error)

	AccountCustomFieldsUpdateV1FvEmea(params *AccountCustomFieldsUpdateV1FvEmeaParams) (*AccountCustomFieldsUpdateV1FvEmeaOK, error)

	AccountDisabilityIndicatorUpdateV1FvEmea(params *AccountDisabilityIndicatorUpdateV1FvEmeaParams) (*AccountDisabilityIndicatorUpdateV1FvEmeaOK, error)

	AccountUserFieldsUpdateV1FvEmea(params *AccountUserFieldsUpdateV1FvEmeaParams) (*AccountUserFieldsUpdateV1FvEmeaOK, error)

	AccountUserFieldsUpdateV2FvEmea(params *AccountUserFieldsUpdateV2FvEmeaParams) (*AccountUserFieldsUpdateV2FvEmeaOK, error)

	BillingCycleUpdateV1FvEmea(params *BillingCycleUpdateV1FvEmeaParams) (*BillingCycleUpdateV1FvEmeaOK, error)

	CollectionsMaintenanceV1FvEmea(params *CollectionsMaintenanceV1FvEmeaParams) (*CollectionsMaintenanceV1FvEmeaOK, error)

	CustomerAccountCardAddV1FvEmea(params *CustomerAccountCardAddV1FvEmeaParams) (*CustomerAccountCardAddV1FvEmeaOK, error)

	CustomerAccountEmbosserAddV1FvEmea(params *CustomerAccountEmbosserAddV1FvEmeaParams) (*CustomerAccountEmbosserAddV1FvEmeaOK, error)

	DelinquencyAdjustmentUpdateV1FvEmea(params *DelinquencyAdjustmentUpdateV1FvEmeaParams) (*DelinquencyAdjustmentUpdateV1FvEmeaOK, error)

	DirectCreditUpdateV1FvEmea(params *DirectCreditUpdateV1FvEmeaParams) (*DirectCreditUpdateV1FvEmeaOK, error)

	DirectDebitUpdateV1FvEmea(params *DirectDebitUpdateV1FvEmeaParams) (*DirectDebitUpdateV1FvEmeaOK, error)

	DirectDebitUpdateV2FvEmea(params *DirectDebitUpdateV2FvEmeaParams) (*DirectDebitUpdateV2FvEmeaOK, error)

	MarketingPreferencesUpdateV1FvEmea(params *MarketingPreferencesUpdateV1FvEmeaParams) (*MarketingPreferencesUpdateV1FvEmeaOK, error)

	NonMonetaryActionUpdateV1FvEmea(params *NonMonetaryActionUpdateV1FvEmeaParams) (*NonMonetaryActionUpdateV1FvEmeaOK, error)

	OptInCreditLimitUpdatesV1FvEmea(params *OptInCreditLimitUpdatesV1FvEmeaParams) (*OptInCreditLimitUpdatesV1FvEmeaOK, error)

	PricingControlUpdateV1FvEmea(params *PricingControlUpdateV1FvEmeaParams) (*PricingControlUpdateV1FvEmeaOK, error)

	RelationshipAddV1FvEmea(params *RelationshipAddV1FvEmeaParams) (*RelationshipAddV1FvEmeaOK, error)

	RelationshipNumberUpdateV1FvEmea(params *RelationshipNumberUpdateV1FvEmeaParams) (*RelationshipNumberUpdateV1FvEmeaOK, error)

	ReturnedMailUpdateV1FvEmea(params *ReturnedMailUpdateV1FvEmeaParams) (*ReturnedMailUpdateV1FvEmeaOK, error)

	StatementHoldUpdateV1FvEmea(params *StatementHoldUpdateV1FvEmeaParams) (*StatementHoldUpdateV1FvEmeaOK, error)

	StatementOptionsUpdateV1FvEmea(params *StatementOptionsUpdateV1FvEmeaParams) (*StatementOptionsUpdateV1FvEmeaOK, error)

	TravelItineraryUpdateV1FvEmea(params *TravelItineraryUpdateV1FvEmeaParams) (*TravelItineraryUpdateV1FvEmeaOK, error)

	WaiveFeesandInterestUpdateV1FvEmea(params *WaiveFeesandInterestUpdateV1FvEmeaParams) (*WaiveFeesandInterestUpdateV1FvEmeaOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  AccountAddV1FvEmea accounts add

  This service is used to add an account.  The input request will contain selected fields found on the Account Base Segment record.  The service will edit all input data, and populate the Account Base Master file AMBS. If the account number field is not provided on the input message, the number generation service will generate the account number and pass the number back to the Add Account Record service. The service will support the creation of only one Account record per service request.  However, two records with the same number will be created in the local and foreign organizations if the account belongs to a dual currency organization and logo.
*/
func (a *Client) AccountAddV1FvEmea(params *AccountAddV1FvEmeaParams) (*AccountAddV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAccountAddV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "accountAdd_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/accountAdd",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AccountAddV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AccountAddV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for accountAdd_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AccountBlockCodeUpdateV1FvEmea accounts block code update

  This service is used to update the Account Block Code.<p>This service can be called with an account number. When either Block Code 1 or Block Code 2 has a value of space, the new Block code can be applied to the unused entry. If there is an entry in the Block Code, the system is using the block code priorities established on the Logo record. The message then will check if the new block code has a higher priority than the block code it is replacing. If so new block code will be applied else the old will remain. Additional to this function a restructure flag has been added.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) AccountBlockCodeUpdateV1FvEmea(params *AccountBlockCodeUpdateV1FvEmeaParams) (*AccountBlockCodeUpdateV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAccountBlockCodeUpdateV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "accountBlockCodeUpdate_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/accountBlockCodeUpdate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AccountBlockCodeUpdateV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AccountBlockCodeUpdateV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for accountBlockCodeUpdate_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AccountCloseV1FvEmea accounts close

  This service is used to update the Status of an Account to a 'Closed' or 'Charged-off' status. For each update, the Account has to be in a specific state as per FirstVision validation - for further information on this, refer to the FirstVision User Manual for the rules governing the Closure and Charge-off of an Account - if the validation fails then the request will fail with an appropriate description.<p><p>For ACCOUNT CLOSURE: The functionCode will be set to '0' for the input Account number.<p><p>For MANUAL CHARGEOFF: The functionCode will be set to '1' for the input Account number.<p><p>For MANUAL CHARGEOFF WITH REASON CODE: The functionCode will be set to '2' and a valid chgoffReason code will populated for the input Account number.<p><p>For CHARGEOFF BLOCKED: The functionCode will be set to '3' for the input Account number. If successful, the ability to do a charge-off on the Account will be 'Blocked'.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) AccountCloseV1FvEmea(params *AccountCloseV1FvEmeaParams) (*AccountCloseV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAccountCloseV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "accountClose_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/accountClose",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AccountCloseV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AccountCloseV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for accountClose_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AccountCustomFieldsUpdateV1FvEmea accounts custom fields update

  This service is used to update specific fields at account level for a Customer, including Contact Indicator, Disablity Indicator  and Marketing Opt In or Out.
*/
func (a *Client) AccountCustomFieldsUpdateV1FvEmea(params *AccountCustomFieldsUpdateV1FvEmeaParams) (*AccountCustomFieldsUpdateV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAccountCustomFieldsUpdateV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "accountCustomFieldsUpdate_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/accountCustomFieldsUpdate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AccountCustomFieldsUpdateV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AccountCustomFieldsUpdateV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for accountCustomFieldsUpdate_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AccountDisabilityIndicatorUpdateV1FvEmea accounts disability indicator update

  This service is used to update the disability indicator at card level so the business can flag  cardholders that have a requirement for correspondence to be sent in a particular format.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) AccountDisabilityIndicatorUpdateV1FvEmea(params *AccountDisabilityIndicatorUpdateV1FvEmeaParams) (*AccountDisabilityIndicatorUpdateV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAccountDisabilityIndicatorUpdateV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "accountDisabilityIndicatorUpdate_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/accountDisabilityIndicatorUpdate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AccountDisabilityIndicatorUpdateV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AccountDisabilityIndicatorUpdateV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for accountDisabilityIndicatorUpdate_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AccountUserFieldsUpdateV1FvEmea accounts user fields update

  This service is deprecated and will be supported until July 2020. The new version contains changes in date formats of certain fields to Gregorian (YYYYMMDD). Please switch to Version 2 of this API before that time. <BR/><BR/>This service is used to update CMS Account User Data fields including the USER AMOUNT, USER CODE , USER DATE and MISC USER fields.<p><p>When USER-CODE-1 is updated to a numeric value and this value is not the same value as AMBS-FI-UD-SUB-STATUS then AMBS-FI-UD-SUB-STATUS will be updated with the same value as USER-CODE-1. When USER-CODE-1 is updated to a non numeric value and AMBS-FI-UD-SUB-STATUS is not zero then AMBS-FI-UD-SUB-STATUS is updated to zero.
*/
func (a *Client) AccountUserFieldsUpdateV1FvEmea(params *AccountUserFieldsUpdateV1FvEmeaParams) (*AccountUserFieldsUpdateV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAccountUserFieldsUpdateV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "accountUserFieldsUpdate_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/accountUserFieldsUpdate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AccountUserFieldsUpdateV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AccountUserFieldsUpdateV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for accountUserFieldsUpdate_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AccountUserFieldsUpdateV2FvEmea accounts user fields update

  This service is used to update CMS Account User Data fields including the USER AMOUNT, USER CODE , USER DATE and MISC USER fields.<p><p>When USER-CODE-1 is updated to a numeric value and this value is not the same value as AMBS-FI-UD-SUB-STATUS then AMBS-FI-UD-SUB-STATUS will be updated with the same value as USER-CODE-1. When USER-CODE-1 is updated to a non numeric value and AMBS-FI-UD-SUB-STATUS is not zero then AMBS-FI-UD-SUB-STATUS is updated to zero.
*/
func (a *Client) AccountUserFieldsUpdateV2FvEmea(params *AccountUserFieldsUpdateV2FvEmeaParams) (*AccountUserFieldsUpdateV2FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAccountUserFieldsUpdateV2FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "accountUserFieldsUpdate_v2_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v2/accountUserFieldsUpdate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AccountUserFieldsUpdateV2FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AccountUserFieldsUpdateV2FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for accountUserFieldsUpdate_v2_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  BillingCycleUpdateV1FvEmea billings cycle update

  This service is used to update the Billing Cycle Code on a Cardholder account.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) BillingCycleUpdateV1FvEmea(params *BillingCycleUpdateV1FvEmeaParams) (*BillingCycleUpdateV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBillingCycleUpdateV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "billingCycleUpdate_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/billingCycleUpdate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BillingCycleUpdateV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*BillingCycleUpdateV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for billingCycleUpdate_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CollectionsMaintenanceV1FvEmea collections maintenance

  Collections Inquiry, Add and Update Service ARXZMS1 which retrieves, adds, updates the ZMCM file for a specific customer. This service is triggered from AccessPlus collections.
*/
func (a *Client) CollectionsMaintenanceV1FvEmea(params *CollectionsMaintenanceV1FvEmeaParams) (*CollectionsMaintenanceV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCollectionsMaintenanceV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "collectionsMaintenance_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/collectionsMaintenance",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CollectionsMaintenanceV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CollectionsMaintenanceV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for collectionsMaintenance_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CustomerAccountCardAddV1FvEmea customers account card add

  This Customer Account Card Setup Driver can be used to add <UL><LI> Account Base Segment Record </LI><LI> Account Insurance Product Record </LI><LI> Up to 5 Card Embosser AMED Records, including Instant Issuance and Delivery service.</LI><LI> </UL> or to update <UL><LI> Customer Name and Address Record </LI><LI> Marketing Preferences </LI></UL> <P> An Input Message will be sent from the Driver to the Subordinate Services containing all of the necessary data to establish or update one or more of the above records. The Driver Service will be responsible for ensuring that the records are added or updated in the order prescribed by CMS and for passing required data elements from one Subordinate Service to the next.  Once the Driver Service has successfully completed the requested Business Functions, an Output Message will be returned to the calling program.  The Output Message will include data regarding the records that were established or any errors that may have occurred.
*/
func (a *Client) CustomerAccountCardAddV1FvEmea(params *CustomerAccountCardAddV1FvEmeaParams) (*CustomerAccountCardAddV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCustomerAccountCardAddV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "customerAccountCardAdd_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/customerAccountCardAdd",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CustomerAccountCardAddV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CustomerAccountCardAddV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for customerAccountCardAdd_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CustomerAccountEmbosserAddV1FvEmea customers account embosser add

  This service is deprecated and will be supported until January 2021. Please switch to using the new Customer Account Card Add version V1. <BR/><BR/>This Customer Account Card Setup Driver can be used to add or update Customer Name and Address Record AMNA Marketing Preferences ZMMW And to add Account Base Segment Record AMBS Account Insurance Product Record AMIP Up to 5 Card Embosser AMED Records, including Instant Issuance and Delivery service. <p>An Input Message will be sent from the Driver to the Subordinate Services containing all of the necessary data to establish or update one or more of the above records. The Driver Service will be responsible for ensuring that the records are added or updated in the order prescribed by CMS and for passing required data elements from one Subordinate Service to the next.  Once the Driver Service has successfully completed the requested Business Functions, an Output Message will be returned to the calling program.  The Output Message will include data regarding the records that were established or any errors that may have occurred.
*/
func (a *Client) CustomerAccountEmbosserAddV1FvEmea(params *CustomerAccountEmbosserAddV1FvEmeaParams) (*CustomerAccountEmbosserAddV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCustomerAccountEmbosserAddV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "customerAccountEmbosserAdd_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/customerAccountEmbosserAdd",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CustomerAccountEmbosserAddV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CustomerAccountEmbosserAddV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for customerAccountEmbosserAdd_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DelinquencyAdjustmentUpdateV1FvEmea delinquencies adjustment update

  To adjust the delinquency information of a customers account.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) DelinquencyAdjustmentUpdateV1FvEmea(params *DelinquencyAdjustmentUpdateV1FvEmeaParams) (*DelinquencyAdjustmentUpdateV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDelinquencyAdjustmentUpdateV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "delinquencyAdjustmentUpdate_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/delinquencyAdjustmentUpdate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DelinquencyAdjustmentUpdateV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DelinquencyAdjustmentUpdateV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for delinquencyAdjustmentUpdate_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DirectCreditUpdateV1FvEmea directs credit update

  This service will allow a calling program to update Direct Credit and On Demand Credit information associated with an account.
*/
func (a *Client) DirectCreditUpdateV1FvEmea(params *DirectCreditUpdateV1FvEmeaParams) (*DirectCreditUpdateV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDirectCreditUpdateV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "directCreditUpdate_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/directCreditUpdate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DirectCreditUpdateV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DirectCreditUpdateV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for directCreditUpdate_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DirectDebitUpdateV1FvEmea directs debit update

  This service is deprecated and will be supported until January 2021. The new version contains changes in date formats of certain fields to Gregorian (YYYYMMDD). Please switch to Version 2 of this API before that time. <BR/><BR/>This service is used to allow an Account to be set up or amended to generate automatic payments to draw down the balance of the Card by generating output to a local clearing system (e.g. in UK, BACS).<p><p>The input can be either the Account or Card number. The input details will be validated and used to update the relevant Account details. The population of all the input fields is dependent on the required functionality and this can be determined from the FirstVision User Manual. If the validation of the input values fails then the request will fail with an appropriate description returned.
*/
func (a *Client) DirectDebitUpdateV1FvEmea(params *DirectDebitUpdateV1FvEmeaParams) (*DirectDebitUpdateV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDirectDebitUpdateV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "directDebitUpdate_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/directDebitUpdate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DirectDebitUpdateV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DirectDebitUpdateV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for directDebitUpdate_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DirectDebitUpdateV2FvEmea directs debit update

  This service is used to allow an Account to be set up or amended to generate automatic payments to draw down the balance of the Card by generating output to a local clearing system (e.g. in UK, BACS).<p><p>The input can be either the Account or Card number. The input details will be validated and used to update the relevant Account details. The population of all the input fields is dependent on the required functionality and this can be determined from the FirstVision User Manual. If the validation of the input values fails then the request will fail with an appropriate description returned.
*/
func (a *Client) DirectDebitUpdateV2FvEmea(params *DirectDebitUpdateV2FvEmeaParams) (*DirectDebitUpdateV2FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDirectDebitUpdateV2FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "directDebitUpdate_v2_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v2/directDebitUpdate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DirectDebitUpdateV2FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DirectDebitUpdateV2FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for directDebitUpdate_v2_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  MarketingPreferencesUpdateV1FvEmea marketings preferences update

  The Marketing Update Service will allow a user to add or update any Marketing related data to the system.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) MarketingPreferencesUpdateV1FvEmea(params *MarketingPreferencesUpdateV1FvEmeaParams) (*MarketingPreferencesUpdateV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewMarketingPreferencesUpdateV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "marketingPreferencesUpdate_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/marketingPreferencesUpdate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &MarketingPreferencesUpdateV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*MarketingPreferencesUpdateV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for marketingPreferencesUpdate_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  NonMonetaryActionUpdateV1FvEmea nons monetary action update

  This service supports the non monetary action update associated to an account by adding the updated action on the ASM History file. This service  requires the account number or card number and action code in the input message to update the ASM History file.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) NonMonetaryActionUpdateV1FvEmea(params *NonMonetaryActionUpdateV1FvEmeaParams) (*NonMonetaryActionUpdateV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewNonMonetaryActionUpdateV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "nonMonetaryActionUpdate_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/nonMonetaryActionUpdate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &NonMonetaryActionUpdateV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*NonMonetaryActionUpdateV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for nonMonetaryActionUpdate_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OptInCreditLimitUpdatesV1FvEmea opts in credit limit updates

  The Account Credit Limit Bypass Indicator Update Service allows a user to indicate if a customer does not want to be considered for a credit limit increase.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) OptInCreditLimitUpdatesV1FvEmea(params *OptInCreditLimitUpdatesV1FvEmeaParams) (*OptInCreditLimitUpdatesV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOptInCreditLimitUpdatesV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "optInCreditLimitUpdates_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/optInCreditLimitUpdates",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OptInCreditLimitUpdatesV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OptInCreditLimitUpdatesV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for optInCreditLimitUpdates_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PricingControlUpdateV1FvEmea pricings control update

  This service will emulate functionality used to update all PCT level pricing control fields.  This includes Issuance ID, Residence ID, Pricing Control, Pricing Control Start and End Dates, PCT level overrides including start and end date, Plan payment override Flag and Fixed payment amount.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) PricingControlUpdateV1FvEmea(params *PricingControlUpdateV1FvEmeaParams) (*PricingControlUpdateV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPricingControlUpdateV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "pricingControlUpdate_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/pricingControlUpdate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PricingControlUpdateV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PricingControlUpdateV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for pricingControlUpdate_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  RelationshipAddV1FvEmea relationships add

  The Add Relationship Record service adding a Relationship Record and associated parameters. It can be triggered using external input.<p><p>When a new Relationship Record is established the status will be set to inactive and remains in this status until the first Subordinate Primary account added to the Relationship.<p><p>Adding Subordinate Primary account follows the same procedure as adding other accounts except you must identify the Relationship Number to link the account to the Relationship. The output response will return a pass or fail indicator and the Relationship number and validation result message when passed.
*/
func (a *Client) RelationshipAddV1FvEmea(params *RelationshipAddV1FvEmeaParams) (*RelationshipAddV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewRelationshipAddV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "relationshipAdd_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/relationshipAdd",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &RelationshipAddV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*RelationshipAddV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for relationshipAdd_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  RelationshipNumberUpdateV1FvEmea relationships number update

  Relationship number update service<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) RelationshipNumberUpdateV1FvEmea(params *RelationshipNumberUpdateV1FvEmeaParams) (*RelationshipNumberUpdateV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewRelationshipNumberUpdateV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "relationshipNumberUpdate_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/relationshipNumberUpdate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &RelationshipNumberUpdateV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*RelationshipNumberUpdateV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for relationshipNumberUpdate_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ReturnedMailUpdateV1FvEmea returneds mail update

  This service is used to update the returned mail information on the account.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) ReturnedMailUpdateV1FvEmea(params *ReturnedMailUpdateV1FvEmeaParams) (*ReturnedMailUpdateV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewReturnedMailUpdateV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "returnedMailUpdate_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/returnedMailUpdate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ReturnedMailUpdateV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ReturnedMailUpdateV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for returnedMailUpdate_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  StatementHoldUpdateV1FvEmea statements hold update

  This Statement flag update service can be used to update the statement flag in base segment file depends on the logo level setting. If logo level setting for corresponding org and logo is zero or one means, the statement flag in base segment file will be inactive. If logo level setting for corresponding org and logo is two or three means, the statement flag in base segment file will be active. <BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) StatementHoldUpdateV1FvEmea(params *StatementHoldUpdateV1FvEmeaParams) (*StatementHoldUpdateV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewStatementHoldUpdateV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "statementHoldUpdate_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/statementHoldUpdate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &StatementHoldUpdateV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*StatementHoldUpdateV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for statementHoldUpdate_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  StatementOptionsUpdateV1FvEmea statements options update

  The Electronic Correspondence update service will provide an option to select the type of statement and type of notification the customer will receive.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) StatementOptionsUpdateV1FvEmea(params *StatementOptionsUpdateV1FvEmeaParams) (*StatementOptionsUpdateV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewStatementOptionsUpdateV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "statementOptionsUpdate_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/statementOptionsUpdate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &StatementOptionsUpdateV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*StatementOptionsUpdateV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for statementOptionsUpdate_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  TravelItineraryUpdateV1FvEmea travels itinerary update

  Travel Itinerary and Crown Flexi Marker Update message provides the facility to update the Travel Itinerary, Crown Marker and Flexi Marker, based on the updates received from the Avaloq system; within the Private Banking processing platform (FirstVision), and also pass information from FirstVision to Avaloq to show acceptance/rejection.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) TravelItineraryUpdateV1FvEmea(params *TravelItineraryUpdateV1FvEmeaParams) (*TravelItineraryUpdateV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTravelItineraryUpdateV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "travelItineraryUpdate_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/travelItineraryUpdate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &TravelItineraryUpdateV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*TravelItineraryUpdateV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for travelItineraryUpdate_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WaiveFeesandInterestUpdateV1FvEmea waives feesand interest update

  The Account Fee Waive Flags Update Service is used to retrieve data held at the account  level for a FirstVision account. This service has to be called with a valid account  to get the required response.<BR/><BR/><p>Fields that are not provided in the Request object will be initialised to their default values. All numeric fields are initialised to zero and alphanumeric fields initialised to spaces</p>
*/
func (a *Client) WaiveFeesandInterestUpdateV1FvEmea(params *WaiveFeesandInterestUpdateV1FvEmeaParams) (*WaiveFeesandInterestUpdateV1FvEmeaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWaiveFeesandInterestUpdateV1FvEmeaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "waiveFeesandInterestUpdate_v1_fv_emea",
		Method:             "POST",
		PathPattern:        "/fv_emea/v1/waiveFeesandInterestUpdate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WaiveFeesandInterestUpdateV1FvEmeaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WaiveFeesandInterestUpdateV1FvEmeaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for waiveFeesandInterestUpdate_v1_fv_emea: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
