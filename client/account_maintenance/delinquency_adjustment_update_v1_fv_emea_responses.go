// Code generated by go-swagger; DO NOT EDIT.

package account_maintenance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// DelinquencyAdjustmentUpdateV1FvEmeaReader is a Reader for the DelinquencyAdjustmentUpdateV1FvEmea structure.
type DelinquencyAdjustmentUpdateV1FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DelinquencyAdjustmentUpdateV1FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDelinquencyAdjustmentUpdateV1FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDelinquencyAdjustmentUpdateV1FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDelinquencyAdjustmentUpdateV1FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDelinquencyAdjustmentUpdateV1FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDelinquencyAdjustmentUpdateV1FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDelinquencyAdjustmentUpdateV1FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewDelinquencyAdjustmentUpdateV1FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewDelinquencyAdjustmentUpdateV1FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewDelinquencyAdjustmentUpdateV1FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 465:
		result := NewDelinquencyAdjustmentUpdateV1FvEmeaStatus465()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDelinquencyAdjustmentUpdateV1FvEmeaOK creates a DelinquencyAdjustmentUpdateV1FvEmeaOK with default headers values
func NewDelinquencyAdjustmentUpdateV1FvEmeaOK() *DelinquencyAdjustmentUpdateV1FvEmeaOK {
	return &DelinquencyAdjustmentUpdateV1FvEmeaOK{}
}

/*DelinquencyAdjustmentUpdateV1FvEmeaOK handles this case with default header values.

successful operation
*/
type DelinquencyAdjustmentUpdateV1FvEmeaOK struct {
	Payload *models.DelinquencyAdjustmentUpdateResponse
}

func (o *DelinquencyAdjustmentUpdateV1FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/delinquencyAdjustmentUpdate][%d] delinquencyAdjustmentUpdateV1FvEmeaOK  %+v", 200, o.Payload)
}

func (o *DelinquencyAdjustmentUpdateV1FvEmeaOK) GetPayload() *models.DelinquencyAdjustmentUpdateResponse {
	return o.Payload
}

func (o *DelinquencyAdjustmentUpdateV1FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DelinquencyAdjustmentUpdateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDelinquencyAdjustmentUpdateV1FvEmeaBadRequest creates a DelinquencyAdjustmentUpdateV1FvEmeaBadRequest with default headers values
func NewDelinquencyAdjustmentUpdateV1FvEmeaBadRequest() *DelinquencyAdjustmentUpdateV1FvEmeaBadRequest {
	return &DelinquencyAdjustmentUpdateV1FvEmeaBadRequest{}
}

/*DelinquencyAdjustmentUpdateV1FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type DelinquencyAdjustmentUpdateV1FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *DelinquencyAdjustmentUpdateV1FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/delinquencyAdjustmentUpdate][%d] delinquencyAdjustmentUpdateV1FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *DelinquencyAdjustmentUpdateV1FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *DelinquencyAdjustmentUpdateV1FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDelinquencyAdjustmentUpdateV1FvEmeaUnauthorized creates a DelinquencyAdjustmentUpdateV1FvEmeaUnauthorized with default headers values
func NewDelinquencyAdjustmentUpdateV1FvEmeaUnauthorized() *DelinquencyAdjustmentUpdateV1FvEmeaUnauthorized {
	return &DelinquencyAdjustmentUpdateV1FvEmeaUnauthorized{}
}

/*DelinquencyAdjustmentUpdateV1FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type DelinquencyAdjustmentUpdateV1FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *DelinquencyAdjustmentUpdateV1FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/delinquencyAdjustmentUpdate][%d] delinquencyAdjustmentUpdateV1FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *DelinquencyAdjustmentUpdateV1FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *DelinquencyAdjustmentUpdateV1FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDelinquencyAdjustmentUpdateV1FvEmeaForbidden creates a DelinquencyAdjustmentUpdateV1FvEmeaForbidden with default headers values
func NewDelinquencyAdjustmentUpdateV1FvEmeaForbidden() *DelinquencyAdjustmentUpdateV1FvEmeaForbidden {
	return &DelinquencyAdjustmentUpdateV1FvEmeaForbidden{}
}

/*DelinquencyAdjustmentUpdateV1FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type DelinquencyAdjustmentUpdateV1FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *DelinquencyAdjustmentUpdateV1FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/delinquencyAdjustmentUpdate][%d] delinquencyAdjustmentUpdateV1FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *DelinquencyAdjustmentUpdateV1FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *DelinquencyAdjustmentUpdateV1FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDelinquencyAdjustmentUpdateV1FvEmeaNotFound creates a DelinquencyAdjustmentUpdateV1FvEmeaNotFound with default headers values
func NewDelinquencyAdjustmentUpdateV1FvEmeaNotFound() *DelinquencyAdjustmentUpdateV1FvEmeaNotFound {
	return &DelinquencyAdjustmentUpdateV1FvEmeaNotFound{}
}

/*DelinquencyAdjustmentUpdateV1FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type DelinquencyAdjustmentUpdateV1FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *DelinquencyAdjustmentUpdateV1FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/delinquencyAdjustmentUpdate][%d] delinquencyAdjustmentUpdateV1FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *DelinquencyAdjustmentUpdateV1FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *DelinquencyAdjustmentUpdateV1FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDelinquencyAdjustmentUpdateV1FvEmeaTooManyRequests creates a DelinquencyAdjustmentUpdateV1FvEmeaTooManyRequests with default headers values
func NewDelinquencyAdjustmentUpdateV1FvEmeaTooManyRequests() *DelinquencyAdjustmentUpdateV1FvEmeaTooManyRequests {
	return &DelinquencyAdjustmentUpdateV1FvEmeaTooManyRequests{}
}

/*DelinquencyAdjustmentUpdateV1FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type DelinquencyAdjustmentUpdateV1FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *DelinquencyAdjustmentUpdateV1FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/delinquencyAdjustmentUpdate][%d] delinquencyAdjustmentUpdateV1FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *DelinquencyAdjustmentUpdateV1FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *DelinquencyAdjustmentUpdateV1FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDelinquencyAdjustmentUpdateV1FvEmeaStatus452 creates a DelinquencyAdjustmentUpdateV1FvEmeaStatus452 with default headers values
func NewDelinquencyAdjustmentUpdateV1FvEmeaStatus452() *DelinquencyAdjustmentUpdateV1FvEmeaStatus452 {
	return &DelinquencyAdjustmentUpdateV1FvEmeaStatus452{}
}

/*DelinquencyAdjustmentUpdateV1FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type DelinquencyAdjustmentUpdateV1FvEmeaStatus452 struct {
}

func (o *DelinquencyAdjustmentUpdateV1FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/delinquencyAdjustmentUpdate][%d] delinquencyAdjustmentUpdateV1FvEmeaStatus452 ", 452)
}

func (o *DelinquencyAdjustmentUpdateV1FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDelinquencyAdjustmentUpdateV1FvEmeaStatus453 creates a DelinquencyAdjustmentUpdateV1FvEmeaStatus453 with default headers values
func NewDelinquencyAdjustmentUpdateV1FvEmeaStatus453() *DelinquencyAdjustmentUpdateV1FvEmeaStatus453 {
	return &DelinquencyAdjustmentUpdateV1FvEmeaStatus453{}
}

/*DelinquencyAdjustmentUpdateV1FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type DelinquencyAdjustmentUpdateV1FvEmeaStatus453 struct {
}

func (o *DelinquencyAdjustmentUpdateV1FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/delinquencyAdjustmentUpdate][%d] delinquencyAdjustmentUpdateV1FvEmeaStatus453 ", 453)
}

func (o *DelinquencyAdjustmentUpdateV1FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDelinquencyAdjustmentUpdateV1FvEmeaStatus455 creates a DelinquencyAdjustmentUpdateV1FvEmeaStatus455 with default headers values
func NewDelinquencyAdjustmentUpdateV1FvEmeaStatus455() *DelinquencyAdjustmentUpdateV1FvEmeaStatus455 {
	return &DelinquencyAdjustmentUpdateV1FvEmeaStatus455{}
}

/*DelinquencyAdjustmentUpdateV1FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type DelinquencyAdjustmentUpdateV1FvEmeaStatus455 struct {
}

func (o *DelinquencyAdjustmentUpdateV1FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/delinquencyAdjustmentUpdate][%d] delinquencyAdjustmentUpdateV1FvEmeaStatus455 ", 455)
}

func (o *DelinquencyAdjustmentUpdateV1FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDelinquencyAdjustmentUpdateV1FvEmeaStatus465 creates a DelinquencyAdjustmentUpdateV1FvEmeaStatus465 with default headers values
func NewDelinquencyAdjustmentUpdateV1FvEmeaStatus465() *DelinquencyAdjustmentUpdateV1FvEmeaStatus465 {
	return &DelinquencyAdjustmentUpdateV1FvEmeaStatus465{}
}

/*DelinquencyAdjustmentUpdateV1FvEmeaStatus465 handles this case with default header values.

Backend Response Code and message in odsMessages field: <BR/><BR/>VPL5SDAZ1S : SERVICE COULD NOT OBTAIN STORAGE AREA<BR/>VPL5SDAZ2S : INPUT TO REAGE UPDATE SERVICE IS INCORRECT LENGTH<BR/>VPL5SDAZ4S : FILE-TABLE USED BY THIS SERVICE IS MISSING<BR/>VPL5SDAZ5S : REQUESTED CARDorACCOUNT NUMBER IS NOT FOUND<BR/>VPL5SDAZ6S : REQUESTED ORG NOT FOUND<BR/>VPL5SDAZ7S : FILE-TABLE USED BY THIS SERVICE IS MISSING<BR/>VPL5SDAZ8S : APPLICATION IN NO-PROCESSING STATUS RETRY IN A FEW MINUTES<BR/>VPL5SDA01E : NUMBER OF ITEMS IS NOT NUMERIC<BR/>VPL5SDA02E : ORGANIZATION NUMBER MUST BE NUMERIC AND VALID VALUES ARE 001-998<BR/>VPL5SDA03E : ORGANIZATION IS NOT NUMERIC OR MUST BE VALUE BETWEEN 000-998<BR/>VPL5SDA04S : REQUESTED CARDorACCT NUMBER IS NOT NUMERIC OR EQUAL SPACES<BR/>VPL5SDA05S : INVALID DIASSOCIATE SW VALID VALUE IS 0 OR 1 FOR PARTY 1<BR/>VPL5SDA06S : INVALID DIASSOCIATE SW VALID VALUE IS 0 OR 1 FOR PARTY 2<BR/>VPL5SDA07S : INVALID DIASSOCIATE SW VALID VALUE IS 0 OR 1 FOR PARTY 3<BR/>VPL5SDA08S : INVALID DIASSOCIATE TYPEVALID VALUE IS 0 OR 1 FOR PARTY 1<BR/>VPL5SDA08E : INVALID DELINQUENCY REAGE FUNCTION BUTTON<BR/>VPL5SDA09S : INVALID DIASSOCIATE TYPEVALID VALUE IS 0 OR 1 FOR PARTY 2<BR/>VPL5SDA10S : INVALID DIASSOCIATE TYPEVALID VALUE IS 0 OR 1 FOR PARTY 3<BR/>VPL5SDA11S : APPLICATION IN NO-PROCESSING STATUS RE-TRY<BR/>VPL5SDA12S : SYSTEM RECORD NOT FOUND ON FILE<BR/>VPL5SDA13E : INVALID REAGE CODEorDELINQUENCY REAGE REQUEST<BR/>VPL5SDA14E : ACCOUNT DUE IS NOT NUMERIC<BR/>VPL5SDA15E : ERROR PROCESSING CURRENT BALANCE<BR/>VPL5SDA16E : ACCOUNT DUE MODIFIED - REAGE CD NOT ALLOWED<BR/>VPL5SDA17E : COMPUTED BALANCE IS MORE THAN BASE SEGMENT<BR/>VPL5SDA18E : ENTERED PLAN DUE IS NOT NUMERIC<BR/>VPL5SDA19E : EXISTING PLAN IS DEFERRED WITH TOTAL DUE NOT = ZEROS<BR/>VPL5SDA20E : PLAN DUE IS GREATER THAN PLAN CURRENT BALANCE<BR/>VPL5SDA21E : PLAN DUE AMOUNTS MUST NOT BE CHANGED FOR AUTOREAGE<BR/>VPL5SDA22E : MISMATCH IN CALCULATED PLAN AND CALCULATED BASE DUE.....<BR/>VPL5SDA23I : DIFFERENCE IN CALCULATED PLAN AND ACOUNT DUE IS NON-ZERO<BR/>VPL5SDA24I : CALCULATED PLAN BALANCE > ACCOUNT CURRENT BALANCE
*/
type DelinquencyAdjustmentUpdateV1FvEmeaStatus465 struct {
	Payload *models.FsErrorDetails
}

func (o *DelinquencyAdjustmentUpdateV1FvEmeaStatus465) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/delinquencyAdjustmentUpdate][%d] delinquencyAdjustmentUpdateV1FvEmeaStatus465  %+v", 465, o.Payload)
}

func (o *DelinquencyAdjustmentUpdateV1FvEmeaStatus465) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *DelinquencyAdjustmentUpdateV1FvEmeaStatus465) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
