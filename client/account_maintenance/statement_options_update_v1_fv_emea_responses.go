// Code generated by go-swagger; DO NOT EDIT.

package account_maintenance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// StatementOptionsUpdateV1FvEmeaReader is a Reader for the StatementOptionsUpdateV1FvEmea structure.
type StatementOptionsUpdateV1FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StatementOptionsUpdateV1FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStatementOptionsUpdateV1FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStatementOptionsUpdateV1FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewStatementOptionsUpdateV1FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewStatementOptionsUpdateV1FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStatementOptionsUpdateV1FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewStatementOptionsUpdateV1FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewStatementOptionsUpdateV1FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewStatementOptionsUpdateV1FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewStatementOptionsUpdateV1FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 465:
		result := NewStatementOptionsUpdateV1FvEmeaStatus465()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewStatementOptionsUpdateV1FvEmeaOK creates a StatementOptionsUpdateV1FvEmeaOK with default headers values
func NewStatementOptionsUpdateV1FvEmeaOK() *StatementOptionsUpdateV1FvEmeaOK {
	return &StatementOptionsUpdateV1FvEmeaOK{}
}

/*StatementOptionsUpdateV1FvEmeaOK handles this case with default header values.

successful operation
*/
type StatementOptionsUpdateV1FvEmeaOK struct {
	Payload *models.StatementOptionsUpdateResponse
}

func (o *StatementOptionsUpdateV1FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/statementOptionsUpdate][%d] statementOptionsUpdateV1FvEmeaOK  %+v", 200, o.Payload)
}

func (o *StatementOptionsUpdateV1FvEmeaOK) GetPayload() *models.StatementOptionsUpdateResponse {
	return o.Payload
}

func (o *StatementOptionsUpdateV1FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StatementOptionsUpdateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStatementOptionsUpdateV1FvEmeaBadRequest creates a StatementOptionsUpdateV1FvEmeaBadRequest with default headers values
func NewStatementOptionsUpdateV1FvEmeaBadRequest() *StatementOptionsUpdateV1FvEmeaBadRequest {
	return &StatementOptionsUpdateV1FvEmeaBadRequest{}
}

/*StatementOptionsUpdateV1FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type StatementOptionsUpdateV1FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *StatementOptionsUpdateV1FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/statementOptionsUpdate][%d] statementOptionsUpdateV1FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *StatementOptionsUpdateV1FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *StatementOptionsUpdateV1FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStatementOptionsUpdateV1FvEmeaUnauthorized creates a StatementOptionsUpdateV1FvEmeaUnauthorized with default headers values
func NewStatementOptionsUpdateV1FvEmeaUnauthorized() *StatementOptionsUpdateV1FvEmeaUnauthorized {
	return &StatementOptionsUpdateV1FvEmeaUnauthorized{}
}

/*StatementOptionsUpdateV1FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type StatementOptionsUpdateV1FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *StatementOptionsUpdateV1FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/statementOptionsUpdate][%d] statementOptionsUpdateV1FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *StatementOptionsUpdateV1FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *StatementOptionsUpdateV1FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStatementOptionsUpdateV1FvEmeaForbidden creates a StatementOptionsUpdateV1FvEmeaForbidden with default headers values
func NewStatementOptionsUpdateV1FvEmeaForbidden() *StatementOptionsUpdateV1FvEmeaForbidden {
	return &StatementOptionsUpdateV1FvEmeaForbidden{}
}

/*StatementOptionsUpdateV1FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type StatementOptionsUpdateV1FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *StatementOptionsUpdateV1FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/statementOptionsUpdate][%d] statementOptionsUpdateV1FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *StatementOptionsUpdateV1FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *StatementOptionsUpdateV1FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStatementOptionsUpdateV1FvEmeaNotFound creates a StatementOptionsUpdateV1FvEmeaNotFound with default headers values
func NewStatementOptionsUpdateV1FvEmeaNotFound() *StatementOptionsUpdateV1FvEmeaNotFound {
	return &StatementOptionsUpdateV1FvEmeaNotFound{}
}

/*StatementOptionsUpdateV1FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type StatementOptionsUpdateV1FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *StatementOptionsUpdateV1FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/statementOptionsUpdate][%d] statementOptionsUpdateV1FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *StatementOptionsUpdateV1FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *StatementOptionsUpdateV1FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStatementOptionsUpdateV1FvEmeaTooManyRequests creates a StatementOptionsUpdateV1FvEmeaTooManyRequests with default headers values
func NewStatementOptionsUpdateV1FvEmeaTooManyRequests() *StatementOptionsUpdateV1FvEmeaTooManyRequests {
	return &StatementOptionsUpdateV1FvEmeaTooManyRequests{}
}

/*StatementOptionsUpdateV1FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type StatementOptionsUpdateV1FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *StatementOptionsUpdateV1FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/statementOptionsUpdate][%d] statementOptionsUpdateV1FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *StatementOptionsUpdateV1FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *StatementOptionsUpdateV1FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStatementOptionsUpdateV1FvEmeaStatus452 creates a StatementOptionsUpdateV1FvEmeaStatus452 with default headers values
func NewStatementOptionsUpdateV1FvEmeaStatus452() *StatementOptionsUpdateV1FvEmeaStatus452 {
	return &StatementOptionsUpdateV1FvEmeaStatus452{}
}

/*StatementOptionsUpdateV1FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type StatementOptionsUpdateV1FvEmeaStatus452 struct {
}

func (o *StatementOptionsUpdateV1FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/statementOptionsUpdate][%d] statementOptionsUpdateV1FvEmeaStatus452 ", 452)
}

func (o *StatementOptionsUpdateV1FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStatementOptionsUpdateV1FvEmeaStatus453 creates a StatementOptionsUpdateV1FvEmeaStatus453 with default headers values
func NewStatementOptionsUpdateV1FvEmeaStatus453() *StatementOptionsUpdateV1FvEmeaStatus453 {
	return &StatementOptionsUpdateV1FvEmeaStatus453{}
}

/*StatementOptionsUpdateV1FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type StatementOptionsUpdateV1FvEmeaStatus453 struct {
}

func (o *StatementOptionsUpdateV1FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/statementOptionsUpdate][%d] statementOptionsUpdateV1FvEmeaStatus453 ", 453)
}

func (o *StatementOptionsUpdateV1FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStatementOptionsUpdateV1FvEmeaStatus455 creates a StatementOptionsUpdateV1FvEmeaStatus455 with default headers values
func NewStatementOptionsUpdateV1FvEmeaStatus455() *StatementOptionsUpdateV1FvEmeaStatus455 {
	return &StatementOptionsUpdateV1FvEmeaStatus455{}
}

/*StatementOptionsUpdateV1FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type StatementOptionsUpdateV1FvEmeaStatus455 struct {
}

func (o *StatementOptionsUpdateV1FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/statementOptionsUpdate][%d] statementOptionsUpdateV1FvEmeaStatus455 ", 455)
}

func (o *StatementOptionsUpdateV1FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStatementOptionsUpdateV1FvEmeaStatus465 creates a StatementOptionsUpdateV1FvEmeaStatus465 with default headers values
func NewStatementOptionsUpdateV1FvEmeaStatus465() *StatementOptionsUpdateV1FvEmeaStatus465 {
	return &StatementOptionsUpdateV1FvEmeaStatus465{}
}

/*StatementOptionsUpdateV1FvEmeaStatus465 handles this case with default header values.

Backend Response Code and message in odsMessages field: <BR/><BR/>VPL5SST01S : SERVICE COULD NOT OBTAIN STORAGE AREA<BR/>VPL5SST02S : SERVICE INPUT TO STMT OPT UPD SERVICE IS AN INCORRECT LENGTH<BR/>VPL5SST04S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPL5SST05S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES<BR/>VPL5SST06S : ORGANIZATION NUMBER MUST BE NUMERIC AND VALID VALUES ARE 001-998<BR/>VPL5SST07S : ACCOUNTorCARDorCUSTOMER NUMBER SHOULD BE PROVIDED AND BE NUMERIC<BR/>VPL5SST08S : INVALID LOCALorFOREIGN IND SPECIFIED-VALID VALUES ARE SPACE 0 OR 1<BR/>VPL5SST09S : STMT NOTIFY INDICATOR INVALID - 0 1 OR 2 ONLY<BR/>VPL5SST10S : STMT NOTIFY MODE INVALID - 0 1 2 OR 3 ONLY<BR/>VPL5SST11S : STMT NOTIFY MOD ZERO FOR STMT INDICATOR  1 2<BR/>VPL5SST12S : MOBILE PHONE FLAG INVALID - 0 1 OR 2 ONLY<BR/>VPL5SST13S : MOBILE PHONE FLAG ZERO - FOR STMT MODE 2 3<BR/>VPL5SST14S : EMAIL FLAG INVALID - 0 1 OR 2 ONLY<BR/>VPL5SST15S : CUSTOMER CAN HAVE ONLY ONE PREFERRED CONTACT<BR/>VPL5SST16S : EMAIL FLAG ZERO - FOR STMT MODE 1 3<BR/>VPL5SST17S : SMS FLAG INVALID - 0 OR 1 ONLY<BR/>VPL5SST18S : MOBILE PHONE NUMBER IS REQUIRED WHEN STMT NTFY MOD ARE 2 OR 3<BR/>VPL5SST19S : MOBILE PHONE NUMBER REQUIRED IF MOBILE PHONE FLAG IS 1 OR 2<BR/>VPL5SST20S : MOBILE PHONE NUMBER REQUIRED IF SMS FLAG IS 1<BR/>VPL5SST21S : EMAIL ADDR IS REQUIRED WHEN STMT NTFY MOD ARE 1 OR 3<BR/>VPL5SST22S : EMAIL ADDR REQUIRED IF EMAIL FLAG IS 1 OR 2<BR/>VPL5SST23S : ORGANIZATION NUMBER NOT DETERMINED<BR/>VPL5SST24S : REQUESTED ORGANIZATION NUMBER IS NOT FOUND<BR/>VPL5SST25S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPL5SST26S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES<BR/>VPL5SST27S : SYSTEM RECORD NOT FOUND<BR/>VPL5SST28S : ORGANIZATION NUMBER NOT FOUND<BR/>VPL5SST29S : CARDorACCOUNT NUMBER NOT FOUND<BR/>VPL5SST30S : CUSTOMER NUMBER NOT FOUND<BR/>VPL5SST31S : SMS IND ZERO FOR STMT MODE 2
*/
type StatementOptionsUpdateV1FvEmeaStatus465 struct {
	Payload *models.FsErrorDetails
}

func (o *StatementOptionsUpdateV1FvEmeaStatus465) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/statementOptionsUpdate][%d] statementOptionsUpdateV1FvEmeaStatus465  %+v", 465, o.Payload)
}

func (o *StatementOptionsUpdateV1FvEmeaStatus465) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *StatementOptionsUpdateV1FvEmeaStatus465) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
