// Code generated by go-swagger; DO NOT EDIT.

package account_maintenance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// NonMonetaryActionUpdateV1FvEmeaReader is a Reader for the NonMonetaryActionUpdateV1FvEmea structure.
type NonMonetaryActionUpdateV1FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NonMonetaryActionUpdateV1FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNonMonetaryActionUpdateV1FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewNonMonetaryActionUpdateV1FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewNonMonetaryActionUpdateV1FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewNonMonetaryActionUpdateV1FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewNonMonetaryActionUpdateV1FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewNonMonetaryActionUpdateV1FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewNonMonetaryActionUpdateV1FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewNonMonetaryActionUpdateV1FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewNonMonetaryActionUpdateV1FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 465:
		result := NewNonMonetaryActionUpdateV1FvEmeaStatus465()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewNonMonetaryActionUpdateV1FvEmeaOK creates a NonMonetaryActionUpdateV1FvEmeaOK with default headers values
func NewNonMonetaryActionUpdateV1FvEmeaOK() *NonMonetaryActionUpdateV1FvEmeaOK {
	return &NonMonetaryActionUpdateV1FvEmeaOK{}
}

/*NonMonetaryActionUpdateV1FvEmeaOK handles this case with default header values.

successful operation
*/
type NonMonetaryActionUpdateV1FvEmeaOK struct {
	Payload *models.NonMonetaryActionUpdateResponse
}

func (o *NonMonetaryActionUpdateV1FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/nonMonetaryActionUpdate][%d] nonMonetaryActionUpdateV1FvEmeaOK  %+v", 200, o.Payload)
}

func (o *NonMonetaryActionUpdateV1FvEmeaOK) GetPayload() *models.NonMonetaryActionUpdateResponse {
	return o.Payload
}

func (o *NonMonetaryActionUpdateV1FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NonMonetaryActionUpdateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNonMonetaryActionUpdateV1FvEmeaBadRequest creates a NonMonetaryActionUpdateV1FvEmeaBadRequest with default headers values
func NewNonMonetaryActionUpdateV1FvEmeaBadRequest() *NonMonetaryActionUpdateV1FvEmeaBadRequest {
	return &NonMonetaryActionUpdateV1FvEmeaBadRequest{}
}

/*NonMonetaryActionUpdateV1FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type NonMonetaryActionUpdateV1FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *NonMonetaryActionUpdateV1FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/nonMonetaryActionUpdate][%d] nonMonetaryActionUpdateV1FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *NonMonetaryActionUpdateV1FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *NonMonetaryActionUpdateV1FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNonMonetaryActionUpdateV1FvEmeaUnauthorized creates a NonMonetaryActionUpdateV1FvEmeaUnauthorized with default headers values
func NewNonMonetaryActionUpdateV1FvEmeaUnauthorized() *NonMonetaryActionUpdateV1FvEmeaUnauthorized {
	return &NonMonetaryActionUpdateV1FvEmeaUnauthorized{}
}

/*NonMonetaryActionUpdateV1FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type NonMonetaryActionUpdateV1FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *NonMonetaryActionUpdateV1FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/nonMonetaryActionUpdate][%d] nonMonetaryActionUpdateV1FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *NonMonetaryActionUpdateV1FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *NonMonetaryActionUpdateV1FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNonMonetaryActionUpdateV1FvEmeaForbidden creates a NonMonetaryActionUpdateV1FvEmeaForbidden with default headers values
func NewNonMonetaryActionUpdateV1FvEmeaForbidden() *NonMonetaryActionUpdateV1FvEmeaForbidden {
	return &NonMonetaryActionUpdateV1FvEmeaForbidden{}
}

/*NonMonetaryActionUpdateV1FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type NonMonetaryActionUpdateV1FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *NonMonetaryActionUpdateV1FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/nonMonetaryActionUpdate][%d] nonMonetaryActionUpdateV1FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *NonMonetaryActionUpdateV1FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *NonMonetaryActionUpdateV1FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNonMonetaryActionUpdateV1FvEmeaNotFound creates a NonMonetaryActionUpdateV1FvEmeaNotFound with default headers values
func NewNonMonetaryActionUpdateV1FvEmeaNotFound() *NonMonetaryActionUpdateV1FvEmeaNotFound {
	return &NonMonetaryActionUpdateV1FvEmeaNotFound{}
}

/*NonMonetaryActionUpdateV1FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type NonMonetaryActionUpdateV1FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *NonMonetaryActionUpdateV1FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/nonMonetaryActionUpdate][%d] nonMonetaryActionUpdateV1FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *NonMonetaryActionUpdateV1FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *NonMonetaryActionUpdateV1FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNonMonetaryActionUpdateV1FvEmeaTooManyRequests creates a NonMonetaryActionUpdateV1FvEmeaTooManyRequests with default headers values
func NewNonMonetaryActionUpdateV1FvEmeaTooManyRequests() *NonMonetaryActionUpdateV1FvEmeaTooManyRequests {
	return &NonMonetaryActionUpdateV1FvEmeaTooManyRequests{}
}

/*NonMonetaryActionUpdateV1FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type NonMonetaryActionUpdateV1FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *NonMonetaryActionUpdateV1FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/nonMonetaryActionUpdate][%d] nonMonetaryActionUpdateV1FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *NonMonetaryActionUpdateV1FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *NonMonetaryActionUpdateV1FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNonMonetaryActionUpdateV1FvEmeaStatus452 creates a NonMonetaryActionUpdateV1FvEmeaStatus452 with default headers values
func NewNonMonetaryActionUpdateV1FvEmeaStatus452() *NonMonetaryActionUpdateV1FvEmeaStatus452 {
	return &NonMonetaryActionUpdateV1FvEmeaStatus452{}
}

/*NonMonetaryActionUpdateV1FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type NonMonetaryActionUpdateV1FvEmeaStatus452 struct {
}

func (o *NonMonetaryActionUpdateV1FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/nonMonetaryActionUpdate][%d] nonMonetaryActionUpdateV1FvEmeaStatus452 ", 452)
}

func (o *NonMonetaryActionUpdateV1FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNonMonetaryActionUpdateV1FvEmeaStatus453 creates a NonMonetaryActionUpdateV1FvEmeaStatus453 with default headers values
func NewNonMonetaryActionUpdateV1FvEmeaStatus453() *NonMonetaryActionUpdateV1FvEmeaStatus453 {
	return &NonMonetaryActionUpdateV1FvEmeaStatus453{}
}

/*NonMonetaryActionUpdateV1FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type NonMonetaryActionUpdateV1FvEmeaStatus453 struct {
}

func (o *NonMonetaryActionUpdateV1FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/nonMonetaryActionUpdate][%d] nonMonetaryActionUpdateV1FvEmeaStatus453 ", 453)
}

func (o *NonMonetaryActionUpdateV1FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNonMonetaryActionUpdateV1FvEmeaStatus455 creates a NonMonetaryActionUpdateV1FvEmeaStatus455 with default headers values
func NewNonMonetaryActionUpdateV1FvEmeaStatus455() *NonMonetaryActionUpdateV1FvEmeaStatus455 {
	return &NonMonetaryActionUpdateV1FvEmeaStatus455{}
}

/*NonMonetaryActionUpdateV1FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type NonMonetaryActionUpdateV1FvEmeaStatus455 struct {
}

func (o *NonMonetaryActionUpdateV1FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/nonMonetaryActionUpdate][%d] nonMonetaryActionUpdateV1FvEmeaStatus455 ", 455)
}

func (o *NonMonetaryActionUpdateV1FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNonMonetaryActionUpdateV1FvEmeaStatus465 creates a NonMonetaryActionUpdateV1FvEmeaStatus465 with default headers values
func NewNonMonetaryActionUpdateV1FvEmeaStatus465() *NonMonetaryActionUpdateV1FvEmeaStatus465 {
	return &NonMonetaryActionUpdateV1FvEmeaStatus465{}
}

/*NonMonetaryActionUpdateV1FvEmeaStatus465 handles this case with default header values.

Backend Response Code and message in odsMessages field: <BR/><BR/>VPE8SNA01S : SERVICE COULD NOT OBTAIN STORAGE OUTPUT AREA<BR/>VPE8SNA02S : SERVICE INPUT TO NorA SERVICE IS AN INCORRECT LENGTH<BR/>VPE8SNA04S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPE8SNA05S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES<BR/>VPE8SNA06S : ORGANIZATION MUST BE NUMERIC AND VALID VALUES ARE 000-998<BR/>VPE8SNA07S : ACCOUNT OR CARD NUMBER REQUIRED<BR/>VPE8SNA07S : ACCOUNT OR CARD NUMBER REQUIRED<BR/>VPE8SNA08S : ACTION CODE IS REQUIRED<BR/>VPE8SNA09S : ORGANIZATION NUMBER IS NOT ON FILE<BR/>VPE8SNA10S : INVALID ORGANIZATION NUMBER<BR/>VPE8SNA11S : FILE-TABLE RECORD USED BY THIS SERVICE IS NOT FOUND<BR/>VPE8SNA12S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES<BR/>VPE8SNA13S : ORGANIZATION NUMBER NOT FOUND<BR/>VPE8SNA14S : ACCOUNT NOT FOUND<BR/>VPE8SNA15S : ACCOUNT NUMBER NOT FOUND<BR/>VPE8SNA16S : ACCOUNT NUMBER NOT FOUND<BR/>VPE8SNA17S : ACCOUNT NUMBER NOT FOUND<BR/>VPE8SNA18S : INVALID REQUEST ON A LOCAL ACCOUNT<BR/>VPE8SNA19S : ACTION CODE IS NOT ON FILE<BR/>VPE8SNA20S : ACTION CODE IS NOT ON FILE<BR/>VPE8SNA21S : SEVERE ERRORNO CUSTOMER SERVICE REP ASSIGNED TO OPERATOR<BR/>VPE8SNA22S : CUSTOMER SERVICE REPRESENTATIVE NO ACCESS TO APPLICATION ORG<BR/>VPE8SNA23S : LETTER APPLICATION NOT INSTALLED - LETTER VALUE NOT APPLICABLE<BR/>VPE8SNA26S : CONTROL RECORD NOT FOUND<BR/>VPE8SNA27E : FOREIGN USE INDICATOR INVALID - MUST BE 0 OR 1<BR/>VPE8SNA28E : REVIEW DATE MUST BE NUMERIC AND GREATER THAN ZEROS<BR/>VPE8SNA29E : REVIEW TIME IS INVALID<BR/>VPE8SNA30E : REVIEW TIME MUST BE NUMERIC AND GREATER THAN ZEROS<BR/>VPE8SNA31E : LETTER ORG MUST BE NUMERIC AND VALID VALUES ARE 001 TO 998<BR/>VPE8SNA32E : CARD SEQUENCE MUST BE NUMERIC<BR/>VPE8SNA33E : CARD NUMBER MUST BE NUMERIC<BR/>VPE8SNA34E : REVIEW DATE MUST BE GREATER THAN TODAY<BR/>VPE8SNA35E : REVIEW DATE IS INVALID<BR/>VPE8SNA36E : RETURN MAIL - LETTER CANNOT BE PROCESSED - ENTER SPACES<BR/>VPE8SNA37E : CARD NUMBER IS REQUIRED<BR/>VPE8SNA38E : CARD SEQUENCE IS REQUIRED<BR/>VPE8SNA39E : CARD PRIORITY MUST BE NUMERIC AND VALID VALUES ARE 0 - 3<BR/>VPE8SNA40E : CARD ACTION TYPE IS INVALID AND MUST BE NISPACE OR LOW-VAL<BR/>VPE8SNA41E : REFERRAL OPTION INVALID<BR/>VPE8SNA42E : INVALID REFERRAL REP  ORG<BR/>VPE8SNA43E : INVALID REFERRAL REP ID<BR/>VPE8SNA44E : CARD CONVERT INDICATOR MUST BE 0 OR
*/
type NonMonetaryActionUpdateV1FvEmeaStatus465 struct {
	Payload *models.FsErrorDetails
}

func (o *NonMonetaryActionUpdateV1FvEmeaStatus465) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/nonMonetaryActionUpdate][%d] nonMonetaryActionUpdateV1FvEmeaStatus465  %+v", 465, o.Payload)
}

func (o *NonMonetaryActionUpdateV1FvEmeaStatus465) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *NonMonetaryActionUpdateV1FvEmeaStatus465) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
