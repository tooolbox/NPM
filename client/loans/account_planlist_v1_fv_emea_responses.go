// Code generated by go-swagger; DO NOT EDIT.

package loans

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// AccountPlanlistV1FvEmeaReader is a Reader for the AccountPlanlistV1FvEmea structure.
type AccountPlanlistV1FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AccountPlanlistV1FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAccountPlanlistV1FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAccountPlanlistV1FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAccountPlanlistV1FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAccountPlanlistV1FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAccountPlanlistV1FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewAccountPlanlistV1FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewAccountPlanlistV1FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewAccountPlanlistV1FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewAccountPlanlistV1FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 465:
		result := NewAccountPlanlistV1FvEmeaStatus465()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAccountPlanlistV1FvEmeaOK creates a AccountPlanlistV1FvEmeaOK with default headers values
func NewAccountPlanlistV1FvEmeaOK() *AccountPlanlistV1FvEmeaOK {
	return &AccountPlanlistV1FvEmeaOK{}
}

/*AccountPlanlistV1FvEmeaOK handles this case with default header values.

successful operation
*/
type AccountPlanlistV1FvEmeaOK struct {
	Payload *models.AccountPlanlistResponse
}

func (o *AccountPlanlistV1FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountPlanlist][%d] accountPlanlistV1FvEmeaOK  %+v", 200, o.Payload)
}

func (o *AccountPlanlistV1FvEmeaOK) GetPayload() *models.AccountPlanlistResponse {
	return o.Payload
}

func (o *AccountPlanlistV1FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccountPlanlistResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountPlanlistV1FvEmeaBadRequest creates a AccountPlanlistV1FvEmeaBadRequest with default headers values
func NewAccountPlanlistV1FvEmeaBadRequest() *AccountPlanlistV1FvEmeaBadRequest {
	return &AccountPlanlistV1FvEmeaBadRequest{}
}

/*AccountPlanlistV1FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type AccountPlanlistV1FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *AccountPlanlistV1FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountPlanlist][%d] accountPlanlistV1FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *AccountPlanlistV1FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AccountPlanlistV1FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountPlanlistV1FvEmeaUnauthorized creates a AccountPlanlistV1FvEmeaUnauthorized with default headers values
func NewAccountPlanlistV1FvEmeaUnauthorized() *AccountPlanlistV1FvEmeaUnauthorized {
	return &AccountPlanlistV1FvEmeaUnauthorized{}
}

/*AccountPlanlistV1FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type AccountPlanlistV1FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *AccountPlanlistV1FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountPlanlist][%d] accountPlanlistV1FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *AccountPlanlistV1FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AccountPlanlistV1FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountPlanlistV1FvEmeaForbidden creates a AccountPlanlistV1FvEmeaForbidden with default headers values
func NewAccountPlanlistV1FvEmeaForbidden() *AccountPlanlistV1FvEmeaForbidden {
	return &AccountPlanlistV1FvEmeaForbidden{}
}

/*AccountPlanlistV1FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type AccountPlanlistV1FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *AccountPlanlistV1FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountPlanlist][%d] accountPlanlistV1FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *AccountPlanlistV1FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AccountPlanlistV1FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountPlanlistV1FvEmeaNotFound creates a AccountPlanlistV1FvEmeaNotFound with default headers values
func NewAccountPlanlistV1FvEmeaNotFound() *AccountPlanlistV1FvEmeaNotFound {
	return &AccountPlanlistV1FvEmeaNotFound{}
}

/*AccountPlanlistV1FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type AccountPlanlistV1FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *AccountPlanlistV1FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountPlanlist][%d] accountPlanlistV1FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *AccountPlanlistV1FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AccountPlanlistV1FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountPlanlistV1FvEmeaTooManyRequests creates a AccountPlanlistV1FvEmeaTooManyRequests with default headers values
func NewAccountPlanlistV1FvEmeaTooManyRequests() *AccountPlanlistV1FvEmeaTooManyRequests {
	return &AccountPlanlistV1FvEmeaTooManyRequests{}
}

/*AccountPlanlistV1FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type AccountPlanlistV1FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *AccountPlanlistV1FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountPlanlist][%d] accountPlanlistV1FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *AccountPlanlistV1FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AccountPlanlistV1FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountPlanlistV1FvEmeaStatus452 creates a AccountPlanlistV1FvEmeaStatus452 with default headers values
func NewAccountPlanlistV1FvEmeaStatus452() *AccountPlanlistV1FvEmeaStatus452 {
	return &AccountPlanlistV1FvEmeaStatus452{}
}

/*AccountPlanlistV1FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type AccountPlanlistV1FvEmeaStatus452 struct {
}

func (o *AccountPlanlistV1FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountPlanlist][%d] accountPlanlistV1FvEmeaStatus452 ", 452)
}

func (o *AccountPlanlistV1FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAccountPlanlistV1FvEmeaStatus453 creates a AccountPlanlistV1FvEmeaStatus453 with default headers values
func NewAccountPlanlistV1FvEmeaStatus453() *AccountPlanlistV1FvEmeaStatus453 {
	return &AccountPlanlistV1FvEmeaStatus453{}
}

/*AccountPlanlistV1FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type AccountPlanlistV1FvEmeaStatus453 struct {
}

func (o *AccountPlanlistV1FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountPlanlist][%d] accountPlanlistV1FvEmeaStatus453 ", 453)
}

func (o *AccountPlanlistV1FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAccountPlanlistV1FvEmeaStatus455 creates a AccountPlanlistV1FvEmeaStatus455 with default headers values
func NewAccountPlanlistV1FvEmeaStatus455() *AccountPlanlistV1FvEmeaStatus455 {
	return &AccountPlanlistV1FvEmeaStatus455{}
}

/*AccountPlanlistV1FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type AccountPlanlistV1FvEmeaStatus455 struct {
}

func (o *AccountPlanlistV1FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountPlanlist][%d] accountPlanlistV1FvEmeaStatus455 ", 455)
}

func (o *AccountPlanlistV1FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAccountPlanlistV1FvEmeaStatus465 creates a AccountPlanlistV1FvEmeaStatus465 with default headers values
func NewAccountPlanlistV1FvEmeaStatus465() *AccountPlanlistV1FvEmeaStatus465 {
	return &AccountPlanlistV1FvEmeaStatus465{}
}

/*AccountPlanlistV1FvEmeaStatus465 handles this case with default header values.

Backend Response Code and message in odsMessages field: <BR/><BR/>VPE5SZPZ1S : SERVICE COULD NOT OBTAIN STORAGE AREA<BR/>VPE5SZPZ2S : SERVICE INPUT TO INSURANCE UPD SERVICE IS AN INCORRECT LE<BR/>VPE5SZP09S : AMCR READ ERROR<BR/>VPE5SZP13S : LOGO RECORD NOT FOUNDorADD PENDING<BR/>VPE5SZPZ3S : FILE TABLE USED BY THIS SERVICE IS MISSING<BR/>VPE5SZP13S : LOGO RECORD NOT FOUNDorADD PENDING<BR/>VPE5SZP01S : ORGANIZATION NUMBER NOT FOUND<BR/>VPE5SZP02S : ACCOUNTorCARD NUMBER IS NOT NUMERIC OR EQUALS SPACES<BR/>VPE5SZP01E : FUNCTION INDICATOR NOT VALID<BR/>VPE5SZP02E : FUNCTION TYPE INVALID<BR/>VPE5SZPZ4S : ORG COULDNT DETERMINED<BR/>VPE5SZPZ5S : FILE SET COULDNT DETERMINED<BR/>VPE5SZPZ6S : FILE TABLE NOT FOUND<BR/>VPE5SZP15S : LOGO RECORD NOT FOUNDorADD PENDING<BR/>VPE5SZP05S : REQUESTED ORGANIZATION NUMBER IS NOT FOUND<BR/>VPE5SZP06S : AMBS FILE NOT OPEN<BR/>VPE5SZP07S : ACCT NOT FOUND OR ADD PENDING<BR/>VPE5SZP08S : AMPS START BROWSE ERROR<BR/>VPE5SZP01I : NO PLANS FOUND ON ACCOUNT<BR/>VPE5SZP10S : END BROWSE ERROR IN AMPS SHADOW<BR/>VPE5SZP09S : AMCR READ ERROR<BR/>VPE5SPI15S : LOGO RECORD NOT FOUNDorADD PENDING<BR/>VPE5SPI16S : AMCP RECORD NOT FOUNDorADD PENDIN
*/
type AccountPlanlistV1FvEmeaStatus465 struct {
	Payload *models.FsErrorDetails
}

func (o *AccountPlanlistV1FvEmeaStatus465) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/accountPlanlist][%d] accountPlanlistV1FvEmeaStatus465  %+v", 465, o.Payload)
}

func (o *AccountPlanlistV1FvEmeaStatus465) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *AccountPlanlistV1FvEmeaStatus465) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
