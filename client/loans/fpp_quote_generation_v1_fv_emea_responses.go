// Code generated by go-swagger; DO NOT EDIT.

package loans

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// FppQuoteGenerationV1FvEmeaReader is a Reader for the FppQuoteGenerationV1FvEmea structure.
type FppQuoteGenerationV1FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FppQuoteGenerationV1FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFppQuoteGenerationV1FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewFppQuoteGenerationV1FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewFppQuoteGenerationV1FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFppQuoteGenerationV1FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFppQuoteGenerationV1FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewFppQuoteGenerationV1FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewFppQuoteGenerationV1FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewFppQuoteGenerationV1FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewFppQuoteGenerationV1FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 465:
		result := NewFppQuoteGenerationV1FvEmeaStatus465()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewFppQuoteGenerationV1FvEmeaOK creates a FppQuoteGenerationV1FvEmeaOK with default headers values
func NewFppQuoteGenerationV1FvEmeaOK() *FppQuoteGenerationV1FvEmeaOK {
	return &FppQuoteGenerationV1FvEmeaOK{}
}

/*FppQuoteGenerationV1FvEmeaOK handles this case with default header values.

successful operation
*/
type FppQuoteGenerationV1FvEmeaOK struct {
	Payload *models.FppQuoteGenerationResponse
}

func (o *FppQuoteGenerationV1FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/fppQuoteGeneration][%d] fppQuoteGenerationV1FvEmeaOK  %+v", 200, o.Payload)
}

func (o *FppQuoteGenerationV1FvEmeaOK) GetPayload() *models.FppQuoteGenerationResponse {
	return o.Payload
}

func (o *FppQuoteGenerationV1FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FppQuoteGenerationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFppQuoteGenerationV1FvEmeaBadRequest creates a FppQuoteGenerationV1FvEmeaBadRequest with default headers values
func NewFppQuoteGenerationV1FvEmeaBadRequest() *FppQuoteGenerationV1FvEmeaBadRequest {
	return &FppQuoteGenerationV1FvEmeaBadRequest{}
}

/*FppQuoteGenerationV1FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type FppQuoteGenerationV1FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *FppQuoteGenerationV1FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/fppQuoteGeneration][%d] fppQuoteGenerationV1FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *FppQuoteGenerationV1FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *FppQuoteGenerationV1FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFppQuoteGenerationV1FvEmeaUnauthorized creates a FppQuoteGenerationV1FvEmeaUnauthorized with default headers values
func NewFppQuoteGenerationV1FvEmeaUnauthorized() *FppQuoteGenerationV1FvEmeaUnauthorized {
	return &FppQuoteGenerationV1FvEmeaUnauthorized{}
}

/*FppQuoteGenerationV1FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type FppQuoteGenerationV1FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *FppQuoteGenerationV1FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/fppQuoteGeneration][%d] fppQuoteGenerationV1FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *FppQuoteGenerationV1FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *FppQuoteGenerationV1FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFppQuoteGenerationV1FvEmeaForbidden creates a FppQuoteGenerationV1FvEmeaForbidden with default headers values
func NewFppQuoteGenerationV1FvEmeaForbidden() *FppQuoteGenerationV1FvEmeaForbidden {
	return &FppQuoteGenerationV1FvEmeaForbidden{}
}

/*FppQuoteGenerationV1FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type FppQuoteGenerationV1FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *FppQuoteGenerationV1FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/fppQuoteGeneration][%d] fppQuoteGenerationV1FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *FppQuoteGenerationV1FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *FppQuoteGenerationV1FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFppQuoteGenerationV1FvEmeaNotFound creates a FppQuoteGenerationV1FvEmeaNotFound with default headers values
func NewFppQuoteGenerationV1FvEmeaNotFound() *FppQuoteGenerationV1FvEmeaNotFound {
	return &FppQuoteGenerationV1FvEmeaNotFound{}
}

/*FppQuoteGenerationV1FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type FppQuoteGenerationV1FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *FppQuoteGenerationV1FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/fppQuoteGeneration][%d] fppQuoteGenerationV1FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *FppQuoteGenerationV1FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *FppQuoteGenerationV1FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFppQuoteGenerationV1FvEmeaTooManyRequests creates a FppQuoteGenerationV1FvEmeaTooManyRequests with default headers values
func NewFppQuoteGenerationV1FvEmeaTooManyRequests() *FppQuoteGenerationV1FvEmeaTooManyRequests {
	return &FppQuoteGenerationV1FvEmeaTooManyRequests{}
}

/*FppQuoteGenerationV1FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type FppQuoteGenerationV1FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *FppQuoteGenerationV1FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/fppQuoteGeneration][%d] fppQuoteGenerationV1FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *FppQuoteGenerationV1FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *FppQuoteGenerationV1FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFppQuoteGenerationV1FvEmeaStatus452 creates a FppQuoteGenerationV1FvEmeaStatus452 with default headers values
func NewFppQuoteGenerationV1FvEmeaStatus452() *FppQuoteGenerationV1FvEmeaStatus452 {
	return &FppQuoteGenerationV1FvEmeaStatus452{}
}

/*FppQuoteGenerationV1FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type FppQuoteGenerationV1FvEmeaStatus452 struct {
}

func (o *FppQuoteGenerationV1FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/fppQuoteGeneration][%d] fppQuoteGenerationV1FvEmeaStatus452 ", 452)
}

func (o *FppQuoteGenerationV1FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFppQuoteGenerationV1FvEmeaStatus453 creates a FppQuoteGenerationV1FvEmeaStatus453 with default headers values
func NewFppQuoteGenerationV1FvEmeaStatus453() *FppQuoteGenerationV1FvEmeaStatus453 {
	return &FppQuoteGenerationV1FvEmeaStatus453{}
}

/*FppQuoteGenerationV1FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type FppQuoteGenerationV1FvEmeaStatus453 struct {
}

func (o *FppQuoteGenerationV1FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/fppQuoteGeneration][%d] fppQuoteGenerationV1FvEmeaStatus453 ", 453)
}

func (o *FppQuoteGenerationV1FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFppQuoteGenerationV1FvEmeaStatus455 creates a FppQuoteGenerationV1FvEmeaStatus455 with default headers values
func NewFppQuoteGenerationV1FvEmeaStatus455() *FppQuoteGenerationV1FvEmeaStatus455 {
	return &FppQuoteGenerationV1FvEmeaStatus455{}
}

/*FppQuoteGenerationV1FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type FppQuoteGenerationV1FvEmeaStatus455 struct {
}

func (o *FppQuoteGenerationV1FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/fppQuoteGeneration][%d] fppQuoteGenerationV1FvEmeaStatus455 ", 455)
}

func (o *FppQuoteGenerationV1FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewFppQuoteGenerationV1FvEmeaStatus465 creates a FppQuoteGenerationV1FvEmeaStatus465 with default headers values
func NewFppQuoteGenerationV1FvEmeaStatus465() *FppQuoteGenerationV1FvEmeaStatus465 {
	return &FppQuoteGenerationV1FvEmeaStatus465{}
}

/*FppQuoteGenerationV1FvEmeaStatus465 handles this case with default header values.

Backend Response Code and message in odsMessages field: <BR/><BR/>VPE5SQT01S : SERVICE GETMAIN ERROR<BR/>VPE5SQT02S : SERVICE COULD NOT OBTAIN STORAGE AREA<BR/>VPE5SQT04S : FILE TABLE USED BY THIS SERVICE IS MISSING<BR/>VPE5SQT05S : SYSTEM UPDATE IN PROGRESS<BR/>VPE5SQT06S : OUTPUT FIELD SIZE ERROR<BR/>VPE5SQT07S : INVALID ACCOUNT NUMBER<BR/>VPE5SQT08S : INVALID ORG NUMBER<BR/>VPE5SQT09S : INVALID ELIGIBLE AMOUNT<BR/>VPE5SQT10S : INVALID FLEXIBLE PAYMENT AMOUNT<BR/>VPE5SQT11S : FLEXIBLE PAYMENT AMOUNT = 0<BR/>VPE5SQT12S : INVALID TERM FIELD<BR/>VPE5SQT13S : AMCR FILE NOT OPEN<BR/>VPE5SQT14S : AMCR SYSTEM RECORD NOT FOUND<BR/>VPE5SQT15S : AMCR FILE NOT OPEN<BR/>VPE5SQT16S : AMCR ORGANIZTION RECORD NOT FND OR ADD PENDING<BR/>VPE5SQT17S : AMCR FILE NOT OPEN<BR/>VPE5SQT18S : AMCR LOGO RECORD NOT FND OR ADD PENDING<BR/>VPE5SQT19S : AMBS FPP PLAN INVALID<BR/>VPE5SQT20S : AMBS RECORD NOT FOUND OR ADD PENDING<BR/>VPE5SQT21S : AMCP RECORD NOT FOUND OR ADD PENDING<BR/>VPE5SQT22S : AMCP READ RANDOM ERROR<BR/>VPE5SQT23S : PLAN EXPIRED<BR/>VPE5SQT24S : PLAN DATES ARE INVALID<BR/>VPE5SQT25S : FPP NOT ACTIVE ON PLAN<BR/>VPE5SQT26S : AMCR  AFTER HOURS FILE ERROR<BR/>VPE5SQT27S : AMCRA FILE READ ERROR<BR/>VPE5SQT28S : AMBS FILE NOT OPEN<BR/>VPE5SQT29S : INPUT FPP PLAN IS INVALID<BR/>VPE5SQT30S : AMCP FILE NOT OPEN<BR/>VPE5SQT31S : INVALID REMAINING TER
*/
type FppQuoteGenerationV1FvEmeaStatus465 struct {
	Payload *models.FsErrorDetails
}

func (o *FppQuoteGenerationV1FvEmeaStatus465) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/fppQuoteGeneration][%d] fppQuoteGenerationV1FvEmeaStatus465  %+v", 465, o.Payload)
}

func (o *FppQuoteGenerationV1FvEmeaStatus465) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *FppQuoteGenerationV1FvEmeaStatus465) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
