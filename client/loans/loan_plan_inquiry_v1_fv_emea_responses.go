// Code generated by go-swagger; DO NOT EDIT.

package loans

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// LoanPlanInquiryV1FvEmeaReader is a Reader for the LoanPlanInquiryV1FvEmea structure.
type LoanPlanInquiryV1FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LoanPlanInquiryV1FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLoanPlanInquiryV1FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLoanPlanInquiryV1FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewLoanPlanInquiryV1FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewLoanPlanInquiryV1FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewLoanPlanInquiryV1FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewLoanPlanInquiryV1FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewLoanPlanInquiryV1FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewLoanPlanInquiryV1FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewLoanPlanInquiryV1FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 465:
		result := NewLoanPlanInquiryV1FvEmeaStatus465()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLoanPlanInquiryV1FvEmeaOK creates a LoanPlanInquiryV1FvEmeaOK with default headers values
func NewLoanPlanInquiryV1FvEmeaOK() *LoanPlanInquiryV1FvEmeaOK {
	return &LoanPlanInquiryV1FvEmeaOK{}
}

/*LoanPlanInquiryV1FvEmeaOK handles this case with default header values.

successful operation
*/
type LoanPlanInquiryV1FvEmeaOK struct {
	Payload *models.LoanPlanInquiryResponse
}

func (o *LoanPlanInquiryV1FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loanPlanInquiry][%d] loanPlanInquiryV1FvEmeaOK  %+v", 200, o.Payload)
}

func (o *LoanPlanInquiryV1FvEmeaOK) GetPayload() *models.LoanPlanInquiryResponse {
	return o.Payload
}

func (o *LoanPlanInquiryV1FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LoanPlanInquiryResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoanPlanInquiryV1FvEmeaBadRequest creates a LoanPlanInquiryV1FvEmeaBadRequest with default headers values
func NewLoanPlanInquiryV1FvEmeaBadRequest() *LoanPlanInquiryV1FvEmeaBadRequest {
	return &LoanPlanInquiryV1FvEmeaBadRequest{}
}

/*LoanPlanInquiryV1FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type LoanPlanInquiryV1FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *LoanPlanInquiryV1FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loanPlanInquiry][%d] loanPlanInquiryV1FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *LoanPlanInquiryV1FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *LoanPlanInquiryV1FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoanPlanInquiryV1FvEmeaUnauthorized creates a LoanPlanInquiryV1FvEmeaUnauthorized with default headers values
func NewLoanPlanInquiryV1FvEmeaUnauthorized() *LoanPlanInquiryV1FvEmeaUnauthorized {
	return &LoanPlanInquiryV1FvEmeaUnauthorized{}
}

/*LoanPlanInquiryV1FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type LoanPlanInquiryV1FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *LoanPlanInquiryV1FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loanPlanInquiry][%d] loanPlanInquiryV1FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *LoanPlanInquiryV1FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *LoanPlanInquiryV1FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoanPlanInquiryV1FvEmeaForbidden creates a LoanPlanInquiryV1FvEmeaForbidden with default headers values
func NewLoanPlanInquiryV1FvEmeaForbidden() *LoanPlanInquiryV1FvEmeaForbidden {
	return &LoanPlanInquiryV1FvEmeaForbidden{}
}

/*LoanPlanInquiryV1FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type LoanPlanInquiryV1FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *LoanPlanInquiryV1FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loanPlanInquiry][%d] loanPlanInquiryV1FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *LoanPlanInquiryV1FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *LoanPlanInquiryV1FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoanPlanInquiryV1FvEmeaNotFound creates a LoanPlanInquiryV1FvEmeaNotFound with default headers values
func NewLoanPlanInquiryV1FvEmeaNotFound() *LoanPlanInquiryV1FvEmeaNotFound {
	return &LoanPlanInquiryV1FvEmeaNotFound{}
}

/*LoanPlanInquiryV1FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type LoanPlanInquiryV1FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *LoanPlanInquiryV1FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loanPlanInquiry][%d] loanPlanInquiryV1FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *LoanPlanInquiryV1FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *LoanPlanInquiryV1FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoanPlanInquiryV1FvEmeaTooManyRequests creates a LoanPlanInquiryV1FvEmeaTooManyRequests with default headers values
func NewLoanPlanInquiryV1FvEmeaTooManyRequests() *LoanPlanInquiryV1FvEmeaTooManyRequests {
	return &LoanPlanInquiryV1FvEmeaTooManyRequests{}
}

/*LoanPlanInquiryV1FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type LoanPlanInquiryV1FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *LoanPlanInquiryV1FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loanPlanInquiry][%d] loanPlanInquiryV1FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *LoanPlanInquiryV1FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *LoanPlanInquiryV1FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoanPlanInquiryV1FvEmeaStatus452 creates a LoanPlanInquiryV1FvEmeaStatus452 with default headers values
func NewLoanPlanInquiryV1FvEmeaStatus452() *LoanPlanInquiryV1FvEmeaStatus452 {
	return &LoanPlanInquiryV1FvEmeaStatus452{}
}

/*LoanPlanInquiryV1FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type LoanPlanInquiryV1FvEmeaStatus452 struct {
}

func (o *LoanPlanInquiryV1FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loanPlanInquiry][%d] loanPlanInquiryV1FvEmeaStatus452 ", 452)
}

func (o *LoanPlanInquiryV1FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLoanPlanInquiryV1FvEmeaStatus453 creates a LoanPlanInquiryV1FvEmeaStatus453 with default headers values
func NewLoanPlanInquiryV1FvEmeaStatus453() *LoanPlanInquiryV1FvEmeaStatus453 {
	return &LoanPlanInquiryV1FvEmeaStatus453{}
}

/*LoanPlanInquiryV1FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type LoanPlanInquiryV1FvEmeaStatus453 struct {
}

func (o *LoanPlanInquiryV1FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loanPlanInquiry][%d] loanPlanInquiryV1FvEmeaStatus453 ", 453)
}

func (o *LoanPlanInquiryV1FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLoanPlanInquiryV1FvEmeaStatus455 creates a LoanPlanInquiryV1FvEmeaStatus455 with default headers values
func NewLoanPlanInquiryV1FvEmeaStatus455() *LoanPlanInquiryV1FvEmeaStatus455 {
	return &LoanPlanInquiryV1FvEmeaStatus455{}
}

/*LoanPlanInquiryV1FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type LoanPlanInquiryV1FvEmeaStatus455 struct {
}

func (o *LoanPlanInquiryV1FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loanPlanInquiry][%d] loanPlanInquiryV1FvEmeaStatus455 ", 455)
}

func (o *LoanPlanInquiryV1FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLoanPlanInquiryV1FvEmeaStatus465 creates a LoanPlanInquiryV1FvEmeaStatus465 with default headers values
func NewLoanPlanInquiryV1FvEmeaStatus465() *LoanPlanInquiryV1FvEmeaStatus465 {
	return &LoanPlanInquiryV1FvEmeaStatus465{}
}

/*LoanPlanInquiryV1FvEmeaStatus465 handles this case with default header values.

Backend Response Code and message in odsMessages field: <BR/><BR/>VPL5SLO01S : SERVICE COULD NOT OBTAIN STORAGE AREA<BR/>VPL5SLO02S : SERVICE INPUT TO AR SERVICE IS AN INCORRECT LENGTH<BR/>VPL5SLO04S : FILE-TABLE USED BY THIS SERVICE IS MISSING<BR/>VPL5SLO05S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES<BR/>VPL5SLO06S : ORGANIZATION NUMBER MUST BE NUMERIC AND VALID VALUES ARE 000-998<BR/>VPL5SLO07S : VALID ACCTorCARD NUMBER MUST BE PROVIDED<BR/>VPL5SLO08S : ORGNIZATION CANNOT BE DETERMINED BY THE SYSTEM<BR/>VPL5SLO09S : REQUESTED ORG NUMBER IS NOT FOUND<BR/>VPL5SLO10S : FILE-TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPL5SLO11S : SYSTEM RECORD NOT FOUND<BR/>VPL5SLO12S : ORGANIZATION NUMBER NOT FOUND<BR/>VPL5SLO13S : ACCTorCARD NUMBER NOT FOUND ON FILE<BR/>VPL5SLO14S : RECORD NUMBER MUST BE NUMERIC<BR/>VPL5SLO15S : PLAN NUMBER MUST BE NUMERIC<BR/>VPL5SLO16S : PLAN RECORD IS NOT FOUND ON FILE<BR/>VPL5SLO17S : PLAN NUMBER IS NOT FOUND ON FILE<BR/>VPL5SLO18S : EPP CONVERSION FEE IND VALID VALUES ARE 01 OR 2<BR/>VPL5SLO19S : DISBURSEMENT FEE METHOD VALID VALUES ARE 01 OR
*/
type LoanPlanInquiryV1FvEmeaStatus465 struct {
	Payload *models.FsErrorDetails
}

func (o *LoanPlanInquiryV1FvEmeaStatus465) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/loanPlanInquiry][%d] loanPlanInquiryV1FvEmeaStatus465  %+v", 465, o.Payload)
}

func (o *LoanPlanInquiryV1FvEmeaStatus465) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *LoanPlanInquiryV1FvEmeaStatus465) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
