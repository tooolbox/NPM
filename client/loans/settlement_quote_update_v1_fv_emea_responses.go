// Code generated by go-swagger; DO NOT EDIT.

package loans

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tooolbox/firstvision/models"
)

// SettlementQuoteUpdateV1FvEmeaReader is a Reader for the SettlementQuoteUpdateV1FvEmea structure.
type SettlementQuoteUpdateV1FvEmeaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SettlementQuoteUpdateV1FvEmeaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSettlementQuoteUpdateV1FvEmeaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSettlementQuoteUpdateV1FvEmeaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSettlementQuoteUpdateV1FvEmeaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSettlementQuoteUpdateV1FvEmeaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSettlementQuoteUpdateV1FvEmeaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewSettlementQuoteUpdateV1FvEmeaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 452:
		result := NewSettlementQuoteUpdateV1FvEmeaStatus452()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 453:
		result := NewSettlementQuoteUpdateV1FvEmeaStatus453()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 455:
		result := NewSettlementQuoteUpdateV1FvEmeaStatus455()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 465:
		result := NewSettlementQuoteUpdateV1FvEmeaStatus465()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSettlementQuoteUpdateV1FvEmeaOK creates a SettlementQuoteUpdateV1FvEmeaOK with default headers values
func NewSettlementQuoteUpdateV1FvEmeaOK() *SettlementQuoteUpdateV1FvEmeaOK {
	return &SettlementQuoteUpdateV1FvEmeaOK{}
}

/*SettlementQuoteUpdateV1FvEmeaOK handles this case with default header values.

successful operation
*/
type SettlementQuoteUpdateV1FvEmeaOK struct {
	Payload *models.SettlementQuoteUpdateResponse
}

func (o *SettlementQuoteUpdateV1FvEmeaOK) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/settlementQuoteUpdate][%d] settlementQuoteUpdateV1FvEmeaOK  %+v", 200, o.Payload)
}

func (o *SettlementQuoteUpdateV1FvEmeaOK) GetPayload() *models.SettlementQuoteUpdateResponse {
	return o.Payload
}

func (o *SettlementQuoteUpdateV1FvEmeaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SettlementQuoteUpdateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSettlementQuoteUpdateV1FvEmeaBadRequest creates a SettlementQuoteUpdateV1FvEmeaBadRequest with default headers values
func NewSettlementQuoteUpdateV1FvEmeaBadRequest() *SettlementQuoteUpdateV1FvEmeaBadRequest {
	return &SettlementQuoteUpdateV1FvEmeaBadRequest{}
}

/*SettlementQuoteUpdateV1FvEmeaBadRequest handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-003 - Invalid request. This could be because of invalid data in the request or header, among other reasons.<BR/>API-Sec-004 - Invalid request. The client_assertion JWT is invalid<BR/>API-Sec-013 - The JWT has an invalid expiry. Pleases end a request with a valid JWT
*/
type SettlementQuoteUpdateV1FvEmeaBadRequest struct {
	Payload *models.FsErrorDetails
}

func (o *SettlementQuoteUpdateV1FvEmeaBadRequest) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/settlementQuoteUpdate][%d] settlementQuoteUpdateV1FvEmeaBadRequest  %+v", 400, o.Payload)
}

func (o *SettlementQuoteUpdateV1FvEmeaBadRequest) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *SettlementQuoteUpdateV1FvEmeaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSettlementQuoteUpdateV1FvEmeaUnauthorized creates a SettlementQuoteUpdateV1FvEmeaUnauthorized with default headers values
func NewSettlementQuoteUpdateV1FvEmeaUnauthorized() *SettlementQuoteUpdateV1FvEmeaUnauthorized {
	return &SettlementQuoteUpdateV1FvEmeaUnauthorized{}
}

/*SettlementQuoteUpdateV1FvEmeaUnauthorized handles this case with default header values.

Unauthorized: Authorization failed due to missing or invalid credentials. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-001 - The auth header has invalid values. Please try with valid values<BR/>API-Sec-002 - The client id provided is invalid. Please try with valid client id<BR/>API-Sec-007 - The access token is invalid. It may have expired, or maybe incorrect
*/
type SettlementQuoteUpdateV1FvEmeaUnauthorized struct {
	Payload *models.FsErrorDetails
}

func (o *SettlementQuoteUpdateV1FvEmeaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/settlementQuoteUpdate][%d] settlementQuoteUpdateV1FvEmeaUnauthorized  %+v", 401, o.Payload)
}

func (o *SettlementQuoteUpdateV1FvEmeaUnauthorized) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *SettlementQuoteUpdateV1FvEmeaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSettlementQuoteUpdateV1FvEmeaForbidden creates a SettlementQuoteUpdateV1FvEmeaForbidden with default headers values
func NewSettlementQuoteUpdateV1FvEmeaForbidden() *SettlementQuoteUpdateV1FvEmeaForbidden {
	return &SettlementQuoteUpdateV1FvEmeaForbidden{}
}

/*SettlementQuoteUpdateV1FvEmeaForbidden handles this case with default header values.

Forbidden: Insufficient access for requested operation. <BR/>Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-006 - Replay attack detected. Please try again with valid data<BR/>API-Sec-008 - Mismatch in scope. The access token does not have the permission to access this resource
*/
type SettlementQuoteUpdateV1FvEmeaForbidden struct {
	Payload *models.FsErrorDetails
}

func (o *SettlementQuoteUpdateV1FvEmeaForbidden) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/settlementQuoteUpdate][%d] settlementQuoteUpdateV1FvEmeaForbidden  %+v", 403, o.Payload)
}

func (o *SettlementQuoteUpdateV1FvEmeaForbidden) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *SettlementQuoteUpdateV1FvEmeaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSettlementQuoteUpdateV1FvEmeaNotFound creates a SettlementQuoteUpdateV1FvEmeaNotFound with default headers values
func NewSettlementQuoteUpdateV1FvEmeaNotFound() *SettlementQuoteUpdateV1FvEmeaNotFound {
	return &SettlementQuoteUpdateV1FvEmeaNotFound{}
}

/*SettlementQuoteUpdateV1FvEmeaNotFound handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-005 - Resource not found
*/
type SettlementQuoteUpdateV1FvEmeaNotFound struct {
	Payload *models.FsErrorDetails
}

func (o *SettlementQuoteUpdateV1FvEmeaNotFound) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/settlementQuoteUpdate][%d] settlementQuoteUpdateV1FvEmeaNotFound  %+v", 404, o.Payload)
}

func (o *SettlementQuoteUpdateV1FvEmeaNotFound) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *SettlementQuoteUpdateV1FvEmeaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSettlementQuoteUpdateV1FvEmeaTooManyRequests creates a SettlementQuoteUpdateV1FvEmeaTooManyRequests with default headers values
func NewSettlementQuoteUpdateV1FvEmeaTooManyRequests() *SettlementQuoteUpdateV1FvEmeaTooManyRequests {
	return &SettlementQuoteUpdateV1FvEmeaTooManyRequests{}
}

/*SettlementQuoteUpdateV1FvEmeaTooManyRequests handles this case with default header values.

Below are the error codes you can expect when connecting over internet:<BR/><BR/>API-Sec-009 - You have exceeded the App level quota<BR/>API-Sec-010 - You have exceeded the Developer level quota<BR/>API-Sec-011 - You have exceeded the Product level quota<BR/>API-Sec-012 - Too many requests for this API. Please try after sometime
*/
type SettlementQuoteUpdateV1FvEmeaTooManyRequests struct {
	Payload *models.FsErrorDetails
}

func (o *SettlementQuoteUpdateV1FvEmeaTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/settlementQuoteUpdate][%d] settlementQuoteUpdateV1FvEmeaTooManyRequests  %+v", 429, o.Payload)
}

func (o *SettlementQuoteUpdateV1FvEmeaTooManyRequests) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *SettlementQuoteUpdateV1FvEmeaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSettlementQuoteUpdateV1FvEmeaStatus452 creates a SettlementQuoteUpdateV1FvEmeaStatus452 with default headers values
func NewSettlementQuoteUpdateV1FvEmeaStatus452() *SettlementQuoteUpdateV1FvEmeaStatus452 {
	return &SettlementQuoteUpdateV1FvEmeaStatus452{}
}

/*SettlementQuoteUpdateV1FvEmeaStatus452 handles this case with default header values.

System Exception: Internal processes not related to client interaction with application are the cause of the failure
*/
type SettlementQuoteUpdateV1FvEmeaStatus452 struct {
}

func (o *SettlementQuoteUpdateV1FvEmeaStatus452) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/settlementQuoteUpdate][%d] settlementQuoteUpdateV1FvEmeaStatus452 ", 452)
}

func (o *SettlementQuoteUpdateV1FvEmeaStatus452) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSettlementQuoteUpdateV1FvEmeaStatus453 creates a SettlementQuoteUpdateV1FvEmeaStatus453 with default headers values
func NewSettlementQuoteUpdateV1FvEmeaStatus453() *SettlementQuoteUpdateV1FvEmeaStatus453 {
	return &SettlementQuoteUpdateV1FvEmeaStatus453{}
}

/*SettlementQuoteUpdateV1FvEmeaStatus453 handles this case with default header values.

Validation Exception: The request failed validation, modify the request and resubmit
*/
type SettlementQuoteUpdateV1FvEmeaStatus453 struct {
}

func (o *SettlementQuoteUpdateV1FvEmeaStatus453) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/settlementQuoteUpdate][%d] settlementQuoteUpdateV1FvEmeaStatus453 ", 453)
}

func (o *SettlementQuoteUpdateV1FvEmeaStatus453) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSettlementQuoteUpdateV1FvEmeaStatus455 creates a SettlementQuoteUpdateV1FvEmeaStatus455 with default headers values
func NewSettlementQuoteUpdateV1FvEmeaStatus455() *SettlementQuoteUpdateV1FvEmeaStatus455 {
	return &SettlementQuoteUpdateV1FvEmeaStatus455{}
}

/*SettlementQuoteUpdateV1FvEmeaStatus455 handles this case with default header values.

ODS Error Exception: ODS returned a message with transaction status ERROR
*/
type SettlementQuoteUpdateV1FvEmeaStatus455 struct {
}

func (o *SettlementQuoteUpdateV1FvEmeaStatus455) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/settlementQuoteUpdate][%d] settlementQuoteUpdateV1FvEmeaStatus455 ", 455)
}

func (o *SettlementQuoteUpdateV1FvEmeaStatus455) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSettlementQuoteUpdateV1FvEmeaStatus465 creates a SettlementQuoteUpdateV1FvEmeaStatus465 with default headers values
func NewSettlementQuoteUpdateV1FvEmeaStatus465() *SettlementQuoteUpdateV1FvEmeaStatus465 {
	return &SettlementQuoteUpdateV1FvEmeaStatus465{}
}

/*SettlementQuoteUpdateV1FvEmeaStatus465 handles this case with default header values.

Backend Response Code and message in odsMessages field: <BR/><BR/>VPL5SAQZ1S : SERVICE COULD NOT OBTAIN STORAGE AREA<BR/>VPL5SAQZ2S : SERVICE INPUT TO ACCT STTLMNT QUOTE SVC IS AN INCORRECT LENGTH<BR/>VPL5SAQZ4S : FILE TABLE USED BY THIS SERVICE IS NOT FOUND<BR/>VPL5SAQ01S : APPLICATION IN NO-PROCESSING STATUS RE-TRY LATER<BR/>VPL5SAQ11S : PAYOFF DATE SHOULD NOT BE LESS THAN CURRENT PROCESSIN DATE<BR/>VPL5SAQ12S : PAYOFF DATE SHOULD NOT > THAN 60 DAYS FROM TODAYS  DATE<BR/>VPL5SAQ07S : START ITEM REQUIRED WITH SCROLL KEY N OR P<BR/>VPL5SAQ08S : SCROLL KEY MUST BE N P OR SPACE<BR/>VPL5SAQ04S : ORGANIZATION NUMBER MUST BE NUMERIC AND VALID VALUES ARE 000-998<BR/>VPL5SAQ05S : ACCOUNT OR CARD NUMBER MISSING OR INVALID<BR/>VPL5SAQ34E : INVALID FOREIGN USE FLAGED<BR/>VPL5SAQ09E : PAYOFF DATE MUST BE NUMERIC<BR/>VPL5SAQ10S : SETTLEMENT QUOTE MUST BE P W OR C<BR/>VPL5SAQ02S : ORGANIZATION COULD NOT BE DETERMINED<BR/>VPL5SAQ03S : REQUESTED ORGANIZATION NUMBER IS NOT FOUND<BR/>VPL5SAQZ5S : APPLICATION IN NO-PROCESSING STATUS RE-TRY IN A FEW MINUTES<BR/>VPL5SPQ63E : SYSTEM CONTROL AMCR NOT FOUND<BR/>VPL5SAQZCS : ORGANIZATION NOT FOUND OR ORGANIZATION IS PENDING ADD<BR/>VPL5SAQ80I : NO FOREIGN ORG FOUND IN ORG RECORD<BR/>VPL5SAQ22S : FOREIGN ORGANIZATION RECORD NOT FOUND<BR/>VPL5SAQ21S : INSTALLMENT NOT ACTIVE AT THE ORG LEVEL<BR/>VPL5SAQ32S : CANCEL REQUEST IS INVALID WHEN QUOTE IND IS NOT P W OR S<BR/>VPL5SAQ37E : LOGO RECORD NOT FOUND<BR/>VPL5SAQ38E : AMCR FILE READ ERROR<BR/>VPL5SAQZBS : LOGO FILE UNAVAILABLE<BR/>VPL5SAQ26S : INSTALLMENT NOT ACTIVE AT THE LOGO LEVEL<BR/>VPL5SAQ33S : PAYOFF QUOTE NOT ALLOWED<BR/>VPL5SAQ27S : ACCESS PROBLEM ON PLAN SEGMENT<BR/>VPL5SAQ39I : MEMO NOTES NOT UPDATED<BR/>VPL5SAQZAS : ACCOUNT NOT FOUND<BR/>VPL5SAQ23S : ACCOUNT NOT ACTIVE<BR/>VPL5SAQZ9S : ACCOUNT FILE UNAVAILABLE<BR/>VPL5SAQ31S : PROBLEM ACCESSING PLAN SEGMENT SETTLEMENT DATA<BR/>VPL5SAQ41S : ONE OF PLAN IS IMBALANCE - CAN NOT CALCULATE QUOTE<BR/>VPL5SAQ42S : ACCOUNT IN TRANSFER STATUS - CAN NOT CALCULATE QUOTE<BR/>VPL5SAQ43S : ACCT IS CHARGED OFF - CAN NOT CALCULATE QUOTE<BR/>VPL5SAQ44S : ONE PLAN HAS AMOUNT IN DISPUTE- CAN NOT CALCULATE ACCOUNT QUOTE<BR/>VPL5SAQ28S : FAILURE TO INVOKE PLAN QUOTE SERVIC
*/
type SettlementQuoteUpdateV1FvEmeaStatus465 struct {
	Payload *models.FsErrorDetails
}

func (o *SettlementQuoteUpdateV1FvEmeaStatus465) Error() string {
	return fmt.Sprintf("[POST /fv_emea/v1/settlementQuoteUpdate][%d] settlementQuoteUpdateV1FvEmeaStatus465  %+v", 465, o.Payload)
}

func (o *SettlementQuoteUpdateV1FvEmeaStatus465) GetPayload() *models.FsErrorDetails {
	return o.Payload
}

func (o *SettlementQuoteUpdateV1FvEmeaStatus465) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FsErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
