// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// EppValidationResponse epp validation response
//
// swagger:model EppValidationResponse
type EppValidationResponse struct {

	//  Max length = 27, Keys for scrolling logic. Last key values will be populated by the service and this value has to be provided in the input to scroll for next or previous page in the subsequent calls.
	AmosAmxtKey string `json:"amosAmxtKey,omitempty"`

	//  Max length = 22, Organization Number: Three digit Identification number of the organization.  Valid values are 001 - 998. Organization number must be on file.
	AmssAmslOrgAcct string `json:"amssAmslOrgAcct,omitempty"`

	//  Max length = 4, Record Number.
	AmssAmslRecNbr string `json:"amssAmslRecNbr,omitempty"`

	//  Max length = 1, Record Type: Part of the last key value and it denotes the type of record in small/large statements file. (For e.g. Recap Record, Insurance Record, Plan Record, Transaction Record, Annual Statement Record)
	AmssAmslRecType string `json:"amssAmslRecType,omitempty"`

	//  Max length = 7, Keys for scrolling logic. Last key values will be populated by the service and this value has to be provided in the input to scroll for next or previous page in the subsequent calls.
	AmssAmslStmtIDCode string `json:"amssAmslStmtIdCode,omitempty"`

	// common
	Common *Header `json:"common,omitempty"`

	//  Max length = 40, Plan description from plan master.
	EppPlanDesc string `json:"eppPlanDesc,omitempty"`

	//  Max length = 5, EPP Plan Number
	EppPlanNbr string `json:"eppPlanNbr,omitempty"`

	//  Max length = 17, Fixed Amount per term
	FixedAmt string `json:"fixedAmt,omitempty"`

	//  Max length = 17, Total Interest amount.
	IntAmt string `json:"intAmt,omitempty"`

	//  Max length = 7, Interest Rate
	IntRate string `json:"intRate,omitempty"`

	//  Max length = 1, Interest Rate Override Flag Y - indicates Override allowed N - indicates Override not allowed
	IntRateOvrdFlag string `json:"intRateOvrdFlag,omitempty"`

	//  Max length = 17, Loan Amount
	LoanAmt string `json:"loanAmt,omitempty"`

	//  Max length = 6, Authorisation code.
	MtAuthCode string `json:"mtAuthCode,omitempty"`

	//  Max length = 40, Transaction description
	MtDesc string `json:"mtDesc,omitempty"`

	// Format: YYYYMMDD. Effective date
	MtEffDate string `json:"mtEffDate,omitempty"`

	//  Max length = 1, EPP indicator
	MtEppConvInd string `json:"mtEppConvInd,omitempty"`

	//  Max length = 3, 01 or 43 or 601 for sales transaction
	MtLogicMod string `json:"mtLogicMod,omitempty"`

	//  Max length = 4, Merchant Organization Number
	MtMerchantOrg string `json:"mtMerchantOrg,omitempty"`

	//  Max length = 9, Merchant Store
	MtMerchantStore string `json:"mtMerchantStore,omitempty"`

	//  Max length = 5, Sales Transaction Plan
	MtPlan string `json:"mtPlan,omitempty"`

	// Format: YYYYMMDD. Posting date
	MtPostingDate string `json:"mtPostingDate,omitempty"`

	//  Max length = 23, Reference number
	MtRefNbr string `json:"mtRefNbr,omitempty"`

	//  Max length = 9, Store number
	MtSiNbr string `json:"mtSiNbr,omitempty"`

	//  Max length = 5, Transaction code
	MtTxnCode string `json:"mtTxnCode,omitempty"`

	//  Max length = 3, Number of table entries in schedule table
	NbrOfTerms string `json:"nbrOfTerms,omitempty"`

	//  Max length = 40, Credit Plan Description: Description of the Credit Plan.
	PlanDesc string `json:"planDesc,omitempty"`

	//  Max length = 5, Transaction Plan Number. Identifies the plan number of the Credit Plan Master record associated with the Credit Plan Segment record.
	PlanNbr string `json:"planNbr,omitempty"`

	//  Max length = 17, Principal Amount
	PrinAmt string `json:"prinAmt,omitempty"`

	// Schedule table (array) of 120 entries
	SchTable []*SchTableForEppValidation1 `json:"schTable"`

	//  Max length = 3, Loan Term
	Term string `json:"term,omitempty"`

	//  Max length = 3, Maximum Loan Term
	TermMax string `json:"termMax,omitempty"`

	//  Max length = 3, Minimum Loan Term
	TermMin string `json:"termMin,omitempty"`

	//  Max length = 1, Term Override Flag Y - indicates Override allowed N - indicates Override not allowed
	TermOvrdFlag string `json:"termOvrdFlag,omitempty"`

	//  Max length = 17, Transaction Amount
	TxnAmt string `json:"txnAmt,omitempty"`
}

// Validate validates this epp validation response
func (m *EppValidationResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCommon(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSchTable(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *EppValidationResponse) validateCommon(formats strfmt.Registry) error {

	if swag.IsZero(m.Common) { // not required
		return nil
	}

	if m.Common != nil {
		if err := m.Common.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("common")
			}
			return err
		}
	}

	return nil
}

func (m *EppValidationResponse) validateSchTable(formats strfmt.Registry) error {

	if swag.IsZero(m.SchTable) { // not required
		return nil
	}

	for i := 0; i < len(m.SchTable); i++ {
		if swag.IsZero(m.SchTable[i]) { // not required
			continue
		}

		if m.SchTable[i] != nil {
			if err := m.SchTable[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("schTable" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *EppValidationResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EppValidationResponse) UnmarshalBinary(b []byte) error {
	var res EppValidationResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
