// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InsuranceStatusUpdateRequest insurance status update request
//
// swagger:model InsuranceStatusUpdateRequest
type InsuranceStatusUpdateRequest struct {

	//  Max length = 19, Account Number: Number of Customer's account. Must be numeric and greater than zero. This can be either Account number or Card number.
	// Max Length: 19
	// Min Length: 0
	Account *string `json:"account,omitempty"`

	//  Max length = 1, Insurance Cancellation Code. Values are: Blank=Not cancelled (Default) A=reached expiration age B=due to block code C=charged off D=past due exceeds nbr of cycles F=fiche nr required but not assigned. Nr of cancellation days reached G=date of birth(DOB) not meeting enrol. age req. I=DOB not meeting min. age req. N=loan settlement P=credit line or account closed R=request of cust. T=max. AMT at risk exceeds max. coverage U=at request of underwriter X=other J=INS table not found M=BC cancels INS
	// Max Length: 1
	// Min Length: 0
	CanReasonCode *string `json:"canReasonCode,omitempty"`

	// common
	Common *Header `json:"common,omitempty"`

	//  Max length = 1, Dual Indicator: Dual Account Flag of account.Valid values are: L = Local account (default) F = Foreign account If dual currency is not being used or if the field is left blank, the value is L.
	// Max Length: 1
	// Min Length: 0
	DualInd *string `json:"dualInd,omitempty"`

	//  Max length = 1, Insurance Channel: Identifies the method of application for insurance.  Values are:  P - Postal  S - Store  I - Internet  T - Telephone
	// Max Length: 1
	// Min Length: 0
	InsChannel *string `json:"insChannel,omitempty"`

	//  Max length = 18, Insurance Policy Reference Number: unique individual policy number for non-credit insurance products.
	// Max Length: 18
	// Min Length: 0
	InsPolicyRefNbr *string `json:"insPolicyRefNbr,omitempty"`

	//  Max length = 2, Insurance product code as defined on the Insurance table.
	// Max Length: 2
	// Min Length: 0
	InsProdCode *string `json:"insProdCode,omitempty"`

	// Format: YYYYMMDD. Insurance Sales Date: date when the customer has contracted the insurance.
	InsSalesDate string `json:"insSalesDate,omitempty"`

	//  Max length = 1, Insurance Status. Values are: 'F' - Insurance product is in force. 'I' - Insurance product is inactive due to a user-defined condition. 'C' - Insurance product is cancelled. 'S' - Insurance product is suspended due to delinquency.  Space - Insurance is not in use.
	// Max Length: 1
	// Min Length: 0
	InsStatusCode *string `json:"insStatusCode,omitempty"`
}

// Validate validates this insurance status update request
func (m *InsuranceStatusUpdateRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCanReasonCode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCommon(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDualInd(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateInsChannel(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateInsPolicyRefNbr(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateInsProdCode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateInsStatusCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *InsuranceStatusUpdateRequest) validateAccount(formats strfmt.Registry) error {

	if swag.IsZero(m.Account) { // not required
		return nil
	}

	if err := validate.MinLength("account", "body", string(*m.Account), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("account", "body", string(*m.Account), 19); err != nil {
		return err
	}

	return nil
}

func (m *InsuranceStatusUpdateRequest) validateCanReasonCode(formats strfmt.Registry) error {

	if swag.IsZero(m.CanReasonCode) { // not required
		return nil
	}

	if err := validate.MinLength("canReasonCode", "body", string(*m.CanReasonCode), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("canReasonCode", "body", string(*m.CanReasonCode), 1); err != nil {
		return err
	}

	return nil
}

func (m *InsuranceStatusUpdateRequest) validateCommon(formats strfmt.Registry) error {

	if swag.IsZero(m.Common) { // not required
		return nil
	}

	if m.Common != nil {
		if err := m.Common.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("common")
			}
			return err
		}
	}

	return nil
}

func (m *InsuranceStatusUpdateRequest) validateDualInd(formats strfmt.Registry) error {

	if swag.IsZero(m.DualInd) { // not required
		return nil
	}

	if err := validate.MinLength("dualInd", "body", string(*m.DualInd), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("dualInd", "body", string(*m.DualInd), 1); err != nil {
		return err
	}

	return nil
}

func (m *InsuranceStatusUpdateRequest) validateInsChannel(formats strfmt.Registry) error {

	if swag.IsZero(m.InsChannel) { // not required
		return nil
	}

	if err := validate.MinLength("insChannel", "body", string(*m.InsChannel), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("insChannel", "body", string(*m.InsChannel), 1); err != nil {
		return err
	}

	return nil
}

func (m *InsuranceStatusUpdateRequest) validateInsPolicyRefNbr(formats strfmt.Registry) error {

	if swag.IsZero(m.InsPolicyRefNbr) { // not required
		return nil
	}

	if err := validate.MinLength("insPolicyRefNbr", "body", string(*m.InsPolicyRefNbr), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("insPolicyRefNbr", "body", string(*m.InsPolicyRefNbr), 18); err != nil {
		return err
	}

	return nil
}

func (m *InsuranceStatusUpdateRequest) validateInsProdCode(formats strfmt.Registry) error {

	if swag.IsZero(m.InsProdCode) { // not required
		return nil
	}

	if err := validate.MinLength("insProdCode", "body", string(*m.InsProdCode), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("insProdCode", "body", string(*m.InsProdCode), 2); err != nil {
		return err
	}

	return nil
}

func (m *InsuranceStatusUpdateRequest) validateInsStatusCode(formats strfmt.Registry) error {

	if swag.IsZero(m.InsStatusCode) { // not required
		return nil
	}

	if err := validate.MinLength("insStatusCode", "body", string(*m.InsStatusCode), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("insStatusCode", "body", string(*m.InsStatusCode), 1); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *InsuranceStatusUpdateRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InsuranceStatusUpdateRequest) UnmarshalBinary(b []byte) error {
	var res InsuranceStatusUpdateRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
