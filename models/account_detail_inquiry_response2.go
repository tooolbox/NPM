// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AccountDetailInquiryResponse2 account detail inquiry response2
//
// swagger:model AccountDetailInquiryResponse2
type AccountDetailInquiryResponse2 struct {

	//  Max length = 19, Account Number: Identification Number of Customer's account.
	Account string `json:"account,omitempty"`

	//  Max length = 1, Amount Limit Check: Code that indicates whether the account-level threshold limit check is performed during authorizations.  Values are: 0 - Do not perform checks at the account level (Default)  1 - Perform checks at the account level.
	AcctLimitChk string `json:"acctLimitChk,omitempty"`

	//  Max length = 1, Account Type: Code that identifies the type of account processed by the logo. Values are: B = Bad checks/NSF checks C = COD accounts D = Debit card L = Layaway P = Profit and loss R = Revolving, which is also referred to as retail or private label (Default) X = Bankcard Y = Bankcard-prepaid NOTE: Values D, X and Y are valid types of bankcard accounts.
	AcctType string `json:"acctType,omitempty"`

	//  Max length = 17, Customer-nominated amount or percentage based on the ACH-AMT-PCT value.  Where ACH-AMT-PCT field is a value of '1' (amount option), this field should contain an amount. The location of the decimal is determined by the currency NOD. For example, if the currency NOD is 2, enter $100.00 as 00000000000010000.
	AchAmt string `json:"achAmt,omitempty"`

	//  Max length = 1, Flag that indicates whether the direct debit amount is a fixed amount, the full account balance, a percentage of the account balance, or not used. Values are:  0 - Not used.  1 - Fixed payment amount.  2 - Percentage of account (cycle-ending) balance.  3 - Full account (cycle-ending) balance.  4 - Full Non-BNPL Balance payer.        9 - Percentage of account (cycle-ending) balance, excluding overlimit amount
	AchAmtPct string `json:"achAmtPct,omitempty"`

	// Format: YYYYDDD. Date on which direct debit processing expires for the account. A value of zeros means the DD does not expire
	AchPmtExprDate string `json:"achPmtExprDate,omitempty"`

	// Format: YYYYDDD. Customer-nominated payment date.
	AchStartDate string `json:"achStartDate,omitempty"`

	//  Max length = 20, Activation phone number  from Logo
	ActivatePhoneNbr string `json:"activatePhoneNbr,omitempty"`

	//  Max length = 2, Add status: Status of the account.  Values are:  00 thru 49 - Add Pending  99  - Add Complete
	AddStatus string `json:"addStatus,omitempty"`

	//  Max length = 2, Adverse Action 1: User-defined code that indicates the reason used to decline the customer's request for credit.
	AdverseActn1 string `json:"adverseActn1,omitempty"`

	//  Max length = 2, Adverse Action 2: User-defined code that indicates the reason used to decline the customer's request for credit.
	AdverseActn2 string `json:"adverseActn2,omitempty"`

	//  Max length = 2, Adverse Action 3: User-defined code that indicates the reason used to decline the customer's request for credit.
	AdverseActn3 string `json:"adverseActn3,omitempty"`

	//  Max length = 19, Alternate Customer Number: Number that identifies the alternate (temporary) Customer Name/Address record containing an alternate address for statements.
	AltCustNbr string `json:"altCustNbr,omitempty"`

	//  Max length = 17, Amount of Charge Off.
	AmtCgoff string `json:"amtCgoff,omitempty"`

	//  Max length = 17, Amount of cycle-to-date cash.
	AmtCtdCash string `json:"amtCtdCash,omitempty"`

	//  Max length = 9, Amount cycle to date Collection  fees
	AmtCtdCollFees string `json:"amtCtdCollFees,omitempty"`

	//  Max length = 9, Amount cycle to date Late fees
	AmtCtdLateFees string `json:"amtCtdLateFees,omitempty"`

	//  Max length = 9, Amount cycle to date membership fees
	AmtCtdMembFees string `json:"amtCtdMembFees,omitempty"`

	//  Max length = 9, Amount cycle to date NSF
	AmtCtdNsf string `json:"amtCtdNsf,omitempty"`

	//  Max length = 9, Amount cycle to date NSF fees
	AmtCtdNsfFees string `json:"amtCtdNsfFees,omitempty"`

	//  Max length = 9, Amount cycle to date over limit  fees
	AmtCtdOvlmFees string `json:"amtCtdOvlmFees,omitempty"`

	//  Max length = 17, Total amount of cycle-to-date purchases.
	AmtCtdPurchases string `json:"amtCtdPurchases,omitempty"`

	//  Max length = 9, Amount cycle to date recovery fees
	AmtCtdRecovFees string `json:"amtCtdRecovFees,omitempty"`

	//  Max length = 9, Amount cycle to date returns
	AmtCtdReturns string `json:"amtCtdReturns,omitempty"`

	//  Max length = 17, Amount of disputed items.
	AmtDispuItems string `json:"amtDispuItems,omitempty"`

	//  Max length = 17, Amount of outstanding memo credits for the account.
	AmtMemoCr string `json:"amtMemoCr,omitempty"`

	//  Max length = 17, Amount of outstanding memo debits for the account.
	AmtMemoDb string `json:"amtMemoDb,omitempty"`

	//  Max length = 17, Amount of year-to-date cash.
	AmtPytdCash string `json:"amtPytdCash,omitempty"`

	//  Max length = 17, Amount of year-to-date cash.
	AmtYtdCash string `json:"amtYtdCash,omitempty"`

	//  Max length = 17, Amount of year-to-date purchases.
	AmtYtdPurchases string `json:"amtYtdPurchases,omitempty"`

	//  Max length = 5, Application Credit Score: score assigned by CDM (or another application processing system, if used).
	ApplCrScore string `json:"applCrScore,omitempty"`

	//  Max length = 20, Credit application user field. User-defined information about the account holder's credit application
	ApplUser3 string `json:"applUser3,omitempty"`

	// Group Occurrence. There are 4  occurences.
	AtmOtcQsiRtlAccum []*AtmOtcQsiRtlAccum2ForAccountDetailInquiry2 `json:"atmOtcQsiRtlAccum"`

	//  Max length = 2, This field indicates whether ATM PACKAGE Feature is active on Account. Valid values are  00  thru 99.  0 or 99 -  ATM Package Feature is  not active on Account. 01 thru 98- ATM Package Feature is  active on Account.
	AtmPckgCtr string `json:"atmPckgCtr,omitempty"`

	//  Max length = 9, Authorization Amount Cash Amount: Maximum amount in monetary units and subunits of ATM cash authorizations allowed for the frequency defined in the <em>freq</em> field.
	AuthAtmCashAmt string `json:"authAtmCashAmt,omitempty"`

	//  Max length = 5, Authorization Amount Cash Number: Maximum number of ATM cash authorizations allowed for the frequency defined in the <em>freq</em> field.
	AuthAtmCashNbr string `json:"authAtmCashNbr,omitempty"`

	//  Max length = 9, Authorization OTC Cash Amount: Maximum amount in monetary units and subunits of over-the-counter (OTC) cash authorizations allowed for the frequency defined in the <em>freq</em> field.
	AuthOtcCashAmt string `json:"authOtcCashAmt,omitempty"`

	//  Max length = 5, Authorization OTC Cash Number: Maximum number of OTC authorizations allowed for the frequency defined in the <em>freq</em> field.
	AuthOtcCashNbr string `json:"authOtcCashNbr,omitempty"`

	//  Max length = 9, Authorization Quasi Cash Amount: Maximum amount in monetary units and subunits of quasi cash authorizations allowed for the frequency defined in the <em>freq</em> field.
	AuthQuasiCashAmt string `json:"authQuasiCashAmt,omitempty"`

	//  Max length = 5, Authorization Quasi Cash Number: Maximum number of quasi cash authorizations allowed for the frequency defined in the <em>freq</em> field.
	AuthQuasiCashNbr string `json:"authQuasiCashNbr,omitempty"`

	//  Max length = 9, Authorization Retail Cash Amount: Maximum amount in monetary units and subunits of Retail authorizations allowed for the frequency defined in the <em>freq</em> field.
	AuthRtlAmt string `json:"authRtlAmt,omitempty"`

	//  Max length = 5, Authorization Retail Cash Number: Maximum number of  Retail authorizations allowed for the frequency defined in the <em>freq</em> field.
	AuthRtlNbr string `json:"authRtlNbr,omitempty"`

	//  Max length = 9, Authorization Total Cash Amount: Maximum amount in monetary units and subunits of total cash authorizations(ATM, OTC or quasi) allowed for the frequency defined in the <em>freq</em> field.
	AuthTotalCashAmt string `json:"authTotalCashAmt,omitempty"`

	//  Max length = 5, Authorization Total Cash Number: Maximum number of  cash authorizations(ATM, OTC or quasi) allowed for the frequency defined in the <em>freq</em> field.
	AuthTotalCashNbr string `json:"authTotalCashNbr,omitempty"`

	//  Max length = 1, This field indicates the ATM transaction channel selection for authorization alert. Valid Values are 0,1 0 - ATM channel selection is not active 1 - ATM channel selection is active
	AuthTxtChnlAtm string `json:"authTxtChnlAtm,omitempty"`

	//  Max length = 1, This field indicates the E-COM transaction channel selection for authorization alert. Valid Values are 0,1. 0 - ECOM channel selection is not active 1 - ECOM channel selection is active
	AuthTxtChnlEcom string `json:"authTxtChnlEcom,omitempty"`

	//  Max length = 1, This field indicates the MOTO transaction channel selection for authorization alert. Valid Values are 0,1. 0 - MOTO channel selection is not active 1 - MOTO channel selection is active
	AuthTxtChnlMoto string `json:"authTxtChnlMoto,omitempty"`

	//  Max length = 1, This field indicates the POS transaction channel selection for authorization alert. Valid values are 0 and 1 0 - POS channel selection is not active 1 - POS channel selection is active
	AuthTxtChnlPos string `json:"authTxtChnlPos,omitempty"`

	//  Max length = 1, Authorization Text message switch. This switch is primary field for turning on the authorization alert at account level. Valid Values are 0,1,2,3 0 - OFF 1 - SMS  2 - EMAIL 3 - BOTH
	AuthTxtMsg string `json:"authTxtMsg,omitempty"`

	//  Max length = 9, Authorization Text message threshold amount in whole monetary units. Examples for 10 Pounds - Front end system need to pass 10 in this field.
	AuthTxtMsgAmt string `json:"authTxtMsgAmt,omitempty"`

	//  Max length = 17, Current open-to-buy amount of the account.
	AvailCredit string `json:"availCredit,omitempty"`

	//  Max length = 17, Direct Debit Bank account number of the account.
	BankAcct string `json:"bankAcct,omitempty"`

	//  Max length = 1, DD payment Type: Code that indicates the type of account to which the direct debit is sent.  Values are: D = Demand deposit account (checking) S = Savings account.
	BankAcctType string `json:"bankAcctType,omitempty"`

	//  Max length = 10, Payment Automated Clearing House routing number: Dual-use field that accepts a nine-digit routing/transit number (ACH format) or a ten-digit Bank ID (non-ACH format) to identify the financial institution to receive direct debit transactions for account payments.
	BankSortCd string `json:"bankSortCd,omitempty"`

	//  Max length = 10, Payment Automated Clearing House routing number: Dual-use field that accepts a nine-digit routing/transit number (ACH format) or a ten-digit Bank ID (non-ACH format) to identify the financial institution to receive direct debit transactions for account payments.
	BankSortCdCh string `json:"bankSortCdCh,omitempty"`

	//  Max length = 1, BGC Generation: Code that indicates whether a bank giro credit (BGC) statement must be generated for the account.  Values are:  N - BGC statement generation is not required (Default)  Y - BGC statement generation is required
	BcgGeneration string `json:"bcgGeneration,omitempty"`

	//  Max length = 1, Billing Acct Indicator: Code that indicates whether the acct is a transaction (cardholder), billing, control, or diversion acct.  Values are: 0 - Trans. acct 1 - Billing acct 2 - Control acct 3 - Div. acct 4 - Trans. acct subject to control redirection 5 - Trans. acct subject to div. redirection-no memo for div. 6 - Trans. acct subject to control and div. redirection-no memo 7 - Trans. acct subject to div. redirection-with memo 8 - Trans. acct subject to control and div. redirection-with memo
	BillAcctInd string `json:"billAcctInd,omitempty"`

	//  Max length = 3, Billing Currency: ISO currency code used to generate converted memo-billing information on statements for this account.
	BillingCurr string `json:"billingCurr,omitempty"`

	//  Max length = 2, Account level billing cycle: Billing cycle for the account.
	BillingCycle string `json:"billingCycle,omitempty"`

	//  Max length = 1, Account Block Code 1 - Block codes control specific processing options at the account level.
	BlockCode1 string `json:"blockCode1,omitempty"`

	//  Max length = 2, Block code 1 priority: values are 00-99 with 00 as the lowest priority and 99 as the highest priority.
	BlockCode1Priority string `json:"blockCode1Priority,omitempty"`

	//  Max length = 1, Account Block Code 2 - Block codes control specific processing options at the account level.
	BlockCode2 string `json:"blockCode2,omitempty"`

	//  Max length = 2, Block code 2 priority: values are 00-99 with 00 as the lowest priority and 99 as the highest priority.
	BlockCode2Priority string `json:"blockCode2Priority,omitempty"`

	// Format: YYYYDDD. Card expiry date: Indicates the date on which the most recently issued card expires.
	CardExpr string `json:"cardExpr,omitempty"`

	//  Max length = 1, Card Usage Flag: Code that identifies account activity status.   Values are:  0 - Account new, no activity  1 - Account active, no statement yet  2 - Account active, received statement  3 - Account closed, last statement pending  4 - Account closed and last statement received, or charged-off, or to be purged
	CardUsageFlag string `json:"cardUsageFlag,omitempty"`

	//  Max length = 7, Cash APR: Annual percentage rate defined for cash transactions. The value entered in this field is based on the percentage NOD defined on the Organisation record
	CashApr string `json:"cashApr,omitempty"`

	//  Max length = 17, Amount of credit limit available for cash.
	CashAvailCredit string `json:"cashAvailCredit,omitempty"`

	//  Max length = 17, Total cash credit limit established for this account.
	CashCrlim string `json:"cashCrlim,omitempty"`

	//  Max length = 5, Cash Plan number: Number that identifies a default or 'phantom' cash plan.
	CashPlanNbr string `json:"cashPlanNbr,omitempty"`

	//  Max length = 5, Credit Bureau Credit Score: Credit score received from the credit bureau.
	CbCrScore string `json:"cbCrScore,omitempty"`

	//  Max length = 1, Credit Bureau Indicator: Code that determines the credit bureau reporting of the account.  Values are: 0 - Logo level parameters control the selection of the account (default value) 1 - Do not report the account to Credit Bureau 2 - Always report the account to Credit Bureau irrespective of the rules set up at Logo record
	CbIndicator string `json:"cbIndicator,omitempty"`

	//  Max length = 2, Credit Bureau Special Comment field.
	CbSpecComment string `json:"cbSpecComment,omitempty"`

	//  Max length = 1, Convenience Chequebooks Auto Reissue Flag: Flag to allow automatic reissue of convenience chequebooks.  Values are:  'N' - Automatic reissue of standard convenience chequebooks allowed for this logo  'Y' - Automatic reissue of standard convenience chequebooks not allowed for this logo
	CcbAutoReissueFlag string `json:"ccbAutoReissueFlag,omitempty"`

	//  Max length = 1, Convenience Chequebooks Dispatch Method: User defined method used by the operator along with the CONV CHEQUE ORDERING flag whenever new chequebooks are to be issued. Values are:   'C' - Return to Card Centre  'D' - Direct to Cardholder  'F' - First Class Mail  'R' - Recorded Delivery  Space - No dispatch method defined
	CcbDispatchMethod string `json:"ccbDispatchMethod,omitempty"`

	//  Max length = 1, Convenience Chequebook Ordering Flag. Values are: A - Chequebook to be issued as part of Account opening N - No Chequebooks issued and supported C - Chequebooks issued and supported S - Chequebooks issued in the past and no cheque books in future E - Manual order/re-order of cheque books F - Chequebook issue failed (New Account) G - Chequebook issue failed (Manually ordered) H- Chequebook issue failed (Auto re-issue) R - Auto re- issue cheque books
	CcbOrderingFlag string `json:"ccbOrderingFlag,omitempty"`

	// Format: YYYYDDD. Card fee date first purchase.
	CfdDteFirstPur string `json:"cfdDteFirstPur,omitempty"`

	//  Max length = 2, Charge Off Reason: System defined portion of the charge off reason code. Values are: 'C' - Credit loss  'B' - Bankruptcy  'F' - Fraud loss  'T' - Counterfeit
	ChgoffReason string `json:"chgoffReason,omitempty"`

	//  Max length = 1, Charge Off Status: Code that identifies the charge-off status of this account.  Values are: 0 = Not charged off (Default) 1 = Potential (within 60 days of automatic charge off) 2 = Pending (within 30 days of automatic charge off) 3 = Manual 4 = Blocked 5 = Automatically completed 6 = Manually completed 9 = Account abandoned.
	ChgoffStatus string `json:"chgoffStatus,omitempty"`

	//  Max length = 2, Collateral Code: User-defined code that indicates the type of collateral attached to this account. Values are:  0 - No Collateral records associated with the account  1-20 - Number of Collateral records associated with the account.
	Clltrl string `json:"clltrl,omitempty"`

	//  Max length = 2, Collateral Code: User-defined code that indicates the type of collateral attached to this account.
	ColatCode string `json:"colatCode,omitempty"`

	//  Max length = 20, Collection Phone number from Logo
	CollectionPhoneNbr string `json:"collectionPhoneNbr,omitempty"`

	// Format: YYYYMMDD. Comaker date of birth
	ComakerDob string `json:"comakerDob,omitempty"`

	// common
	Common *Header `json:"common,omitempty"`

	//  Max length = 1, Condition of account: Field that indicates whether the account is past due, delinquent or current. Values are: 0 - Current due 1 - Past due 2 - Delinquent
	CondOfAcct string `json:"condOfAcct,omitempty"`

	//  Max length = 19, Customer Correspondence Number: Number that identifies the Customer Name/Address record that contains the correspondence customer address for statements and other correspondence, which will be used instead of the Primary customer held on the Account
	CorresCustNbr string `json:"corresCustNbr,omitempty"`

	//  Max length = 16, Cost Center Report: Cost center reporting number to charge for all cardholder transactions.
	CostCntrRpt string `json:"costCntrRpt,omitempty"`

	//  Max length = 19, Card number
	CrdNbr string `json:"crdNbr,omitempty"`

	//  Max length = 1, Credit limit alert
	CrdtLmtAlert string `json:"crdtLmtAlert,omitempty"`

	//  Max length = 5, Credit limit alert amount
	CrdtLmtAmt string `json:"crdtLmtAmt,omitempty"`

	//  Max length = 17, Account spending/credit limit: current credit limit assigned to the account.
	Crlim string `json:"crlim,omitempty"`

	//  Max length = 1, Credit limit bypass indicator that determines whether an account is excluded for credit limit review by TRIAD.  Values are:  0 - Include (Default)  1 - Exclude from credit limit increase  2 - Exclude from credit limit decrease  3 - Exclude from credit limit decision area.
	CrlimBypassInd string `json:"crlimBypassInd,omitempty"`

	//  Max length = 3, Number of times this account has been in collections.
	CtaTimesInColl string `json:"ctaTimesInColl,omitempty"`

	//  Max length = 9, Cycle to date Cash Advance Service Charge
	CtdCashAdvSvchg string `json:"ctdCashAdvSvchg,omitempty"`

	//  Max length = 9, Cycle to date Insurance premium
	CtdInsurancePrem string `json:"ctdInsurancePrem,omitempty"`

	//  Max length = 17, Cycle to date points adjusted in
	CtdPtsAdjIn string `json:"ctdPtsAdjIn,omitempty"`

	//  Max length = 17, Cycle to date points adjusted out
	CtdPtsAdjOut string `json:"ctdPtsAdjOut,omitempty"`

	//  Max length = 17, Cycle to date bonus points
	CtdPtsBnus string `json:"ctdPtsBnus,omitempty"`

	//  Max length = 17, Cycle to date points bought
	CtdPtsBought string `json:"ctdPtsBought,omitempty"`

	//  Max length = 17, Cycle to date points closed
	CtdPtsClsed string `json:"ctdPtsClsed,omitempty"`

	//  Max length = 17, Cycle to date points earned
	CtdPtsEarnd string `json:"ctdPtsEarnd,omitempty"`

	//  Max length = 17, Cycle to date points expired
	CtdPtsExpired string `json:"ctdPtsExpired,omitempty"`

	//  Max length = 17, Cycle to date points redeemed
	CtdPtsRedeemed string `json:"ctdPtsRedeemed,omitempty"`

	//  Max length = 9, Cycle to date service charge
	CtdServiceCharge string `json:"ctdServiceCharge,omitempty"`

	//  Max length = 3, Account level control table override: field that is used to override the account control table that is assigned to the account's PCT with a different account control table.
	CtlTblOvrrd string `json:"ctlTblOvrrd,omitempty"`

	//  Max length = 17, Current Balance: Current balance of the Credit Plan Segment record for the current billing cycle.
	CurrBal string `json:"currBal,omitempty"`

	//  Max length = 9, Current Buy Now Pay Later Balance.
	CurrBnplBal string `json:"currBnplBal,omitempty"`

	//  Max length = 17, Current cash balance for this account. It is a signed value.
	CurrCashBal string `json:"currCashBal,omitempty"`

	//  Max length = 3, Current Collector: Code or initials that identify the collector currently assigned to the account.
	CurrColl string `json:"currColl,omitempty"`

	// Format: YYYYDDD. Current Card Start Date: Date embossed on a magnetic-stripe card that indicates when the card becomes valid. This date is the first day of the month on which the card becomes valid.
	CurrCrdFromDate string `json:"currCrdFromDate,omitempty"`

	//  Max length = 9, BNPL balance subtracted from Current balance.
	CurrNonBnplBal string `json:"currNonBnplBal,omitempty"`

	//  Max length = 17, Current year-to-date interest paid.
	CurrYtdIntPaid string `json:"currYtdIntPaid,omitempty"`

	//  Max length = 3, Currency Code at Org Level: ISO currency code that identifies the unit of currency for this account.
	CurrencyCode string `json:"currencyCode,omitempty"`

	//  Max length = 1, Currency NOD: Number of decimal positions to the right of the decimal point (or other decimal character) in monetary amount fields.
	CurrencyNod string `json:"currencyNod,omitempty"`

	//  Max length = 3, Customer Group Code: Code that identifies all Relationship records, Account records, and Card records belonging to the same customer or company.
	CustGrpCode string `json:"custGrpCode,omitempty"`

	//  Max length = 2, Customer selection due day: Day of the month the customer has selected as the payment due date. Values are:  0 - Customer-selected payment due date functionality not utilized (Default)  1-31 - Day of the month the customer has chosen as the payment due date.
	CustSelDueDay string `json:"custSelDueDay,omitempty"`

	//  Max length = 20, Customer service phone number from Logo
	CustSvcPhoneNbr string `json:"custSvcPhoneNbr,omitempty"`

	//  Max length = 1, Customer credit limit icrease preference indicator. Values are 0 - Optin, 1 - Exclude, 2 - Optout
	CustUcliPref string `json:"custUcliPref,omitempty"`

	//  Max length = 19, Customer number: Customer number that identifies the Customer Name/Address record to which this account is assigned.
	CustomerNumber string `json:"customerNumber,omitempty"`

	//  Max length = 3, Customer Organisation: Three digit Identification number of the Organisation.
	CustomerOrg string `json:"customerOrg,omitempty"`

	//  Max length = 1, Cycle Over limit fee indicator: Account overlimit fee indicator.   Values are:  0 - Account not Overlimit at Cycle;  1 - Account cycle overlimit fee not assessed;  2 - Account cycle overlimit fee assessed; 3 - Account cycle overlimit fee assessed and reported
	CycleOvrlimFeeInd string `json:"cycleOvrlimFeeInd,omitempty"`

	// Format: YYYYDDD. Date interest accrued through till
	DateAccrThru string `json:"dateAccrThru,omitempty"`

	// Format: YYYYDDD. Date when ACH became effective
	DateAchEff string `json:"dateAchEff,omitempty"`

	// Format: YYYYDDD. Date on which direct debit processing expires for the account. A value of zeros means the DD does not expire.
	DateAchPmtExpr string `json:"dateAchPmtExpr,omitempty"`

	//  Max length = 7, Effective date of the alternate customer address.
	DateAltCustStrt string `json:"dateAltCustStrt,omitempty"`

	// Format: YYYYDDD. Application Date.
	DateAppli string `json:"dateAppli,omitempty"`

	// Format: YYYYDDD. Date Block Code 1.
	DateBlockCode1 string `json:"dateBlockCode1,omitempty"`

	// Format: YYYYDDD. Date Block Code 2.
	DateBlockCode2 string `json:"dateBlockCode2,omitempty"`

	// Format: YYYYDDD. Date of the last requested credit bureau report.
	DateBureau string `json:"dateBureau,omitempty"`

	// Format: YYYYDDD. Card expiry date
	DateCardExpr string `json:"dateCardExpr,omitempty"`

	// Format: YYYYDDD. Date the annual card membership fee is assessed on the account.
	DateCardFee string `json:"dateCardFee,omitempty"`

	// Format: YYYYDDD. Date account is charged-off.
	DateCgoff string `json:"dateCgoff,omitempty"`

	// Format: YYYYDDD. Date account is closed.
	DateClosed string `json:"dateClosed,omitempty"`

	// Format: YYYYDDD. Date account went into credit balance
	DateCrBal string `json:"dateCrBal,omitempty"`

	// Format: YYYYDDD. Date when credit limit was assigned.
	DateCrlim string `json:"dateCrlim,omitempty"`

	// Format: YYYYDDD. Date account was sent to collections
	DateIntoColl string `json:"dateIntoColl,omitempty"`

	// Format: YYYYDDD. Date of last monetary activity.
	DateLastAct string `json:"dateLastAct,omitempty"`

	// Format: YYYYDDD. Date of Last Credit
	DateLastCr string `json:"dateLastCr,omitempty"`

	// Format: YYYYDDD. Date last credit limit changed
	DateLastCrlim string `json:"dateLastCrlim,omitempty"`

	// Format: YYYYDDD. Date Last Cycle
	DateLastCycle string `json:"dateLastCycle,omitempty"`

	// Format: YYYYDDD. Date of Last Debit
	DateLastDb string `json:"dateLastDb,omitempty"`

	// Format: YYYYDDD. Date Last Delinquency: Date last time account was delinquent.
	DateLastDelq string `json:"dateLastDelq,omitempty"`

	// Format: YYYYDDD. Date last expiry: Indicates the date on which the previously issued card expired.
	DateLastExp string `json:"dateLastExp,omitempty"`

	// Format: YYYYDDD. Date of last payment.
	DateLastPmt string `json:"dateLastPmt,omitempty"`

	// Format: YYYYDDD. Date Last Purchase: Date on which the last purchase was made on the account.
	DateLastPurch string `json:"dateLastPurch,omitempty"`

	// Format: YYYYDDD. Date when last rate change occurred
	DateLastRateChg string `json:"dateLastRateChg,omitempty"`

	// Format: YYYYDDD. Date the account was last reaged
	DateLastReage string `json:"dateLastReage,omitempty"`

	// Format: YYYYDDD. Date Last Return: Date of last return that was made on  the account.
	DateLastReturn string `json:"dateLastReturn,omitempty"`

	// Format: YYYYDDD. Date of last reversed payment.
	DateLastRevPmt string `json:"dateLastRevPmt,omitempty"`

	// Format: YYYYDDD. Date of last check return
	DateLastRtnCheck string `json:"dateLastRtnCheck,omitempty"`

	// Format: YYYYDDD. Date of last status change.
	DateLastStatChg string `json:"dateLastStatChg,omitempty"`

	// Format: YYYYDDD. Date on which the last statement was generated.
	DateLastStmt string `json:"dateLastStmt,omitempty"`

	// Format: YYYYDDD. Date Last updated for credit limit increase preference indicator
	DateLastUcliUpd string `json:"dateLastUcliUpd,omitempty"`

	// Format: YYYYDDD. Date when late fee was charged
	DateLateFee string `json:"dateLateFee,omitempty"`

	// Format: YYYYDDD. Date Last Address Change: Date when the address got last changed.
	DateLtAddrChge string `json:"dateLtAddrChge,omitempty"`

	// Format: YYYYDDD. Date next credit bureau
	DateNextCb string `json:"dateNextCb,omitempty"`

	// Format: YYYYDDD. Date Next Payment
	DateNextPmt string `json:"dateNextPmt,omitempty"`

	// Format: YYYYDDD. Next statement date: Date on which CMS generates the next regular statement for the account.
	DateNextStmt string `json:"dateNextStmt,omitempty"`

	// Format: YYYYDDD. Date when notification received
	DateNotificRecvd string `json:"dateNotificRecvd,omitempty"`

	// Format: YYYYDDD. Date Opened: Date on which the account was opened.
	DateOpened string `json:"dateOpened,omitempty"`

	// Format: YYYYDDD. Payment due date: Date when the next payment is due.
	DatePmtDue string `json:"datePmtDue,omitempty"`

	// Format: YYYYDDD. Date when temporary credit limit expires.
	DateTempCrlimExp string `json:"dateTempCrlimExp,omitempty"`

	// Format: YYYYDDD. Date account transferred
	DateXfrEff string `json:"dateXfrEff,omitempty"`

	//  Max length = 17, Amount of the direct credit.
	DcAchAmt string `json:"dcAchAmt,omitempty"`

	// Format: YYYYDDD. Direct Credit Payment Expiry Date: Date on which direct credit processing expires for the account. A value of zeros means the DD does not expire.
	DcAchExpireDate string `json:"dcAchExpireDate,omitempty"`

	//  Max length = 5, Direct Credit Plan Number: Plan number that identifies the Credit Plan Master record of a retail credit plan that CMS debits for direct credits to the account.
	DcAchPlan string `json:"dcAchPlan,omitempty"`

	//  Max length = 2, Direct Credit Request Day: Field that indicates the day of the month when CMS generates the direct credit for the account.
	DcAchReqDay string `json:"dcAchReqDay,omitempty"`

	//  Max length = 1, Direct Credit Request Day Indicator: Field that indicates the day of the month when CMS generates the direct credit for the account. Values are:  0 - Direct credit processing is not used  1 - Generate the direct credit on the cycle day or on a specific day each month  2 - Generate the direct credit on the first cycle only  3 - Generate the direct credit at account opening only  4 - Generate the direct credit on a specific number of days after account opening
	DcAchReqDayInd string `json:"dcAchReqDayInd,omitempty"`

	//  Max length = 10, Direct Credit Routing/transit Number: Dual-use field that accepts a nine-digit routing/transit number (ACH format) or a ten-digit Bank ID (non-ACH format) to identify the financial institution to receive direct credit transactions for account payments. Field must be numeric. If the DD/DC Indicator on ARMO02 equals 0, the first byte if the DD R/T Bank ID must equal 0 followed by a 9 digit numeric value.
	DcAchRtNbr string `json:"dcAchRtNbr,omitempty"`

	// Format: YYYYDDD. Direct Credit Payment Start Date: Date on which direct credit processing starts for the account.
	DcAchStartDate string `json:"dcAchStartDate,omitempty"`

	//  Max length = 11, Bank identifier code (BIC) associated with the direct credit account. A SWIFT code is an international bank code that identifies particular banks worldwide.
	DcBic string `json:"dcBic,omitempty"`

	//  Max length = 34, International Banking Account Number (IBAN) associated with the direct credit account.
	DcIban string `json:"dcIban,omitempty"`

	//  Max length = 2, Direct Debit request days. Number of days prior to the payment due date or the day of the month to request direct debit payments for the account.
	DdAchReqDay string `json:"ddAchReqDay,omitempty"`

	//  Max length = 1, Code that indicates whether DD processing is active for this account and the pmt option in effect.  Values are: 0= No participation in DD processing (Default) 1= DD processing active. Min. pmt in effect 2= DD active. Cust nominated pmt in effect 3= DD expired 4= DD cancelled due to delinquency 5= DD cancelled as DD PAYMENT REVERSAL LIMIT reached 6= DD active for debit card transactions only 7= DD active. Cust nominated pmt is in effect. Option does not include past due amounts for projected DD
	DdAutoPayFlg string `json:"ddAutoPayFlg,omitempty"`

	//  Max length = 11, Bank identifier code (BIC) associated with the direct debit account. A SWIFT code is an international bank code that identifies particular banks worldwide.
	DdBic string `json:"ddBic,omitempty"`

	//  Max length = 1, DD cancel switch 0 - Not Cancelled  1 - Cancelled
	DdCancel string `json:"ddCancel,omitempty"`

	//  Max length = 1, Indicator if DD credit balance or not
	DdCreditBal string `json:"ddCreditBal,omitempty"`

	//  Max length = 1, Direct debit frequency
	DdDailyFreq string `json:"ddDailyFreq,omitempty"`

	//  Max length = 34, International Banking Account Number (IBAN) associated with the direct debit account.
	DdIban string `json:"ddIban,omitempty"`

	//  Max length = 1, To allow or not allow interim payments
	DdInterimPmts string `json:"ddInterimPmts,omitempty"`

	// Format: YYYYDDD. DD payment change date
	DdPmtChangeDate string `json:"ddPmtChangeDate,omitempty"`

	//  Max length = 1, Direct debit payment reversal counter
	DdPmtRevCntr string `json:"ddPmtRevCntr,omitempty"`

	//  Max length = 1, Payment reversal counter: Counter that accumulates the number of payment reversals life-todate to a maximum value of 9.
	DdPmtRevCtr string `json:"ddPmtRevCtr,omitempty"`

	//  Max length = 19, Demand deposit account (DDA) number associated with direct debit processing.
	DdaAcctNbr string `json:"ddaAcctNbr,omitempty"`

	//  Max length = 9, ABA-assigned routing and transit number that identifies the financial institution at which the checking account is held.
	DdaRtngNbr string `json:"ddaRtngNbr,omitempty"`

	//  Max length = 9, This amount is calculated as DMP-Percent of t+M468he Recommended Payment Amount (Delta RMP)
	DeltaDmp string `json:"deltaDmp,omitempty"`

	//  Max length = 9, This will be the difference between Total Amount Due/ Agreed Minimum Payment and Recommended Payment amount
	DeltaRmp string `json:"deltaRmp,omitempty"`

	//  Max length = 1, Digital Card Indicator
	DigitalCardInd string `json:"digitalCardInd,omitempty"`

	//  Max length = 19, Digital Card Number
	DigitalCardNbr string `json:"digitalCardNbr,omitempty"`

	//  Max length = 1, Direct Mail Customer marketing channel option
	DirectMail string `json:"directMail,omitempty"`

	//  Max length = 3, Dynamic minimum payment percentage received from  TRIAD
	DmpPercent string `json:"dmpPercent,omitempty"`

	//  Max length = 9, Final DMP payment requested
	DmpPmtReq string `json:"dmpPmtReq,omitempty"`

	// Format: YYYYDDD. Date projected DD last maintained
	DtLastProjDdMaint string `json:"dtLastProjDdMaint,omitempty"`

	//  Max length = 1, Multischeme flag. Flag that indicates whether multi-scheme is active or not. Values are: 0 - Multi-scheme not active 1 - Multi-scheme active
	DualFlg string `json:"dualFlg,omitempty"`

	//  Max length = 1, Dual Account Indicator: Value received from Input.  Values are: L = Local account F = Foreign account
	DualInd string `json:"dualInd,omitempty"`

	//  Max length = 1, Duplicate stmt Address Flag: indicates if current address or prior address should be used for duplicate stmt request C=Reprint for curr addr (Default) P=Reprint for prev addr I=Request interim stmt next CMS daily run. No fee F=Request interim stmt next CMS daily run. Asses fee. D=Reprint for curr addr. Assess fee Q=Reprint for the prev addr E=Reprint annual stmt for curr addr  R=Reprint annual stmt for prev addr G=Reprint annual stmt for curr addr S=Reprint annual stmt for prev addr
	DupStmtAddrFlag string `json:"dupStmtAddrFlag,omitempty"`

	//  Max length = 5, Emblem ID: Field that defines the cardholder's affiliation or affinity group. The values are user-defined. If this field is left blank during account setup, CMS populates this field with the value from the Account record.
	EdAfflEmblm string `json:"edAfflEmblm,omitempty"`

	//  Max length = 2, Card's block code priority
	EdBlockPriority string `json:"edBlockPriority,omitempty"`

	//  Max length = 1, Card Action Reason: User-defined reason code associated with the current card issue action code. This field can identify specific notations to print in card and PIN mailers.
	EdCardActionReason string `json:"edCardActionReason,omitempty"`

	//  Max length = 1, Card Block Code: Block code assigned to this card.
	EdCardBlockCode string `json:"edCardBlockCode,omitempty"`

	//  Max length = 1, Cardholder Flag: Flag that indicates whether the card is issued as a primary or secondary card.  Values are:  '0' - Primary Cardholder  '1' - Additional Cardholder
	EdCardholderFlag string `json:"edCardholderFlag,omitempty"`

	//  Max length = 1, Cardholder Type: Code that indicates whether the card is issued as a primary or secondary card. The values are: 0 = Additional Cardholder 1 = Primary Cardholder
	EdCardholderType string `json:"edCardholderType,omitempty"`

	// Format: YYYYDDD. Embosser Date Block: Date the block code was placed on the card (embosser).
	EdDateBlock string `json:"edDateBlock,omitempty"`

	// Format: YYYYDDD. Last Pin Mailer Dispatch Date: Date on which the last Pin mailer was dispatched.
	EdDtLastPinMailer string `json:"edDtLastPinMailer,omitempty"`

	//  Max length = 26, Full Embossed Name : Name embossed on the first embossing line of the card.
	EdEmbFullName string `json:"edEmbFullName,omitempty"`

	//  Max length = 3, Issue Delivery Option: Identifies the delivery option for new cards.  Values are: 0 - Regular mail (Default) 1 - First class mail 2 - Registered mail 3 - Return to Bank 004-009 - User defined 10 - Virtual Card 11 - Ghost Card
	EdIssueDelivOption string `json:"edIssueDelivOption,omitempty"`

	//  Max length = 19, Multi Scheme Card Set ID: set to the first card number established for an individual cardholder if it is not provided.
	EdMsCardSetID string `json:"edMsCardSetId,omitempty"`

	//  Max length = 1, Multi scheme Pin Alignment Flag: Flag to indicate that the Pin for the card is to be the same as any other cards issued for the individual cardholder. Values are: 0 - No alignment.  The Pin is to be calculated separately for each card issued (default) 1 - Customer/Card Set alignment.  Embossing records with the same Card Set ID will have the Pin aligned on issue.
	EdMsPinAlignment string `json:"edMsPinAlignment,omitempty"`

	//  Max length = 3, Reissue Delivery Option: indicates the delivery option for reissued cards.  Values are:   000 - No special Delivery -   use regular mail (default) 001 - First Class Mail 002 - Registered Mail 003 - Internal Delivery Mail 004 - 999 - User Defined
	EdReissueDelivOptn string `json:"edReissueDelivOptn,omitempty"`

	//  Max length = 1, Email Customer marketing channel option
	EmailMktc string `json:"emailMktc,omitempty"`

	//  Max length = 26, Embossed Name 1: Name embossed on the first embossing line of the card.
	EmbName1 string `json:"embName1,omitempty"`

	//  Max length = 26, Embossed Name 2: Name embossed on the second embossing line of the card.
	EmbName2 string `json:"embName2,omitempty"`

	//  Max length = 7, Employee Discount year-to-date: Internal field to accumulate all the employee discounts and discount reversals availed in a given year.
	EmpDiscYtd string `json:"empDiscYtd,omitempty"`

	//  Max length = 15, Employee ID for the account
	EmpID string `json:"empId,omitempty"`

	//  Max length = 20, Employee Phone Number.
	EmpPhone1 string `json:"empPhone1,omitempty"`

	//  Max length = 2, Employee Code: User-defined employee code. Code that indicates that the account holder is an employee.
	EmployeeCode string `json:"employeeCode,omitempty"`

	//  Max length = 1, Payment Envelopped request Indicator: Code that indicates whether an envelope must be generated for inclusion with the account statement.
	EnvReq string `json:"envReq,omitempty"`

	// Format: YYYYDDD. FAS warning code 1 set date
	FasWarnCode1Date string `json:"fasWarnCode1Date,omitempty"`

	// Warning Code Group Occurrence 7 Times. Occurrence length is 1 byte
	FasWarningCodes []*FasWarningCodes2ForAccountDetailInquiry2 `json:"fasWarningCodes"`

	//  Max length = 3, Authorization strategy indicator returned by TRIAD. This is used for triad accounts.
	FiAuthStrategyID string `json:"fiAuthStrategyId,omitempty"`

	//  Max length = 9, TRIAD Credit limit Offer: Credit Limit Amount that TRIAD last offered.
	FiCrlimOffer string `json:"fiCrlimOffer,omitempty"`

	// Format: YYYYDDD. TRIAD Credit Limit Offer Date: Date TRIAD made the Credit Limit offer.
	FiDateCrlimOffer string `json:"fiDateCrlimOffer,omitempty"`

	//  Max length = 4, Collection scenario identification returned by TRIAD. This code identifies the collection scenario under which TRIAD processed this account.
	FiDelqScenario1 string `json:"fiDelqScenario1,omitempty"`

	// Format: YYYYDDD. TRIAD Credit Limit Offer Expiry Date: Expiration date of the credit limit offer. TRIAD changes the status of the offer to expired after the offer has been expired.
	FiExpDtCrlimOffer string `json:"fiExpDtCrlimOffer,omitempty"`

	// Format: YYYYDDD. End Date of new pricing actions returned for account.
	FiReprEndDate string `json:"fiReprEndDate,omitempty"`

	// 2 Occurrences of TRIAD score.
	FiScores []*FiScores2ForAccountDetailInquiry2 `json:"fiScores"`

	// 2 Occurrences of TRIAD score.
	FiScors []*FiScors2ForAccountDetailInquiry2 `json:"fiScors"`

	//  Max length = 1, First card activation flag
	FirstCrdActvFl string `json:"firstCrdActvFl,omitempty"`

	//  Max length = 40, First name: Field that identifies the first name of the cardholder.
	FirstName1 string `json:"firstName1,omitempty"`

	//  Max length = 1, Current First usage flag: Indicates whether card activation needs to occur for the most recently issued card.  Values are:  'Y' - Card activation needs to occur  'N' - No card activation is required or card activation has already occurred   'D' - Card deactivated
	FirstUsageFlg string `json:"firstUsageFlg,omitempty"`

	//  Max length = 17, Fixed Payment Amount:Fixed payment amount or percentage of the credit limit that CMS uses to calculate the payment amount if the Controlling Plan Override is F, X or P.
	FixedPmtAmt string `json:"fixedPmtAmt,omitempty"`

	//  Max length = 4, Fixed Payment Instalment Plan - AER
	FppAer string `json:"fppAer,omitempty"`

	//  Max length = 9, Fixed Payment Instalment Plan - Agreed Minimum payment
	FppAgrdMinPmt string `json:"fppAgrdMinPmt,omitempty"`

	//  Max length = 4, Fixed Payment Instalment Plan - default Annual Simple rate
	FppAnnRate string `json:"fppAnnRate,omitempty"`

	//  Max length = 9, Fixed Payment Instalment Plan - Total Instalment balance outstanding
	FppBal string `json:"fppBal,omitempty"`

	//  Max length = 3, Fixed Payment Instalment Default Plan
	FppDefPlan string `json:"fppDefPlan,omitempty"`

	//  Max length = 9, Fixed Payment Instalment Plan - Total Unpaid Agreed Min Payment
	FppUnpAgrdMinPmt string `json:"fppUnpAgrdMinPmt,omitempty"`

	//  Max length = 1, Indicator of the frequency for the maximum authorization parameters.  Values are:  0 - AOQR not used  1 - AOQR daily frequency  2 - AOQR CTD frequency  3 - AOQR YTD frequency
	Freq string `json:"freq,omitempty"`

	//  Max length = 1, Frequent Shopper Points Flag
	FsFlag string `json:"fsFlag,omitempty"`

	// Frequent Shopper Group occurrence 5 times. Length of Occurrence fields is 20 bytes
	FsPgmBalX []*FsPgmBalX2ForAccountDetailInquiry2 `json:"fsPgmBalX"`

	//  Max length = 17, Grace CTD
	GraceCtd string `json:"graceCtd,omitempty"`

	// Format: YYYYDDD. Interest grace expiry date
	GraceDayExpirDate string `json:"graceDayExpirDate,omitempty"`

	// Format: YYYYDDD. Greatest card expiry date on the account
	GrtstCardExpDate string `json:"grtstCardExpDate,omitempty"`

	//  Max length = 17, Highest balance year-to-date on the account.
	HiBal string `json:"hiBal,omitempty"`

	// Payment History Group Occurrence 24 times.
	Hist []*Hist2ForAccountDetailInquiry2 `json:"hist"`

	//  Max length = 20, Home phone number of the accountholder.
	HomePhone1 string `json:"homePhone1,omitempty"`

	//  Max length = 17, Income of the account holder in thousands of monetary units. Example: If the currency is U.S. dollars, an income of $100,000 is entered as 100. An income of $28,000 is entered as 28.
	Income string `json:"income,omitempty"`

	//  Max length = 9, Fixed Payment Instalment Plan - Total Instalment amount
	InstAmt string `json:"instAmt,omitempty"`

	//  Max length = 1, Instant Spend Flag
	InstSpndFl string `json:"instSpndFl,omitempty"`

	//  Max length = 1, Status: Code that identifies the status of the account.  Values are: A = Active B = Conversion fraud C = Conversion transfer D = Dormant F = Fraud transfer H = Closed/conversion I = Inactive J = Transfer in, migrated from inactive K = Transfer out, migrated from inactive M = Migrated N = New P = To be purged in next reload Q = Transfer in today R = Transfer out today T = Transfer V = Conversion X = Charge-off/conversion Z = Charge-off 8 = Closed 9 = To be purged after reload.
	IntStatus string `json:"intStatus,omitempty"`

	//  Max length = 3, Interest State: State for which interest rate guidelines are defined. PCT ID (state of residence/issue).
	IntrState string `json:"intrState,omitempty"`

	//  Max length = 1, Issue Pending Flag. Values are:  'Y' - Issue Pending  'T' - Issue Pending Triad  'N' - No Issue Pending.
	IssueFlag string `json:"issueFlag,omitempty"`

	//  Max length = 17, Last Cash Advance Amount: Amount of the last cash advance made on the account.
	LastCashAdvAmount string `json:"lastCashAdvAmount,omitempty"`

	// Format: YYYYDDD. Date last cash advance date
	LastCashAdvDate string `json:"lastCashAdvDate,omitempty"`

	//  Max length = 2, Last Credit Classification: Code that identifies the previous credit classification of the account holder.
	LastCrClass string `json:"lastCrClass,omitempty"`

	// Format: YYYYDDD. Last date to allow authorization on the old account
	LastDateToAuth string `json:"lastDateToAuth,omitempty"`

	//  Max length = 40, Last name: field that identifies the last name of the cardholder.
	LastName1 string `json:"lastName1,omitempty"`

	//  Max length = 9, Last Statement Balance
	LastStmtBal string `json:"lastStmtBal,omitempty"`

	//  Max length = 17, Last year-to-date Interest: Total amount of interest billed on the account during the prior year.
	LastYtdInt string `json:"lastYtdInt,omitempty"`

	// Format: YYYYDDD. Oldest card expiry date on the the account
	LeastCardExpDate string `json:"leastCardExpDate,omitempty"`

	//  Max length = 17, Amount of the loan credit limit available for loans on this account.
	LoanAvail string `json:"loanAvail,omitempty"`

	//  Max length = 17, Loan Balance: Total balance of all loan credit plans on this account.
	LoanBalance string `json:"loanBalance,omitempty"`

	//  Max length = 17, Loan Credit Limit: Amount of the loan credit limit for the account in whole monetary units.
	LoanCrlim string `json:"loanCrlim,omitempty"`

	//  Max length = 1, Local use indicator: Field that indicates whether card can be used internationally. Values are: 0 - Can be used outside the country of issue. 1 - Can be used only within the country of issue.
	LocalUseInd string `json:"localUseInd,omitempty"`

	//  Max length = 3, Identification number of the logo.
	Logo string `json:"logo,omitempty"`

	// Format: YYYYDDD. Last offer outcome date
	LstOfferOutcomeDte string `json:"lstOfferOutcomeDte,omitempty"`

	//  Max length = 1, Letter notification. Values are: 0 - no notification; 1 - Email; 2 - SMS; 3 - Email and SMS
	LtrNtfyMod string `json:"ltrNtfyMod,omitempty"`

	//  Max length = 1, Letter preference from the Customer record. Values are: 0 - Hardcopy only; 1 - Softcopy only; 3 - Both hard and soft copy
	LtrPref string `json:"ltrPref,omitempty"`

	// Format: YYYYMMDD. Maker date of birth
	MakerDob string `json:"makerDob,omitempty"`

	// Format: YYYYDDD. Memorable Word Date Last Updated.
	MemDateLstUpd string `json:"memDateLstUpd,omitempty"`

	//  Max length = 20, Memorable Word, as selected by the customer.
	MemWrd string `json:"memWrd,omitempty"`

	//  Max length = 1, Memorable Word Indicator: indicates whether the memorable word is stored for the customer or not.  Values are: 0 - Indicates that the Memorable Word is not set 1 - Indicates that the Memorable Word is set for the customer
	MemWrdInd string `json:"memWrdInd,omitempty"`

	//  Max length = 30, Memorable Word Reminder, used by the customer to remember the memorable word.
	MemWrdRem string `json:"memWrdRem,omitempty"`

	//  Max length = 40, Middle Name: Field that identifies the middle name of the cardholder.
	MidName1 string `json:"midName1,omitempty"`

	//  Max length = 5, Miscellanuous Credit Score: score is typically received from CDM (or another application processing system).
	MiscCrScore string `json:"miscCrScore,omitempty"`

	//  Max length = 30, Miscellaneous User field 1: User-defined miscellaneous information about the account.
	MiscUser1 string `json:"miscUser1,omitempty"`

	//  Max length = 2, Miscellaneous User field 10: User-defined miscellaneous information about the account.
	MiscUser10 string `json:"miscUser10,omitempty"`

	//  Max length = 2, Miscellaneous User field 11: User-defined miscellaneous information about the account.
	MiscUser11 string `json:"miscUser11,omitempty"`

	//  Max length = 2, Miscellaneous User field 12: User-defined miscellaneous information about the account.
	MiscUser12 string `json:"miscUser12,omitempty"`

	//  Max length = 1, Miscellaneous User field 2: User-defined miscellaneous information about the account.
	MiscUser2 string `json:"miscUser2,omitempty"`

	//  Max length = 11, Miscellaneous User field 3: User-defined miscellaneous information about the account.
	MiscUser3 string `json:"miscUser3,omitempty"`

	//  Max length = 11, Miscellaneous User field 4: User-defined miscellaneous information about the account.
	MiscUser4 string `json:"miscUser4,omitempty"`

	//  Max length = 11, Miscellaneous User field 5: User-defined miscellaneous information about the account.
	MiscUser5 string `json:"miscUser5,omitempty"`

	//  Max length = 11, Miscellaneous User field 6: User-defined miscellaneous information about the account.
	MiscUser6 string `json:"miscUser6,omitempty"`

	//  Max length = 11, Miscellaneous User field 7: User-defined miscellaneous information about the account.
	MiscUser7 string `json:"miscUser7,omitempty"`

	//  Max length = 11, Miscellaneous User field 8: User-defined miscellaneous information about the account.
	MiscUser8 string `json:"miscUser8,omitempty"`

	//  Max length = 2, Miscellaneous User field 9: User-defined miscellaneous information about the account.
	MiscUser9 string `json:"miscUser9,omitempty"`

	// Multi Scheme Card
	MsCard []*MsCard2ForAccountDetailInquiry2 `json:"msCard"`

	// Repeating group depends on maker or co-maker.
	NaData []*NaData2ForAccountDetailInquiry2 `json:"naData"`

	//  Max length = 2, Number of occurrences of naData
	NaNbrOccur string `json:"naNbrOccur,omitempty"`

	//  Max length = 1, User defined field. This field can be defined by each business to store information that is not provided in other fields in the system but still is necessary because of the business processes.
	NaUser4 string `json:"naUser4,omitempty"`

	//  Max length = 3, Number of payments returned for nonsufficient funds (NSF).
	NbrNsf string `json:"nbrNsf,omitempty"`

	//  Max length = 5, Number of credit plans associated with this account.
	NbrPlans string `json:"nbrPlans,omitempty"`

	//  Max length = 17, Number of year-to-date cash.
	NbrPytdCash string `json:"nbrPytdCash,omitempty"`

	//  Max length = 3, Number of Returned Payments got returned: Total number of payments returned for this account, which includes NSF payment reversal transactions.
	NbrRtnPmts string `json:"nbrRtnPmts,omitempty"`

	//  Max length = 5, Number of unblocked outstanding cards (plastic) for this account. The value in this field is system-generated; you cannot change it.
	NbrUnblkedCards string `json:"nbrUnblkedCards,omitempty"`

	//  Max length = 5, Number of year-to-date cash.
	NbrYtdCash string `json:"nbrYtdCash,omitempty"`

	//  Max length = 8, New Account Campaign: Marketing campaign associated with the account when it was opened.
	NewAcctCampaign string `json:"newAcctCampaign,omitempty"`

	//  Max length = 1, Flag that indicates whether the direct debit amount is a fixed amount, the full account balance, a percentage of the account balance, or not used. Values are:  0 - Not used.  1 - Fixed payment amount.  2 - Percentage of account (cycle-ending) balance.  3 - Full account (cycle-ending) balance.  4 - Full Non-BNPL Balance payer.        9 - Percentage of account (cycle-ending) balance, excluding overlimit amount
	NomAchAmtPctFlag string `json:"nomAchAmtPctFlag,omitempty"`

	//  Max length = 17, Customer-nominated amount or percentage based on the ACH-AMT-PCT value. Where ACH-AMT-PCT field is a value of '2' or '9' (percentage options), this field should contain a percentage using only the last seven positions of the field. The location of the decimal is determined by the percentage NOD. For example, if the percentage NOD is 7, enter 15% as 00000000001500000.
	NomAchPct string `json:"nomAchPct,omitempty"`

	//  Max length = 9, Direct Debit amount / percentage amount.
	NomAchPctAmt string `json:"nomAchPctAmt,omitempty"`

	//  Max length = 3, Officer Code: User defined code that defines the officer responsible for account.
	OfficerCode string `json:"officerCode,omitempty"`

	//  Max length = 2, OLC Reason: Code that indicates the reason the account is in collections.   Values are: 1 - First payment default  2 - Overlimit  3 - Excessive use  4 - Delinquent  5 - Manual (high priority)  6 - Delinquent and recency  7 - Manual (low priority)  8 - Charge-off  9 - Delinquent and overlimit  10 - Restructure for overlimit  11 - Restructure for delinquent and Overlimit  12 - Transfer  13 - Purged  99 - Account added by collector
	OlcReason string `json:"olcReason,omitempty"`

	//  Max length = 11, On Demand Direct Credit BIC: Bank identifier code associated with the on-demand direct credit account.
	OnDemDcBic string `json:"onDemDcBic,omitempty"`

	//  Max length = 17, Account number participating in on demand Direct Credit processing.
	OnDemandAchDcNbr string `json:"onDemandAchDcNbr,omitempty"`

	//  Max length = 1, Type of bank account used for on demand direct credits.  Values are:  D - Current Account  S - Savings Account
	OnDemandAchDcType string `json:"onDemandAchDcType,omitempty"`

	//  Max length = 10, On Demand Routing and Transit Number: Dual-use field that accepts a nine-digit routing/transit number (ACH format) or a ten-digit Bank ID (non-ACH format) to identify the financial institution to receive direct debit transactions for account payments.
	OnDemandAchRtNbr string `json:"onDemandAchRtNbr,omitempty"`

	//  Max length = 34, On Demand Direct Credit IBAN: International Banking Account Number (IBAN) associated with the on-demand direct credit account.
	OnDemandDcIban string `json:"onDemandDcIban,omitempty"`

	//  Max length = 17, Computed from points file GMPA
	OpenToRedOnScr string `json:"openToRedOnScr,omitempty"`

	//  Max length = 1, This field indicates whether domestic / international / both are active at account level. Valid values are 0,1,2. 0 - Send alert for both domestic and international 1 - Send alert only for international 2 - Send alert only for domestic
	OtaTxtMsg string `json:"otaTxtMsg,omitempty"`

	//  Max length = 1, Outbound Phone call Customer marketing channel option
	OutboundCall string `json:"outboundCall,omitempty"`

	//  Max length = 17, Outstanding amount in cash authorization. It is a signed value.
	OutstCashAuth string `json:"outstCashAuth,omitempty"`

	//  Max length = 1, Over limit alert
	OverLmtAlert string `json:"overLmtAlert,omitempty"`

	//  Max length = 1, Over limit Flag: Flag that indicates whether CMS includes or excludes overlimit amounts from the account cycle-ending balance. Values are: 0 = Include overlimit amounts in the account cycle-ending balance (Default); 1 = Exclude all overlimit amounts from the account cycle-ending balance subject to insurance calculation.
	OverlimitFlag string `json:"overlimitFlag,omitempty"`

	//  Max length = 1, Over limit Protection Flag: Code that controls the trigger for the overlimit protection fee.  Values are:  0 - Overlimit protection is not active  1 - Overlimit protection
	OvlmProtectionFlag string `json:"ovlmProtectionFlag,omitempty"`

	//  Max length = 3, Over Limit Number Of Cycles: Number of overlimit cycles on the account life-to-date.
	OvrlimNbrCycles string `json:"ovrlimNbrCycles,omitempty"`

	//  Max length = 1, Account Level Owner Flag: User-defined code that identifies ownership of a business.
	OwnerFlag string `json:"ownerFlag,omitempty"`

	//  Max length = 1, Standing order or direct debit indicator
	PayRemitMethod string `json:"payRemitMethod,omitempty"`

	//  Max length = 3, PCT Control Indicator: Temporary Processing Control Table identification override controlled on the Account.
	PctCtlID string `json:"pctCtlId,omitempty"`

	// Format: YYYYDDD. PCT Expiry Date: Date on which the special pricing controls expire for the account.
	PctExpirDate string `json:"pctExpirDate,omitempty"`

	//  Max length = 1, PCT Level: Code that specifies the Processing Control Table level for the pricing control indicator. The logo in which accounts reside initially determines the level at which all accounts will process.  Values are: Space - Is not used  'S' - System Level  'O' - ORG Level  'L' - LOGO level
	PctLevel string `json:"pctLevel,omitempty"`

	// Format: YYYYDDD. PCT Level Expiry Date: Date when PCT-LEVEL expires.
	PctLevelExpirDate string `json:"pctLevelExpirDate,omitempty"`

	// Format: YYYYDDD. PCT Level Start Date: Date when PCT-LEVEL is effective. Temporary override at the Account level.
	PctLevelStartDate string `json:"pctLevelStartDate,omitempty"`

	// Format: YYYYDDD. PCT Start Date: Date on which the special pricing controls start for the account.
	PctStartDate string `json:"pctStartDate,omitempty"`

	//  Max length = 2, Payment due days alert
	PdRemDays string `json:"pdRemDays,omitempty"`

	//  Max length = 3, Pending PCT: Identification of pending Processing Control Table.
	PendPct string `json:"pendPct,omitempty"`

	// Format: YYYYDDD. Pending PCT ID effective date
	PendPctEffDate string `json:"pendPctEffDate,omitempty"`

	// Format: YYYYDDD. Pending PCT ID end/expiry date
	PendPctEndDate string `json:"pendPctEndDate,omitempty"`

	//  Max length = 1, NOD in LMS
	PerItemNod string `json:"perItemNod,omitempty"`

	//  Max length = 3, Permanent Collector: Code or initials used to identify the permanent collector assigned to the account.
	PermColl string `json:"permColl,omitempty"`

	//  Max length = 3, Number of times payment has been 120 to 149 days delinquent.
	Pmt120DaysCtr string `json:"pmt120DaysCtr,omitempty"`

	//  Max length = 17, Amount of payment that is 120 to 149 days past due.
	Pmt120days string `json:"pmt120days,omitempty"`

	//  Max length = 3, Number of times payment has been 150 to 179 days delinquent.
	Pmt150DaysCtr string `json:"pmt150DaysCtr,omitempty"`

	//  Max length = 17, Amount of payment that is 150 to 179 days past due.
	Pmt150days string `json:"pmt150days,omitempty"`

	//  Max length = 3, Number of times payment has been 180 to 209 days delinquent.
	Pmt180DaysCtr string `json:"pmt180DaysCtr,omitempty"`

	//  Max length = 17, Amount of payment that is 180 to 209 days past due.
	Pmt180days string `json:"pmt180days,omitempty"`

	//  Max length = 3, Number of times payment has been 210+ days delinquent.
	Pmt210DaysCtr string `json:"pmt210DaysCtr,omitempty"`

	//  Max length = 17, Amount of payment that is 210+ days past due.
	Pmt210days string `json:"pmt210days,omitempty"`

	//  Max length = 17, Amount of payment that is 30 to 59 days past due.
	Pmt30days string `json:"pmt30days,omitempty"`

	//  Max length = 3, Number of times payment has been 30 to 59 days delinquent.
	Pmt30daysCtr string `json:"pmt30daysCtr,omitempty"`

	//  Max length = 17, Amount of payment that is 60 to 89 days past due.
	Pmt60days string `json:"pmt60days,omitempty"`

	//  Max length = 3, Number of times payment has been 60 to 89 days delinquent.
	Pmt60daysCtr string `json:"pmt60daysCtr,omitempty"`

	//  Max length = 17, Amount of payment that is 90 to 119 days past due.
	Pmt90days string `json:"pmt90days,omitempty"`

	//  Max length = 3, Number of times payment has been 90 to 119 days delinquent.
	Pmt90daysCtr string `json:"pmt90daysCtr,omitempty"`

	//  Max length = 1, Code that indicates whether DD processing is active for this account and the pmt option in effect.  Values are: 0= No participation in DD processing (Default) 1= DD processing active. Min. pmt in effect 2= DD active. Cust nominated pmt in effect 3= DD expired 4= DD cancelled due to delinquency 5= DD cancelled as DD PAYMENT REVERSAL LIMIT reached 6= DD active for debit card transactions only 7= DD active. Cust nominated pmt is in effect. Option does not include past due amounts for projected DD
	PmtAch string `json:"pmtAch,omitempty"`

	//  Max length = 17, Direct Debit Bank account number of the account.
	PmtAchDbNbr string `json:"pmtAchDbNbr,omitempty"`

	//  Max length = 1, DD payment Type: Code that indicates the type of account to which the direct debit is sent.  Values are: D = Demand deposit account (checking) S = Savings account.
	PmtAchDbType string `json:"pmtAchDbType,omitempty"`

	//  Max length = 10, Payment Automated Clearing House routing number: Dual-use field that accepts a nine-digit routing/transit number (ACH format) or a ten-digit Bank ID (non-ACH format) to identify the financial institution to receive direct debit transactions for account payments.
	PmtAchRtNbr string `json:"pmtAchRtNbr,omitempty"`

	//  Max length = 17, Payment amount to be made next month.
	PmtAmt string `json:"pmtAmt,omitempty"`

	//  Max length = 17, Payments Cycle-To-Date: Accumulated amount of all payments cycle-to-date.
	PmtCtd string `json:"pmtCtd,omitempty"`

	//  Max length = 17, Amount of payment currently due (not including delinquent amounts).
	PmtCurrDue string `json:"pmtCurrDue,omitempty"`

	//  Max length = 1, Payment Cycle Due: Code that identifies the level of contractual delinquency. The contractual delinquency (also called the cycle due code), indicates the number of cycles for which payments are due.  Values are: 0 - No amount is due; account is current  1 - Current amount is due; not past due  2 - Amount is past due 1-29 days (or 'X' days)  3 - 30 days  4 - 60 days  5 - 90 days  6 - 120 days  7 - 150 days  8 - 180 days  9 - 210+ days
	PmtCycleDue string `json:"pmtCycleDue,omitempty"`

	//  Max length = 3, Number of days the account remained delinquent for the previous delinquency occurrence.
	PmtDaysDelq string `json:"pmtDaysDelq,omitempty"`

	//  Max length = 17, Direct Credit Processing Debit Account Number: Field that indicates the debit account number participating in direct credit processing payment.
	PmtDcAchDbNbr string `json:"pmtDcAchDbNbr,omitempty"`

	//  Max length = 1, Direct Credit Processing Debit Type: Field that indicates the type of account participating in direct credit processing. Values are: 'D' - Direct Credit to Deposit Account  'S' - Direct Credit to Savings Account
	PmtDcAchDbType string `json:"pmtDcAchDbType,omitempty"`

	//  Max length = 1, Payment due alert
	PmtDueAlert string `json:"pmtDueAlert,omitempty"`

	//  Max length = 17, Last payment received for the account.
	PmtLastAmt string `json:"pmtLastAmt,omitempty"`

	//  Max length = 3, Number of times the account has been past due 1- 29 days.
	PmtPastCtr string `json:"pmtPastCtr,omitempty"`

	//  Max length = 17, Amount of payment past due.
	PmtPastDue string `json:"pmtPastDue,omitempty"`

	//  Max length = 1, Payment Recency: Code that identifies the level of recency delinquency. The recency delinquency level indicates the number of billing cycles since the last qualifying payment was posted to the account.
	PmtRecency string `json:"pmtRecency,omitempty"`

	//  Max length = 1, Payment Skip Flag: Code that indicates whether skip payments are in effect for this account.  Values are: X - Account ineligible for automatic skip payment (logo level) Z - Account eligible for selection if automatic skip payment turned on (Default) A - Automatic skip payment is in effect M - Manual skip payment is in effect V - Override of the automatic skip payment is in effect N - Skip the next cycles payment Y - Insurance skip payment is in effect I - Insurance skip payment is initiated
	PmtSkipFlag string `json:"pmtSkipFlag,omitempty"`

	//  Max length = 17, Total amount due of the account. This includes the current amount due and any past due amounts.
	PmtTotAmtDue string `json:"pmtTotAmtDue,omitempty"`

	//  Max length = 17, Projected amount of the direct debit calculated on the cycle date.
	ProjAchPmt string `json:"projAchPmt,omitempty"`

	//  Max length = 20, Account level promotional data.
	PromoData string `json:"promoData,omitempty"`

	//  Max length = 17, Last Statement Balance
	PsLastStmtBal string `json:"psLastStmtBal,omitempty"`

	//  Max length = 10, Postal Code: Postal code portion of the mailing address.
	PstlCd1 string `json:"pstlCd1,omitempty"`

	//  Max length = 4, Default value is 0.
	RdmDigGrp string `json:"rdmDigGrp,omitempty"`

	//  Max length = 17, Real time balance 1: Current Balance minus Total real time payments.
	RealTimeBal1 string `json:"realTimeBal1,omitempty"`

	//  Max length = 17, Real time balance 2: Current Balance minus Memo credits plus Memo debits.
	RealTimeBal2 string `json:"realTimeBal2,omitempty"`

	//  Max length = 1, Card numbering scheme that determines the card numbers that are assigned to Card records associated with the account. Values are: 0 - non relationship account in which the account number and all card numbers are the same. 1 - relationship account in which the account number and all card numbers are the same 2 - for accounts within a retail logo only. Account and all card numbers are the same, but each card has a unique sequence number. 3 - accounts and all card numbers are unique.
	RelCardScheme string `json:"relCardScheme,omitempty"`

	//  Max length = 19, Relationship number that indicates the number of the relationship within which this account resides.
	RelNbr string `json:"relNbr,omitempty"`

	//  Max length = 1, Relationship Primary Account Flag: Flag that indicates whether the account is the primary account in the relationship.  Values are:  'P' - Primary Account  space - Not Primary Account
	RelPrimAcctFlag string `json:"relPrimAcctFlag,omitempty"`

	//  Max length = 40, Relative Name: Name of relative of the cardholder.
	RelativeName1 string `json:"relativeName1,omitempty"`

	//  Max length = 7, Retail APR: Annual percentage rate defined for retail transactions. The value entered in this field is based on the percentage NOD defined on the Organisation record.
	RetailApr string `json:"retailApr,omitempty"`

	//  Max length = 5, Retail plan number: Number that identifies a default or 'phantom' retail plan.
	RetailPlanNbr string `json:"retailPlanNbr,omitempty"`

	//  Max length = 6, Rewards category
	RewardsCategory string `json:"rewardsCategory,omitempty"`

	//  Max length = 9, Recommended Payment Due - Amount
	RpdAmount string `json:"rpdAmount,omitempty"`

	//  Max length = 2, Returned Mail Counter: Number of times mail was returned.
	RtnMailCtr string `json:"rtnMailCtr,omitempty"`

	// Format: YYYYDDD. Returned Mail Date: Field that indicates the date of the previously returned mail.
	RtnMailDate string `json:"rtnMailDate,omitempty"`

	//  Max length = 19, Savings account number.
	SavAcctNbr string `json:"savAcctNbr,omitempty"`

	//  Max length = 9, Standard or Maximum CAP value
	SdCap string `json:"sdCap,omitempty"`

	//  Max length = 2, Staff Discount Employee code
	SdEmpCode string `json:"sdEmpCode,omitempty"`

	//  Max length = 3, Securitization ID Code: User-defined field that indicates the securitization ID associated with the account. Positions 1 & 3 are user defined values. Position 2 contains the Status, the values are Y (yes, securitized), N (no, removed from securitization pool), or blank (not securitized).
	SecIDCd string `json:"secIdCd,omitempty"`

	//  Max length = 1, Security Code: Code that indicates whether funds are held as security for an account. The value in this value is system-generated. Values are:  0 - No Secured Account record exists  1 - Secured Account record exists and is associated with this account.
	Secur string `json:"secur,omitempty"`

	//  Max length = 20, Short name: Short name of the account holder.
	ShortName string `json:"shortName,omitempty"`

	//  Max length = 9, Store number where account was opened.
	SiNbr string `json:"siNbr,omitempty"`

	//  Max length = 3, Store Organisation: Three digit Identification number of the Organisation of store where account was opened. This relates to either the CMS ORG where the store record resides or the MBS ORG where the store resides.
	SiOrg string `json:"siOrg,omitempty"`

	// Format: YYYYDDD. Date of Previous Statement.
	SmDatePrevStmt string `json:"smDatePrevStmt,omitempty"`

	//  Max length = 1, SMS General Banking Indicator: Code that indicates whether the general banking SMS feature is active at the account level and the frequency of the SMS generation.
	SmsGenBankingInd string `json:"smsGenBankingInd,omitempty"`

	//  Max length = 1, SMS Customer marketing channel option
	SmsMktc string `json:"smsMktc,omitempty"`

	//  Max length = 1, Spending limit alert
	SpndLmtAlert string `json:"spndLmtAlert,omitempty"`

	//  Max length = 5, Spending limit alert amount
	SpndLmtAmt string `json:"spndLmtAmt,omitempty"`

	//  Max length = 3, State of Issuance referencing to Pricing Control Table ID
	StateOfIssue string `json:"stateOfIssue,omitempty"`

	//  Max length = 3, State of Resident referencing to Pricing Control Table ID
	StateOfResid string `json:"stateOfResid,omitempty"`

	//  Max length = 1, Statement Flag: Code that indicates how CMS generates a statement for this account.  Values are: Space - Normal statement (Default) 'C' - Cycle statement 'I' - Interim statement 'O' - Online/archive-only statement 'H' - Hold statement 'R' - Returned statement 'S' - Sign out statement '0' - User-defined statement hold code 10 '1'-'9' - User-defined statement hold code 1 to 9 'U' - Suppress statement 'Z' - User-defined value that suppresses statement generation 'T' - Archive statement
	StatementFlag string `json:"statementFlag,omitempty"`

	//  Max length = 2, Statement Frequency: Code that indicates how often CMS generates statements for the account.  Values are: 01 - 12 - Frequency at which to generate a statement, in months.   62 - Generate a statement during the next CMS daily run. If the account is not scheduled to cycle during the next daily run, an interim statement is produced.  99 - Do not generate statements. CMS maintains account activity on the Online Accumulated Transactions file
	StmtFreq string `json:"stmtFreq,omitempty"`

	//  Max length = 1, Statement notification indicator
	StmtNotifyInd string `json:"stmtNotifyInd,omitempty"`

	//  Max length = 2, User Defined Sub-Status.  Works in conjunction with Block Code 1 to identify reason for Block code being set.  Variable Decision Key used in TRIAD.
	SubStatus string `json:"subStatus,omitempty"`

	//  Max length = 1, Suppress Letter: Code that indicates whether to suppress all letters for the account.   Values are:  0 - Do not suppress letters (Default)  1 - Suppress all letters
	SuppLtr string `json:"suppLtr,omitempty"`

	//  Max length = 17, Temporary line of credit for the account in whole monetary units.
	TempCrlim string `json:"tempCrlim,omitempty"`

	//  Max length = 20, Title: Professional or honorary title associated with the cardholder name entered in the NAME LINE 1 field.
	Title1 string `json:"title1,omitempty"`

	//  Max length = 17, Total cash balance available including outstanding amount.
	TotCashBal string `json:"totCashBal,omitempty"`

	//  Max length = 17, Sum of cash value of loyalty points earned
	TotCshVal string `json:"totCshVal,omitempty"`

	//  Max length = 19, Unique ID: It identifies a customer uniquely.
	UniqueID string `json:"uniqueId,omitempty"`

	//  Max length = 19, User Account Number: User-defined account number.
	UserAcctNbr string `json:"userAcctNbr,omitempty"`

	//  Max length = 17, User defined Amount 1.
	UserAmt1 string `json:"userAmt1,omitempty"`

	//  Max length = 17, User defined Amount 10.
	UserAmt10 string `json:"userAmt10,omitempty"`

	//  Max length = 17, User defined Amount 11.
	UserAmt11 string `json:"userAmt11,omitempty"`

	//  Max length = 17, User defined Amount 12.
	UserAmt12 string `json:"userAmt12,omitempty"`

	//  Max length = 17, User defined Amount 13.
	UserAmt13 string `json:"userAmt13,omitempty"`

	//  Max length = 17, User defined Amount 14.
	UserAmt14 string `json:"userAmt14,omitempty"`

	//  Max length = 17, User defined Amount 2.
	UserAmt2 string `json:"userAmt2,omitempty"`

	//  Max length = 17, User defined Amount 3.
	UserAmt3 string `json:"userAmt3,omitempty"`

	//  Max length = 17, User defined Amount 4.
	UserAmt4 string `json:"userAmt4,omitempty"`

	//  Max length = 17, User defined Amount 5.
	UserAmt5 string `json:"userAmt5,omitempty"`

	//  Max length = 17, User defined Amount 6.
	UserAmt6 string `json:"userAmt6,omitempty"`

	//  Max length = 17, User defined Amount 7.
	UserAmt7 string `json:"userAmt7,omitempty"`

	//  Max length = 17, User defined Amount 8.
	UserAmt8 string `json:"userAmt8,omitempty"`

	//  Max length = 17, User defined Amount 9.
	UserAmt9 string `json:"userAmt9,omitempty"`

	//  Max length = 2, User defined code 1.  User-defined codes used for customized information about the account.
	UserCode1 string `json:"userCode1,omitempty"`

	//  Max length = 2, User defined code 10.  User-defined codes used for customized information about the account.
	UserCode10 string `json:"userCode10,omitempty"`

	//  Max length = 2, User defined code 11.  User-defined codes used for customized information about the account.
	UserCode11 string `json:"userCode11,omitempty"`

	//  Max length = 2, User defined code 12.  User-defined codes used for customized information about the account.
	UserCode12 string `json:"userCode12,omitempty"`

	//  Max length = 2, User defined code 13.  User-defined codes used for customized information about the account.
	UserCode13 string `json:"userCode13,omitempty"`

	//  Max length = 2, User defined code 14.  User-defined codes used for customized information about the account.
	UserCode14 string `json:"userCode14,omitempty"`

	//  Max length = 2, User defined code 2.  User-defined codes used for customized information about the account.
	UserCode2 string `json:"userCode2,omitempty"`

	//  Max length = 2, User defined code 3.  User-defined codes used for customized information about the account.
	UserCode3 string `json:"userCode3,omitempty"`

	//  Max length = 2, User defined code 4.  User-defined codes used for customized information about the account.
	UserCode4 string `json:"userCode4,omitempty"`

	//  Max length = 2, User defined code 5.  User-defined codes used for customized information about the account.
	UserCode5 string `json:"userCode5,omitempty"`

	//  Max length = 2, User defined code 6.  User-defined codes used for customized information about the account.
	UserCode6 string `json:"userCode6,omitempty"`

	//  Max length = 2, User defined code 7.  User-defined codes used for customized information about the account.
	UserCode7 string `json:"userCode7,omitempty"`

	//  Max length = 2, User defined code 8.  User-defined codes used for customized information about the account.
	UserCode8 string `json:"userCode8,omitempty"`

	//  Max length = 2, User defined code 9.  User-defined codes used for customized information about the account.
	UserCode9 string `json:"userCode9,omitempty"`

	// Format: YYYYDDD. User-defined date used for customized information about the account.
	UserDate1 string `json:"userDate1,omitempty"`

	// Format: YYYYDDD. User defined date 10.
	UserDate10 string `json:"userDate10,omitempty"`

	// Format: YYYYDDD. User defined date 11.
	UserDate11 string `json:"userDate11,omitempty"`

	// Format: YYYYDDD. User defined date 12.
	UserDate12 string `json:"userDate12,omitempty"`

	// Format: YYYYDDD. User defined date 13.
	UserDate13 string `json:"userDate13,omitempty"`

	// Format: YYYYDDD. User defined date 14.
	UserDate14 string `json:"userDate14,omitempty"`

	// Format: YYYYDDD. User defined date 2.
	UserDate2 string `json:"userDate2,omitempty"`

	// Format: YYYYDDD. User defined date 3.
	UserDate3 string `json:"userDate3,omitempty"`

	// Format: YYYYDDD. User defined date 4.
	UserDate4 string `json:"userDate4,omitempty"`

	// Format: YYYYDDD. User defined date 5.
	UserDate5 string `json:"userDate5,omitempty"`

	// Format: YYYYDDD. User defined date 6.
	UserDate6 string `json:"userDate6,omitempty"`

	// Format: YYYYDDD. User defined date 7.
	UserDate7 string `json:"userDate7,omitempty"`

	// Format: YYYYDDD. User defined date 8.
	UserDate8 string `json:"userDate8,omitempty"`

	// Format: YYYYDDD. User defined date 9.
	UserDate9 string `json:"userDate9,omitempty"`

	//  Max length = 1, User defined Product 1 Customer marketing product option
	UserDefinedPp1 string `json:"userDefinedPp1,omitempty"`

	//  Max length = 1, User defined Product 2 Customer marketing product option
	UserDefinedPp2 string `json:"userDefinedPp2,omitempty"`

	//  Max length = 1, User defined Product 3 Customer marketing product option
	UserDefinedPp3 string `json:"userDefinedPp3,omitempty"`

	//  Max length = 1, VIP Status: User-defined code that indicates this account holder is an important or influential customer.  Values are:  0 - Regular Customer  1 - VIP Customer
	VipStatus string `json:"vipStatus,omitempty"`

	//  Max length = 1, Waive Cycle Spend Fee Flag: Flag that indicates whether to waive the cycle spend fee for the account.  Values are:  0 - Do not waive cycle spend fee (Default)  1 - Waive cycle spend fee
	WaiveCycleSpendFee string `json:"waiveCycleSpendFee,omitempty"`

	//  Max length = 1, Waive Service Charge Flag: Flag that indicates whether to waive service charge for the account.  Values are:  0 - Do not waive svc charges if in A/R and waive in Profit/Loss (Default)  1 - Waive svc charges in A/R and P/L  2 - Do not waive svc charges in A/R and P/L  3 - Waive svc charges in A/R but do not waive in P/L.  4 - Waive svc charges in A/R & P/L for 1 cycle  5 - Waive svc charges in A/R & P/L for 2 cycles  6 - Waive svc charges in A/R & P/L for 3 cycles
	WaiveFeeChg string `json:"waiveFeeChg,omitempty"`

	//  Max length = 1, Waive Interest Charge Flag: Flag that indicates whether to waive interest for the account.  Values are:  0 - Assess interest (Default)  1 - Permanently waive interest charges.  4 - Waive interest charges for 1 cycle  5 - Waive interest charges for 2 cycles 6 - Waive interest charges for 3 cycles
	WaiveIntrChg string `json:"waiveIntrChg,omitempty"`

	//  Max length = 1, Waive Late Charge Flag: Flag that indicates whether to waive late charges for the account.  Values are:  0 - Do not waive late charges (Default)  1 - Permanently Waive late charges.  4 - Waive late charges for 1 cycle, 5 - Waive late charges for 2 cycles, 6 - Waive late charges for 3 cycles, 9 - Waive late charges for current cycle
	WaiveLateChg string `json:"waiveLateChg,omitempty"`

	//  Max length = 1, Waive Letter Fee Charge Flag: Flag that indicates whether to waive the letter fee for the account.  Values are:  0 - Do not waive the letter fee (Default)  1 - Permanently waive the letter fee.  4 - Waive letter fee for 1 cycle  5 - Waive letter fee for 2 cycles  6 - Waive letter fee for 3 cycles
	WaiveLtrChg string `json:"waiveLtrChg,omitempty"`

	//  Max length = 1, Waive NSF Fee indicator: Flag that indicates whether to waive non sufficient funds (NSF) fees for returned checks.  Values are:  0 - Do not waive NSF fees if in accounts/receivable (A/R) and waive if in profit/loss (P/L)  1  - Waive NSF fees in A/R and P/L  2 - Do not waive NSF fees in A/R and P/L  3 - Waive NSF fees in A/R but do not waive in P/L.  4 - Waive NSF fees in A/R and P/L for 1 cycle  5 - Waive NSF fees in A/R and P/L for 2 cycles  6 - Waive NSF fees in A/R and P/L for 3 cycles
	WaiveNsfFeeInd string `json:"waiveNsfFeeInd,omitempty"`

	//  Max length = 1, Waive Over Limit Fee Flag: Flag that indicates whether to waive the overlimit fee.  Values are:  0 - Do not waive the overlimit fee (Default)  1 - Permanently waive overlimit fee  4 - Waive overlimit fee for 1 cycle  5 - Waive overlimit fee for 2 cycles  6 - Waive overlimit fee for 3 cycles
	WaiveOvlm string `json:"waiveOvlm,omitempty"`

	// Waive Membership Fee Charge Flag:  Flag that indicates whether to waive the annual membership fee for the account. Values are:  0 - Do not waive membership fee (Default)  1 - Permanently waive membership fee.  2 - Waive Initial membership fee  3 - Waive Renewal membership fee  4 - Waive membership fee for 1 cycle  5 - Waive membership fee for 2 cycles  6 - Waive membership fee for 3 cycles
	WaiveSvcChg []string `json:"waiveSvcChg"`

	//  Max length = 1, Waive User Fee 1: Field used to waive user fee 1, which defaults from Service Charge/Fee table.  Values are:  0 - Do not waive user fees (Default)  1 - Waive user fees  4 - Waive user fees for one cycle (Waive in current cycle)  5 - Waive user fees for two cycles (Waive in current cycle and next cycle)  6 - Waive user fees for three cycles (Waive in current cycle and next two cycles).
	WaiveUserFee1 string `json:"waiveUserFee1,omitempty"`

	//  Max length = 1, Waive User Fee 2: Field used to waive user fee 1, which defaults from Service Charge/Fee table.  Values are:  0 - Do not waive user fees (Default)  1 - Waive user fees  4 - Waive user fees for one cycle (Waive in current cycle)  5 - Waive user fees for two cycles (Waive in current cycle and next cycle)  6 - Waive user fees for three cycles (Waive in current cycle and next two cycles).
	WaiveUserFee2 string `json:"waiveUserFee2,omitempty"`

	//  Max length = 1, Waive User Fee 3: Field used to waive user fee 1, which defaults from Service Charge/Fee table.  Values are:  0 - Do not waive user fees (Default)  1 - Waive user fees  4 - Waive user fees for one cycle (Waive in current cycle)  5 - Waive user fees for two cycles (Waive in current cycle and next cycle)  6 - Waive user fees for three cycles (Waive in current cycle and next two cycles).
	WaiveUserFee3 string `json:"waiveUserFee3,omitempty"`

	//  Max length = 1, Waive User Fee 4: Field used to waive user fee 1, which defaults from Service Charge/Fee table.  Values are:  0 - Do not waive user fees (Default)  1 - Waive user fees  4 - Waive user fees for one cycle (Waive in current cycle)  5 - Waive user fees for two cycles (Waive in current cycle and next cycle)  6 - Waive user fees for three cycles (Waive in current cycle and next two cycles).
	WaiveUserFee4 string `json:"waiveUserFee4,omitempty"`

	//  Max length = 1, Waive User Fee 5: Field used to waive user fee 1, which defaults from Service Charge/Fee table.  Values are:  0 - Do not waive user fees (Default)  1 - Waive user fees  4 - Waive user fees for one cycle (Waive in current cycle)  5 - Waive user fees for two cycles (Waive in current cycle and next cycle)  6 - Waive user fees for three cycles (Waive in current cycle and next two cycles).
	WaiveUserFee5 string `json:"waiveUserFee5,omitempty"`

	//  Max length = 1, Waive User Fee 6: Field used to waive user fee 1, which defaults from Service Charge/Fee table.  Values are:  0 - Do not waive user fees (Default)  1 - Waive user fees  4 - Waive user fees for one cycle (Waive in current cycle)  5 - Waive user fees for two cycles (Waive in current cycle and next cycle)  6 - Waive user fees for three cycles (Waive in current cycle and next two cycles).
	WaiveUserFee6 string `json:"waiveUserFee6,omitempty"`

	//  Max length = 19, Transfer Account: Account Number of the transferred account.
	XfrAcct string `json:"xfrAcct,omitempty"`

	//  Max length = 3, Transfer Logo: Identification number of the logo of the transferred account.
	XfrLogo string `json:"xfrLogo,omitempty"`

	//  Max length = 3, Transfer Organisation: Three digit Identification number of the Organisation of the transferred account.
	XfrOrg string `json:"xfrOrg,omitempty"`
}

// Validate validates this account detail inquiry response2
func (m *AccountDetailInquiryResponse2) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAtmOtcQsiRtlAccum(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCommon(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFasWarningCodes(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFiScores(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFiScors(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFsPgmBalX(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateHist(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMsCard(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNaData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AccountDetailInquiryResponse2) validateAtmOtcQsiRtlAccum(formats strfmt.Registry) error {

	if swag.IsZero(m.AtmOtcQsiRtlAccum) { // not required
		return nil
	}

	for i := 0; i < len(m.AtmOtcQsiRtlAccum); i++ {
		if swag.IsZero(m.AtmOtcQsiRtlAccum[i]) { // not required
			continue
		}

		if m.AtmOtcQsiRtlAccum[i] != nil {
			if err := m.AtmOtcQsiRtlAccum[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("atmOtcQsiRtlAccum" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *AccountDetailInquiryResponse2) validateCommon(formats strfmt.Registry) error {

	if swag.IsZero(m.Common) { // not required
		return nil
	}

	if m.Common != nil {
		if err := m.Common.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("common")
			}
			return err
		}
	}

	return nil
}

func (m *AccountDetailInquiryResponse2) validateFasWarningCodes(formats strfmt.Registry) error {

	if swag.IsZero(m.FasWarningCodes) { // not required
		return nil
	}

	for i := 0; i < len(m.FasWarningCodes); i++ {
		if swag.IsZero(m.FasWarningCodes[i]) { // not required
			continue
		}

		if m.FasWarningCodes[i] != nil {
			if err := m.FasWarningCodes[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("fasWarningCodes" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *AccountDetailInquiryResponse2) validateFiScores(formats strfmt.Registry) error {

	if swag.IsZero(m.FiScores) { // not required
		return nil
	}

	for i := 0; i < len(m.FiScores); i++ {
		if swag.IsZero(m.FiScores[i]) { // not required
			continue
		}

		if m.FiScores[i] != nil {
			if err := m.FiScores[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("fiScores" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *AccountDetailInquiryResponse2) validateFiScors(formats strfmt.Registry) error {

	if swag.IsZero(m.FiScors) { // not required
		return nil
	}

	for i := 0; i < len(m.FiScors); i++ {
		if swag.IsZero(m.FiScors[i]) { // not required
			continue
		}

		if m.FiScors[i] != nil {
			if err := m.FiScors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("fiScors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *AccountDetailInquiryResponse2) validateFsPgmBalX(formats strfmt.Registry) error {

	if swag.IsZero(m.FsPgmBalX) { // not required
		return nil
	}

	for i := 0; i < len(m.FsPgmBalX); i++ {
		if swag.IsZero(m.FsPgmBalX[i]) { // not required
			continue
		}

		if m.FsPgmBalX[i] != nil {
			if err := m.FsPgmBalX[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("fsPgmBalX" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *AccountDetailInquiryResponse2) validateHist(formats strfmt.Registry) error {

	if swag.IsZero(m.Hist) { // not required
		return nil
	}

	for i := 0; i < len(m.Hist); i++ {
		if swag.IsZero(m.Hist[i]) { // not required
			continue
		}

		if m.Hist[i] != nil {
			if err := m.Hist[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("hist" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *AccountDetailInquiryResponse2) validateMsCard(formats strfmt.Registry) error {

	if swag.IsZero(m.MsCard) { // not required
		return nil
	}

	for i := 0; i < len(m.MsCard); i++ {
		if swag.IsZero(m.MsCard[i]) { // not required
			continue
		}

		if m.MsCard[i] != nil {
			if err := m.MsCard[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("msCard" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *AccountDetailInquiryResponse2) validateNaData(formats strfmt.Registry) error {

	if swag.IsZero(m.NaData) { // not required
		return nil
	}

	for i := 0; i < len(m.NaData); i++ {
		if swag.IsZero(m.NaData[i]) { // not required
			continue
		}

		if m.NaData[i] != nil {
			if err := m.NaData[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("naData" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *AccountDetailInquiryResponse2) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AccountDetailInquiryResponse2) UnmarshalBinary(b []byte) error {
	var res AccountDetailInquiryResponse2
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
