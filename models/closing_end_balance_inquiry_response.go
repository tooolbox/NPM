// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ClosingEndBalanceInquiryResponse closing end balance inquiry response
//
// swagger:model ClosingEndBalanceInquiryResponse
type ClosingEndBalanceInquiryResponse struct {

	//  Max length = 19, Account Number: Identification Number of Customer's account.
	Acct string `json:"acct,omitempty"`

	//  Max length = 17, Current balance: Total current balance of all credit plan segments associated with the account.
	AcctCurrBal string `json:"acctCurrBal,omitempty"`

	//  Max length = 17, Account closing end balance.
	AcctOutstdBal string `json:"acctOutstdBal,omitempty"`

	//  Max length = 1, Account Block Code 1 - Block codes control specific processing options at the account level.
	BlockCode1 string `json:"blockCode1,omitempty"`

	//  Max length = 1, Account Block Code 2 - Block codes control specific processing options at the account level.
	BlockCode2 string `json:"blockCode2,omitempty"`

	// common
	Common *Header `json:"common,omitempty"`

	//  Max length = 1, Interest Waived Flag: This flag will be set when account has block code which indicates to waive financial charges or when the WAIVE:  INT field on ARMB10 is set. Values are: 1 - Interest  Waived 0 - Interest  Not Waived
	IntWaivedFlag string `json:"intWaivedFlag,omitempty"`

	//  Max length = 17, Amount of outstanding memo credits for the account.
	MemoCr string `json:"memoCr,omitempty"`

	//  Max length = 17, Amount of outstanding memo debits for the account.
	MemoDb string `json:"memoDb,omitempty"`

	//  Max length = 2, Number of plans with balance greater than zero on input account.
	NbrOfPlans string `json:"nbrOfPlans,omitempty"`

	// Plan Table End of Group.
	PlanTable []*PlanTableForClosingEndBalanceInquiry1 `json:"planTable"`
}

// Validate validates this closing end balance inquiry response
func (m *ClosingEndBalanceInquiryResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCommon(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePlanTable(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ClosingEndBalanceInquiryResponse) validateCommon(formats strfmt.Registry) error {

	if swag.IsZero(m.Common) { // not required
		return nil
	}

	if m.Common != nil {
		if err := m.Common.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("common")
			}
			return err
		}
	}

	return nil
}

func (m *ClosingEndBalanceInquiryResponse) validatePlanTable(formats strfmt.Registry) error {

	if swag.IsZero(m.PlanTable) { // not required
		return nil
	}

	for i := 0; i < len(m.PlanTable); i++ {
		if swag.IsZero(m.PlanTable[i]) { // not required
			continue
		}

		if m.PlanTable[i] != nil {
			if err := m.PlanTable[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("planTable" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ClosingEndBalanceInquiryResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ClosingEndBalanceInquiryResponse) UnmarshalBinary(b []byte) error {
	var res ClosingEndBalanceInquiryResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
