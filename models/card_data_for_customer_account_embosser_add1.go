// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CardDataForCustomerAccountEmbosserAdd1 card data for customer account embosser add1
//
// swagger:model CardDataForCustomerAccountEmbosserAdd1
type CardDataForCustomerAccountEmbosserAdd1 struct {

	//  Max length = 1, Card Add Flag. Values are:  '0' = PASS - This card was added successfully, '1' = Card was not added
	CardAddResult string `json:"cardAddResult,omitempty"`

	//  Max length = 3, Identification number of the logo.
	CardLogo string `json:"cardLogo,omitempty"`

	//  Max length = 19, Card number as received in the input message
	CardNumber string `json:"cardNumber,omitempty"`

	//  Max length = 4, Card Sequence Number: Identification number assigned to Embosser record to distinguish between multiple cards issued with the same card.
	CardSequenceNumber string `json:"cardSequenceNumber,omitempty"`

	//  Max length = 2, Chip Sequence number. Chip sequence number of the most recently issued card.
	ChipSequenceNumber string `json:"chipSequenceNumber,omitempty"`

	//  Max length = 19, Digital Card number
	DigitalCardNbr string `json:"digitalCardNbr,omitempty"`

	//  Max length = 9, Instant Issuer Branch ID: Contains the branch/store ID where instant issuance is to be fulfilled.
	IssueBranch string `json:"issueBranch,omitempty"`

	//  Max length = 18, User's sign-on name: User name as defined in FirstVision.
	UniqueID string `json:"uniqueId,omitempty"`

	//  Max length = 19, VPAY Card number
	VpayCardNbr string `json:"vpayCardNbr,omitempty"`
}

// Validate validates this card data for customer account embosser add1
func (m *CardDataForCustomerAccountEmbosserAdd1) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CardDataForCustomerAccountEmbosserAdd1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CardDataForCustomerAccountEmbosserAdd1) UnmarshalBinary(b []byte) error {
	var res CardDataForCustomerAccountEmbosserAdd1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
