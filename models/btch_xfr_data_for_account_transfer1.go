// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BtchXfrDataForAccountTransfer1 btch xfr data for account transfer1
//
// swagger:model BtchXfrDataForAccountTransfer1
type BtchXfrDataForAccountTransfer1 struct {

	// Format: YYYYMMDD. EXP DATE
	ExpDate string `json:"expDate,omitempty"`

	//  Max length = 19, NEW CRD NBR
	// Max Length: 19
	// Min Length: 0
	NewCrdNbr *string `json:"newCrdNbr,omitempty"`

	//  Max length = 19, OLD CRD NBR
	// Max Length: 19
	// Min Length: 0
	OldCrdNbr *string `json:"oldCrdNbr,omitempty"`

	//  Max length = 8, PGM ID
	// Max Length: 8
	// Min Length: 0
	PgmID *string `json:"pgmId,omitempty"`
}

// Validate validates this btch xfr data for account transfer1
func (m *BtchXfrDataForAccountTransfer1) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNewCrdNbr(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOldCrdNbr(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePgmID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BtchXfrDataForAccountTransfer1) validateNewCrdNbr(formats strfmt.Registry) error {

	if swag.IsZero(m.NewCrdNbr) { // not required
		return nil
	}

	if err := validate.MinLength("newCrdNbr", "body", string(*m.NewCrdNbr), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("newCrdNbr", "body", string(*m.NewCrdNbr), 19); err != nil {
		return err
	}

	return nil
}

func (m *BtchXfrDataForAccountTransfer1) validateOldCrdNbr(formats strfmt.Registry) error {

	if swag.IsZero(m.OldCrdNbr) { // not required
		return nil
	}

	if err := validate.MinLength("oldCrdNbr", "body", string(*m.OldCrdNbr), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("oldCrdNbr", "body", string(*m.OldCrdNbr), 19); err != nil {
		return err
	}

	return nil
}

func (m *BtchXfrDataForAccountTransfer1) validatePgmID(formats strfmt.Registry) error {

	if swag.IsZero(m.PgmID) { // not required
		return nil
	}

	if err := validate.MinLength("pgmId", "body", string(*m.PgmID), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("pgmId", "body", string(*m.PgmID), 8); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *BtchXfrDataForAccountTransfer1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BtchXfrDataForAccountTransfer1) UnmarshalBinary(b []byte) error {
	var res BtchXfrDataForAccountTransfer1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
