// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CardTblForCardholderDemographicList1 card tbl for cardholder demographic list1
//
// swagger:model CardTblForCardholderDemographicList1
type CardTblForCardholderDemographicList1 struct {

	//  Max length = 40, Address Line 3 of the customer as defined on the Customer Name/Address record.
	Addr3 string `json:"addr3,omitempty"`

	//  Max length = 40, Address Line 4 of the customer as defined on the Customer Name/Address record.
	Addr4 string `json:"addr4,omitempty"`

	//  Max length = 1, Address Flag. Values are: 0 -  Cardholder address 1 - Customer address
	AddrFlag string `json:"addrFlag,omitempty"`

	//  Max length = 40, Address Line 1: First line of the address to which the card and PIN mailer is sent.
	AddrLine1 string `json:"addrLine1,omitempty"`

	//  Max length = 40, Address Line 2: Second line of the address to which the card and PIN mailer is sent.
	AddrLine2 string `json:"addrLine2,omitempty"`

	//  Max length = 3, Age of cardholder, if a card item or age of person tied to the customer record, if an account item. Field is calculated based on Date of Birth.
	Age string `json:"age,omitempty"`

	//  Max length = 1, Alternate Customer Flag: Code that indicates how CMS generates statements and other correspondence when an alt. Customer Name/Address record exists for the account.  Values are:  Space - Disregard Alt. Customer  'A' - Alt. customer active; send stmt and other correspondence to alternate address until exp. date  'B' - Alt. customer active; send stmt and other correspondence to both addresses until exp. date  'C' - Relationship customer active; send stmt and other correspondence to alt. address
	AltCustNbrFlag string `json:"altCustNbrFlag,omitempty"`

	//  Max length = 17, Association Amount: Identifies the amount guaranteed by the guarantor.
	AssocAmt string `json:"assocAmt,omitempty"`

	// Format: YYYYMMDD. Account Association Date: Indicates the date on which the guarantor's association ends.
	AssocDate string `json:"assocDate,omitempty"`

	//  Max length = 1, Associated Letter Fee 1: Code that determines if CMS charges a fee for each letter sent to an associated party.  Values are:  0 - Do not waive the letter fee (Default)  1 - Waive the letter fee.
	AssocLtrFee1 string `json:"assocLtrFee1,omitempty"`

	//  Max length = 1, Associated Letter Fee 2: Code that determines if CMS charges a fee for each letter sent to an associated party.  Values are:  0 - Do not waive the letter fee (Default)  1 - Waive the letter fee.
	AssocLtrFee2 string `json:"assocLtrFee2,omitempty"`

	//  Max length = 1, Associated Letter Fee 3: Code that determines if CMS charges a fee for each letter sent to an associated party.  Values are:  0 - Do not waive the letter fee (Default)  1 - Waive the letter fee.
	AssocLtrFee3 string `json:"assocLtrFee3,omitempty"`

	//  Max length = 1, Associated Letter Flag 1: Flag that indicates whether CMS sends letters to each associated party.  Values are:  0 - Do not send letters to the associated party (Default)  1 - Send only delinquency letters to the associated parties when the account delinquency level (CD on ARIQ05) reaches the value in the statement cycle due code on the Logo record (LTR CD on ARML13)  2 - Send all system-generated letters to the associated party.
	AssocLtrFlag1 string `json:"assocLtrFlag1,omitempty"`

	//  Max length = 1, Associated Letter Flag 2: Flag that indicates whether CMS sends letters to each associated party.  Values are:  0 - Do not send letters to the associated party (Default)  1 - Send only delinquency letters to the associated parties when the account delinquency level (CD on ARIQ05) reaches the value in the statement cycle due code on the Logo record (LTR CD on ARML13)  2 - Send all system-generated letters to the associated party.
	AssocLtrFlag2 string `json:"assocLtrFlag2,omitempty"`

	//  Max length = 1, Associated Letter Flag 3: Flag that indicates whether CMS sends letters to each associated party.  Values are:  0 - Do not send letters to the associated party (Default)  1 - Send only delinquency letters to the associated parties when the account delinquency level (CD on ARIQ05) reaches the value in the statement cycle due code on the Logo record (LTR CD on ARML13)  2 - Send all system-generated letters to the associated party.
	AssocLtrFlag3 string `json:"assocLtrFlag3,omitempty"`

	//  Max length = 1, Association Relationship Type: Defines the nature of a guarantor's association with the account. Values are: 0 = Not used (Default) 1 = Guarantor is married to the account holder and lives at the same address 2 = Guarantor is not married to the account holder and lives at the same address 3= Guarantor is married to the account holder and does not live at the same address 4 = Guarantor is a not married to the account holder and does not live at the same address.
	AssocRelType string `json:"assocRelType,omitempty"`

	//  Max length = 1, Associated Statement Flag 1: Field that indicates whether CMS sends statements to each associated party.  Values are:  0 - Do not send statements to the associated parties (Default)  1 - Send statements to the associated parties when the account delinquency level (CD on ARIQ05) reaches the value in the statement cycle due code on the Logo record (STMT CD on ARML13)  2 - Always send.
	AssocStmtFlag1 string `json:"assocStmtFlag1,omitempty"`

	//  Max length = 1, Associated Statement Flag 2: Field that indicates whether CMS sends statements to each associated party.  Values are:  0 - Do not send statements to the associated parties (Default)  1 - Send statements to the associated parties when the account delinquency level (CD on ARIQ05) reaches the value in the statement cycle due code on the Logo record (STMT CD on ARML13)  2 - Always send.
	AssocStmtFlag2 string `json:"assocStmtFlag2,omitempty"`

	//  Max length = 1, Associated Statement Flag 3: Field that indicates whether CMS sends statements to each associated party.  Values are:  0 - Do not send statements to the associated parties (Default)  1 - Send statements to the associated parties when the account delinquency level (CD on ARIQ05) reaches the value in the statement cycle due code on the Logo record (STMT CD on ARML13)  2 - Always send.
	AssocStmtFlag3 string `json:"assocStmtFlag3,omitempty"`

	//  Max length = 1, Association Type: code that indicates the type of association with the account. Values are: 0 = Not used (Default) 1 = Guarantor 2 = Cosigner 3 = Authorized signer 4 = Not used 5-9 = User-defined.
	AssocType string `json:"assocType,omitempty"`

	//  Max length = 1, Card Block Code: Block code assigned to this card.
	BlockCd string `json:"blockCd,omitempty"`

	//  Max length = 1, Card Action Code: Indicates the card issue action code.  Values are:  '0' - No action Required  '1' - New Cards  '2' - Additional Cards  '3' - Replacement Cards  '4' - Cancel Cards  '5' - PIN Request  '6' - Emergency Replacement  '7' - Reissue  '8' - Card number scheme reissue  '9' - Card transfer reissue  'A' - Additional Card to Account  'B' - Replacement Card and Pin Mailer  'R' - Random PIN  'L' - Lost Card Replacement.
	CardAction string `json:"cardAction,omitempty"`

	//  Max length = 1, Card Expired Flag. Values are: 0=card not expired 1=card is expired
	CardExpiredFlag string `json:"cardExpiredFlag,omitempty"`

	//  Max length = 3, Identification number of the logo.
	CardLogo string `json:"cardLogo,omitempty"`

	//  Max length = 19, Unique Card Number embossed on card plastic.
	CardNbr string `json:"cardNbr,omitempty"`

	//  Max length = 3, Organization: Three digit Identification number of the organization.
	CardOrg string `json:"cardOrg,omitempty"`

	//  Max length = 4, Card sequence number: record number assigned to the card (for card numbering schemes of 0, 1, and 3) and the sequence number assigned to the card (for card numbering schemes of 2). This number is part of the record key.
	CardSeq string `json:"cardSeq,omitempty"`

	//  Max length = 1, Card Technology. Flag that identifies the current card technology used for this card. Values are:  0 - Magnetic Stripe  1 - Smart Card  2 - Contactless magnetic stripe  3 - Contactless smart card
	CardTechnology string `json:"cardTechnology,omitempty"`

	//  Max length = 1, Card type.  Values are: V=VISA M=MasterCard J=JCB A=AMEX P=Private label
	CardType string `json:"cardType,omitempty"`

	//  Max length = 1, Cardholder Type: Code that indicates whether the card is issued as a primary or secondary card.  Values are: 0 = Additional Cardholder 1 = Primary Cardholder
	CardholderType string `json:"cardholderType,omitempty"`

	//  Max length = 40, City state: City portion of the customer address as defined on the Customer Name/Address record.
	City string `json:"city,omitempty"`

	//  Max length = 40, Address Line 1: First line of the address to which the card and PIN mailer is sent.
	CmsaAddr1 string `json:"cmsaAddr1,omitempty"`

	//  Max length = 40, Address Line 2: Second line of the address to which the card and PIN mailer is sent.
	CmsaAddr2 string `json:"cmsaAddr2,omitempty"`

	//  Max length = 40, City portion of the mailing address for cards and PIN mailers.
	CmsaCity string `json:"cmsaCity,omitempty"`

	//  Max length = 40, CMSA CITY-STATE
	CmsaCityState string `json:"cmsaCityState,omitempty"`

	//  Max length = 3, Country Code: Country portion of the mailing address.
	CmsaCntryCd string `json:"cmsaCntryCd,omitempty"`

	//  Max length = 30, County of the Customer.
	CmsaCounty string `json:"cmsaCounty,omitempty"`

	//  Max length = 40, Embosser Name 1: Name field 1 of the Cardholder, used for mailing card and PIN mailers.
	CmsaNameLine1 string `json:"cmsaNameLine1,omitempty"`

	//  Max length = 40, Embosser Name 2: Name field 2 of the cardholder, used for mailing card and PIN mailers.
	CmsaNameLine2 string `json:"cmsaNameLine2,omitempty"`

	//  Max length = 40, Name line 3 of the customer as defined on the Customer Name/Address record.
	CmsaNameLine3 string `json:"cmsaNameLine3,omitempty"`

	//  Max length = 10, Postal Code: Postal code portion of the mailing address.
	CmsaPstlCd string `json:"cmsaPstlCd,omitempty"`

	//  Max length = 3, State or province of the mailing address for card and PIN mailer.
	CmsaState string `json:"cmsaState,omitempty"`

	//  Max length = 3, Country Code: Country portion of the mailing address.
	CntryCd string `json:"cntryCd,omitempty"`

	//  Max length = 30, County of the Customer.
	County string `json:"county,omitempty"`

	//  Max length = 2, Chip Sequence number. Chip sequence number of the most recently issued card.
	CurrChipSeq string `json:"currChipSeq,omitempty"`

	//  Max length = 1, Current First usage flag: Indicates whether card activation needs to occur for the most recently issued card.  Values are:  'Y' - Card activation needs to occur  'N' - No card activation is required or card activation has already occurred   'D' - Card deactivated
	CurrFirstUsageFlag string `json:"currFirstUsageFlag,omitempty"`

	//  Max length = 19, Account Number: Number of Customer's account. Must be numeric and greater than zero. This can be either Account number or Card number.
	CustNbr string `json:"custNbr,omitempty"`

	// Format: YYYYMMDD. Card expiry date: Indicates the date on which the most recently issued card expires.
	DateExpire string `json:"dateExpire,omitempty"`

	// Format: YYYYMMDD. Date Last Address Change: Date when the address got last changed.
	DateLastAddrChange string `json:"dateLastAddrChange,omitempty"`

	// Format: YYYYMMDD. Card date last maintenance.
	DateLastMaint string `json:"dateLastMaint,omitempty"`

	// Format: YYYYMMDD. Date Last Plastic Issue: Date when the most recently issued card was produced.
	DateLstPlasticIssue string `json:"dateLstPlasticIssue,omitempty"`

	// Format: YYYYMMDD. Card Status Date. The date that current status was set or modified.
	DateStatus string `json:"dateStatus,omitempty"`

	// Format: YYYYMMDD. Date that a fraud card transfer for this embosser is effective.
	DateXfrEff string `json:"dateXfrEff,omitempty"`

	// Format: YYYYMMDD. Date of death.
	DeathDate string `json:"deathDate,omitempty"`

	// Format: YYYYMMDD. Date of notification of death.
	DeathDateNotify string `json:"deathDateNotify,omitempty"`

	// Format: YYYYMMDD. Customer's date of birth.
	Dob string `json:"dob,omitempty"`

	//  Max length = 60, Email: E-mail address of the cardholder.
	Email string `json:"email,omitempty"`

	//  Max length = 2, Number of times system tried to send EMAIL notification to customer and failed.
	EmailCntr string `json:"emailCntr,omitempty"`

	//  Max length = 1, Email Flag: code that indicates whether you have permission from the cardholder to Email. Values are:  0 - Do not send  1 - May be sent.  2 - Prefer to be sent.
	EmailFlag string `json:"emailFlag,omitempty"`

	//  Max length = 26, Embossed Name 1: Name embossed on the first embossing line of the card.
	EmbossedName1 string `json:"embossedName1,omitempty"`

	//  Max length = 26, Embossed Name 2: Name embossed on the second embossing line of the card.
	EmbossedName2 string `json:"embossedName2,omitempty"`

	//  Max length = 40, Embosser Name 1: Name field 1 of the Cardholder, used for mailing card and PIN mailers.
	EmbrName1 string `json:"embrName1,omitempty"`

	//  Max length = 40, Embosser Name 2: Name field 2 of the cardholder, used for mailing card and PIN mailers.
	EmbrName2 string `json:"embrName2,omitempty"`

	//  Max length = 20, Employee phone number of the accountholder.
	EmpPhone string `json:"empPhone,omitempty"`

	//  Max length = 40, Employer: Name of the employer of the cardholder.
	Employer string `json:"employer,omitempty"`

	//  Max length = 20, Fax number of the accountholder.
	FaxPhone string `json:"faxPhone,omitempty"`

	//  Max length = 40, First name: Field that identifies the first name of the cardholder.
	FirstName string `json:"firstName,omitempty"`

	//  Max length = 1, Gender code. Values are: 0 - Gender not specified 1 - Male 2 - Female
	GenderCd string `json:"genderCd,omitempty"`

	//  Max length = 20, Home phone number of the accountholder.
	HomePhone string `json:"homePhone,omitempty"`

	//  Max length = 1, Home Phone Flag: Code that specifies whether the customer grants permission to call this number.  Values are: 0 = No, do not contact the customer at this number 1 = Yes, you can contact the customer at this number (Default) 2 = Preferred contact method.
	HomePhoneFlag string `json:"homePhoneFlag,omitempty"`

	//  Max length = 40, House name of the customer.
	HouseName string `json:"houseName,omitempty"`

	//  Max length = 20, House number of the customer.
	HouseNumber string `json:"houseNumber,omitempty"`

	//  Max length = 1, ID Fraud: Value to indicate whether the customer has been the target of identity fraud.  Values are: 0 - Customer has not been the target of identity fraud 1 - Customer has been the target of identity fraud
	IDFraud string `json:"idFraud,omitempty"`

	//  Max length = 26, Cardholder name automatically generated for the account. The format for the name is defined in ISO-7816-3
	IsoCn string `json:"isoCn,omitempty"`

	//  Max length = 3, Language Indicator: User-defined code that indicates the language spoken by the customer.
	LanguageIndic string `json:"languageIndic,omitempty"`

	//  Max length = 1, Last card action. Last actions taken on the card such as issue/reissue, cancel the cards, or issue a PIN mailer.  Values are:  '0' - No action Required  '1' - New Cards  '2' - Additional Cards  '3' - Replacement Cards  '4' - Cancel Cards  '5' - PIN Request  '6' - Emergency Replacement  '7' - Reissue  '8' - Card number scheme reissue  '9' - Card transfer reissue  'A' - Additional Card to Account  'B' - Replacement Card and Pin Mailer  'R' - Random PIN  'L' - Lost Card Replacement.
	LastCardAction string `json:"lastCardAction,omitempty"`

	//  Max length = 40, Last name: field that identifies the last name of the cardholder.
	LastName string `json:"lastName,omitempty"`

	//  Max length = 2, Block code priority: values are 00-99 with 00 as the lowest priority and 99 as the highest priority.
	LbBcPriority string `json:"lbBcPriority,omitempty"`

	//  Max length = 1, Occurs 20 times - reissue flag, if a card item Valid values are: N = Do not reissue  Y = Reissue R = Report-No reissue D = Defer reissue
	LbBcReissueFlag string `json:"lbBcReissueFlag,omitempty"`

	//  Max length = 15, Block Code Description: description of block code.
	LbBcTitle string `json:"lbBcTitle,omitempty"`

	//  Max length = 20, Memorable Word, as selected by the customer.
	MemWrd string `json:"memWrd,omitempty"`

	// Format: YYYYMMDD. Memorable Word Date Last Updated.
	MemWrdDateLstUpd string `json:"memWrdDateLstUpd,omitempty"`

	//  Max length = 30, Memorable Word Reminder, used by the customer to remember the memorable word.
	MemWrdRem string `json:"memWrdRem,omitempty"`

	//  Max length = 60, User-defined information.
	Memo1 string `json:"memo1,omitempty"`

	//  Max length = 60, User-defined information.
	Memo2 string `json:"memo2,omitempty"`

	//  Max length = 40, Middle Name: Field that identifies the middle name of the cardholder.
	MiddleName string `json:"middleName,omitempty"`

	//  Max length = 20, Mobile number of the accountholder.
	MobilePhone string `json:"mobilePhone,omitempty"`

	//  Max length = 1, Mobile Phone Flag: Code that specifies whether the customer grants permission to  call this number.  Values are: 0 = No, do not contact the customer at this number 1 = Yes, you can contact the customer at this number (Default) 2 = Preferred contact method
	MobilePhoneFlag string `json:"mobilePhoneFlag,omitempty"`

	//  Max length = 1, Co Maker Indicator: Flag indicating the presence of Co-Maker (secondary or additional cardholder of the account) data within the customer record.  Values are:  1 - Maker  2 - Co-maker
	NaComakerInd string `json:"naComakerInd,omitempty"`

	// Format: YYYYMMDD. Date Last Maintenance: Date when the customer record got last modified/updated.
	NaDateLastMaint string `json:"naDateLastMaint,omitempty"`

	//  Max length = 1, Status: Code that indicates the status of the Customer Name/Address record. The values are: 0 = Active (Default) 1 = Closed 2 = Purge pending
	NaStatus string `json:"naStatus,omitempty"`

	//  Max length = 1, Name Type Indicator 1: Indicates the type of name. Values are: 0 = Personal name (Default) 1 = Business name 2 = Store name 3 = Generic name.
	NameTypeInd1 string `json:"nameTypeInd1,omitempty"`

	//  Max length = 1, Name Type Indicator 2: Indicates the type of name. Values are: 0 = Personal name (Default) 1 = Business name 2 = Store name 3 = Generic name.
	NameTypeInd2 string `json:"nameTypeInd2,omitempty"`

	//  Max length = 1, Name Type Indicator 3: Indicates the type of name. Values are: 0 = Personal name (Default) 1 = Business name 2 = Store name 3 = Generic name.
	NameTypeInd3 string `json:"nameTypeInd3,omitempty"`

	//  Max length = 20, Nationality of the customer.
	Nationality string `json:"nationality,omitempty"`

	//  Max length = 1, Phone Flag: Code that specifies whether the customer grants permission to call this number. The values are: 0 = No, do not contact the customer at this number 1 = Yes, you can contact the customer at this number (Default) 2 = Preferred contact method
	PhoneFlag string `json:"phoneFlag,omitempty"`

	//  Max length = 1, Pin Suppression Indicator. Flag indicating whether the PIN number and PIN mailer are produced. Values are:  0 - Yes, allow personal identification numbers (PINs)  1 - No, suppress PIN generation
	PinSuppression string `json:"pinSuppression,omitempty"`

	//  Max length = 40, Address Line 1: First line of the address to which the card and PIN mailer is sent.
	PmsaAddr1 string `json:"pmsaAddr1,omitempty"`

	//  Max length = 40, Address Line 2: Second line of the address to which the card and PIN mailer is sent.
	PmsaAddr2 string `json:"pmsaAddr2,omitempty"`

	//  Max length = 40, City portion of the mailing address for cards and PIN mailers.
	PmsaCity string `json:"pmsaCity,omitempty"`

	//  Max length = 40, City state: City portion of the customer address as defined on the Customer Name/Address record.
	PmsaCityState string `json:"pmsaCityState,omitempty"`

	//  Max length = 3, Country Code: Country portion of the mailing address.
	PmsaCntryCd string `json:"pmsaCntryCd,omitempty"`

	//  Max length = 30, County of the Customer.
	PmsaCounty string `json:"pmsaCounty,omitempty"`

	//  Max length = 40, Embosser Name 1: Name field 1 of the Cardholder, used for mailing card and PIN mailers.
	PmsaNameLine1 string `json:"pmsaNameLine1,omitempty"`

	//  Max length = 40, Embosser Name 2: Name field 2 of the cardholder, used for mailing card and PIN mailers.
	PmsaNameLine2 string `json:"pmsaNameLine2,omitempty"`

	//  Max length = 40, Name line 3 of the customer as defined on the Customer Name/Address record.
	PmsaNameLine3 string `json:"pmsaNameLine3,omitempty"`

	//  Max length = 10, Postal Code: Postal code portion of the mailing address.
	PmsaPstlCd string `json:"pmsaPstlCd,omitempty"`

	//  Max length = 3, State or province of the mailing address for card and PIN mailer.
	PmsaState string `json:"pmsaState,omitempty"`

	//  Max length = 3, POS Service Code: Code that indicates the type of point-of-sale service in effect for a card. The values for each digit depend on whether the card is a Visa, MasterCard, Europay, or private label card product.
	PosServiceCode string `json:"posServiceCode,omitempty"`

	// Format: YYYYMMDD. Date when the prior mailer was changed.
	PriorMailDate string `json:"priorMailDate,omitempty"`

	//  Max length = 10, Postal Code: Postal code portion of the mailing address.
	PstlCd string `json:"pstlCd,omitempty"`

	//  Max length = 40, Relative Name: Name of relative of the cardholder.
	RelativeName string `json:"relativeName,omitempty"`

	//  Max length = 2, Number of times system tried to send SMS notification to customer and failed.
	SmsCntr string `json:"smsCntr,omitempty"`

	//  Max length = 1, SMS Flag: code that indicates whether you have permission from the cardholder to SMS.  Values are:  0 - Do not send  1 - May be sent
	SmsFlag string `json:"smsFlag,omitempty"`

	//  Max length = 25, Social Security number (national Insurance number): field that identifies the SSN ,tax identification number or another user-defined identification number of the cardholder.
	Ssan string `json:"ssan,omitempty"`

	//  Max length = 1, Social Security number (national Insurance number) Flag: code that indicates the type of identification number held in the AMNA-SSAN field.  Values are: 0 - Social Security Number 1 - Tax Id Number 2 - Other ID 3 - National ID 4 - Tabiya ID 5 - Iqama ID 6 - Passport ID 7 - Diplomat ID 8 - National insurance number ID
	SsanFlag string `json:"ssanFlag,omitempty"`

	//  Max length = 3, State or province of the mailing address for card and PIN mailer.
	StPr string `json:"stPr,omitempty"`

	//  Max length = 1, Embosser Record Status. Values are: 0 -Permanent 1- Temporary F- Fraud S- Smart card manually reissued T - Permanent transfer out P - Purged
	Status string `json:"status,omitempty"`

	//  Max length = 20, Suffix: Field that identifies the suffix of the cardholder (ex. Jr., Sr.).
	Suffix string `json:"suffix,omitempty"`

	//  Max length = 20, Title: Professional or honorary title associated with the cardholder name entered in the NAME LINE 1 field.
	Title string `json:"title,omitempty"`

	//  Max length = 19, Unique ID: It identifies a customer uniquely.
	UniqueID string `json:"uniqueId,omitempty"`

	//  Max length = 40, Vacation Address line 3.
	VacAddr3 string `json:"vacAddr3,omitempty"`

	//  Max length = 3, Vacation Country Code: Used to store the vacation country code when the customer is on vacation.
	VacCntryCd string `json:"vacCntryCd,omitempty"`

	// Format: YYYYMMDD. Vacation End Date: date when the customer ends their vacation. This field is used together with the vacation start date to indicate whether the customer is currently on vacation.
	VacEndDate string `json:"vacEndDate,omitempty"`

	//  Max length = 20, Vacation Phone Number: Used to store a contact Phone Number that can be used while the customer is on vacation.
	VacPhoneNbr string `json:"vacPhoneNbr,omitempty"`

	// Format: YYYYMMDD. Vacation Start Date: date when the customer starts their vacation. This field is used together with the vacation end date to indicate whether the customer is currently on vacation.
	VacStartDate string `json:"vacStartDate,omitempty"`

	//  Max length = 19, Transfer Account Number: Number of the fraud account to which this Embosser record was transferred.
	XfrAcct string `json:"xfrAcct,omitempty"`

	//  Max length = 19, Transfer Card Number. Number of the Embosser record replacement associated with a fraud card transfer.
	XfrCardNbr string `json:"xfrCardNbr,omitempty"`
}

// Validate validates this card tbl for cardholder demographic list1
func (m *CardTblForCardholderDemographicList1) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CardTblForCardholderDemographicList1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CardTblForCardholderDemographicList1) UnmarshalBinary(b []byte) error {
	var res CardTblForCardholderDemographicList1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
