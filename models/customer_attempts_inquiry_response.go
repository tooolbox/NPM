// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CustomerAttemptsInquiryResponse customer attempts inquiry response
//
// swagger:model CustomerAttemptsInquiryResponse
type CustomerAttemptsInquiryResponse struct {

	// common
	Common *Header `json:"common,omitempty"`

	//  Max length = 2, Number of attempts sending letter to co-owner through e-mail.
	CoownerEmailAttempts string `json:"coownerEmailAttempts,omitempty"`

	//  Max length = 2, Number of attempts sending letter to co-owner through SMS.
	CoownerSmsAttempts string `json:"coownerSmsAttempts,omitempty"`

	//  Max length = 2, Threshold: Maximum number of attempts system will make to deliver electronic correspondence (SMS or e-mail messages). values are: 00 = Not used. LTS/CMS will not increment the SMS FAILED CNTR and EMAIL FAILED CNTR fields if failed confirmation records are received. (Default) 01-99 = Electronic correspondence failed message threshold (maximum number of attempts VisionPLUS will make to deliver electronic correspondence).
	EcThreshold string `json:"ecThreshold,omitempty"`

	//  Max length = 1, Email Exceeded Indicator: Customer e-mail counter exceeded the organization threshold-predefined limit. The values are: 1 = Owner e-mail exceeded 2 = Co-owner e-mail exceeded 3 = Both exceeded
	EmailExceeded string `json:"emailExceeded,omitempty"`

	//  Max length = 2, Number of attempts sending letter to owner through e-mail.
	OwnerEmailAttempts string `json:"ownerEmailAttempts,omitempty"`

	//  Max length = 2, Number of attempts sending letter to owner through SMS.
	OwnerSmsAttempts string `json:"ownerSmsAttempts,omitempty"`

	//  Max length = 2, For  future  use.
	ResvCode1 string `json:"resvCode1,omitempty"`

	//  Max length = 2, For  future  use.
	ResvCode2 string `json:"resvCode2,omitempty"`

	//  Max length = 2, For  future  use.
	ResvCode3 string `json:"resvCode3,omitempty"`

	//  Max length = 2, For  future  use.
	ResvCode4 string `json:"resvCode4,omitempty"`

	//  Max length = 2, For  future  use.
	ResvCode5 string `json:"resvCode5,omitempty"`

	// Format: YYYYMMDD. For  future  use.
	ResvDate1 string `json:"resvDate1,omitempty"`

	// Format: YYYYMMDD. For  future  use.
	ResvDate2 string `json:"resvDate2,omitempty"`

	// Format: YYYYMMDD. For  future  use.
	ResvDate3 string `json:"resvDate3,omitempty"`

	// Format: YYYYMMDD. For  future  use.
	ResvDate4 string `json:"resvDate4,omitempty"`

	// Format: YYYYMMDD. For  future  use.
	ResvDate5 string `json:"resvDate5,omitempty"`

	//  Max length = 1, SMS Exceeded Indicator: Customer SMS counter exceeded the organization threshold-predefined limit. The values are: 1 = Owner SMS exceeded 2 = Co-owner SMS exceeded 3 = Both exceeded
	SmsExceeded string `json:"smsExceeded,omitempty"`
}

// Validate validates this customer attempts inquiry response
func (m *CustomerAttemptsInquiryResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCommon(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CustomerAttemptsInquiryResponse) validateCommon(formats strfmt.Registry) error {

	if swag.IsZero(m.Common) { // not required
		return nil
	}

	if m.Common != nil {
		if err := m.Common.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("common")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CustomerAttemptsInquiryResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CustomerAttemptsInquiryResponse) UnmarshalBinary(b []byte) error {
	var res CustomerAttemptsInquiryResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
