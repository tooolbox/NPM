// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RelationshipInquiryResponse2 relationship inquiry response2
//
// swagger:model RelationshipInquiryResponse2
type RelationshipInquiryResponse2 struct {

	//  Max length = 19, Account Number: Identification Number of Customer's account.
	Acct string `json:"acct,omitempty"`

	//  Max length = 1, Alternate Customer Flag: Code that indicates how CMS generates statements and other correspondence when an alt. Customer Name/Address record exists for the account.  Values are:  0 - Alt cust not used 1 - Alt Cust present 2 - Alt Cust Active
	AcctAltCustFlag string `json:"acctAltCustFlag,omitempty"`

	//  Max length = 19, Alternate Customer Number: Number that identifies the alternate (temporary) Customer Name/Address record containing an alternate address for statements.
	AcctAltCustNbr string `json:"acctAltCustNbr,omitempty"`

	//  Max length = 2, Billing cycle of the relationship and it defaults to all the sub-ordinate accounts. Valid values are from 01 to 31.
	AcctBillingCycle string `json:"acctBillingCycle,omitempty"`

	//  Max length = 1, Billing level for the relationship. Value in this field defines the default billing level for each sub-ordinate account added to the relationship.  Values are: 0 - Bill at relationship level 1 - Bill at sub-ordinate level (Default) 2 - Combined billing either at relationship or subordinate level
	AcctBillingLevel string `json:"acctBillingLevel,omitempty"`

	//  Max length = 19, Customer number: Customer number that identifies the Customer Name/Address record to which this sub account is assigned.
	AcctCustNbr string `json:"acctCustNbr,omitempty"`

	// Format: YYYYMMDD. Prior mail date: Date from which the previous mailing information of the customer/owner was effective.
	AcctPriorMailDate string `json:"acctPriorMailDate,omitempty"`

	//  Max length = 20, Number of the below account type populated in this field. It could be a relationship, customer or account number.
	AcctRelType string `json:"acctRelType,omitempty"`

	//  Max length = 1, Account Type: Code that identifies the type of account processed by the logo. Values are: B = Bad checks/NSF checks C = COD accounts D = Debit card L = Layaway P = Profit and loss R = Revolving, which is also referred to as retail or private label (Default) X = Bankcard Y = Bankcard-prepaid NOTE: Values D, X and Y are valid types of bankcard accounts.
	AcctType string `json:"acctType,omitempty"`

	//  Max length = 2, Customer Account's add status in the system.
	AddStatus string `json:"addStatus,omitempty"`

	//  Max length = 19, Alternate Customer Number: Number that identifies the alternate (temporary) Customer Name/Address record containing an alternate address for statements.
	AltCustNbr string `json:"altCustNbr,omitempty"`

	//  Max length = 17, Total amount of cycle-to-date cash.
	AmtCtdCash string `json:"amtCtdCash,omitempty"`

	//  Max length = 17, Amount of cycle-to-date collection fees.
	AmtCtdCollFees string `json:"amtCtdCollFees,omitempty"`

	//  Max length = 17, Cycle to date late fee amount charged on the account.
	AmtCtdLateFees string `json:"amtCtdLateFees,omitempty"`

	//  Max length = 17, Amount of cycle-to-date load and subsequent reloads on a prepaid account
	AmtCtdLoads string `json:"amtCtdLoads,omitempty"`

	//  Max length = 17, Amount of cycle-to-date membership fees.
	AmtCtdMembFees string `json:"amtCtdMembFees,omitempty"`

	//  Max length = 17, Amount of Non-Sufficient-Funds on an account in a cycle to date period.
	AmtCtdNsf string `json:"amtCtdNsf,omitempty"`

	//  Max length = 17, Amount of cycle-to-date non-sufficient fund fees.
	AmtCtdNsfFees string `json:"amtCtdNsfFees,omitempty"`

	//  Max length = 17, Amount of cycle-to-date overlimit fees.
	AmtCtdOvlmFees string `json:"amtCtdOvlmFees,omitempty"`

	//  Max length = 17, Total amount of cycle-to-date purchases.
	AmtCtdPurchases string `json:"amtCtdPurchases,omitempty"`

	//  Max length = 17, Amount of cycle-to-date recovery fees.
	AmtCtdRecovFees string `json:"amtCtdRecovFees,omitempty"`

	//  Max length = 17, Total amount of cycle-to-date returns.
	AmtCtdReturns string `json:"amtCtdReturns,omitempty"`

	//  Max length = 17, Amount of declined auths, cycle to date.
	AmtDeclCtd string `json:"amtDeclCtd,omitempty"`

	//  Max length = 17, Amount of disputed items.
	AmtDispuItems string `json:"amtDispuItems,omitempty"`

	//  Max length = 17, Amount of outstanding memo credits for the account.
	AmtMemoCr string `json:"amtMemoCr,omitempty"`

	//  Max length = 17, Amount of outstanding memo debits for the account.
	AmtMemoDb string `json:"amtMemoDb,omitempty"`

	//  Max length = 17, Net Memo amount.
	AmtNetMemos string `json:"amtNetMemos,omitempty"`

	//  Max length = 1, Code that indicates the type of association with the account. The values are: 0 - Not used (Default) 1 - Guarantor 2 - Cosigner 3 - Authorized signer 4 - 3rd Party Insurance 5 - 9 - User defined
	AssocType string `json:"assocType,omitempty"`

	//  Max length = 3, Identification number of the commercial card authorization criteria table assigned to the account. Table number in this field defaults to all sub-ordinate accounts in the relationship and to all embosser records added to the sub-ordinate accounts.
	AuthCriteriaTbl string `json:"authCriteriaTbl,omitempty"`

	//  Max length = 1, Code that indicates whether the OTB electronic notification is enabled at the account level. Valid values are:  0 - OTB Message off 1 - OTB Message on
	AuthOtbMsgInd string `json:"authOtbMsgInd,omitempty"`

	//  Max length = 1, Flag that indicates whether the automatic reload option is active for this account. This value default from the product configuration. 0 - Automatic reload not active for this account (Default) 1 - Automatic reload is active for this account.
	AutoRldActInd string `json:"autoRldActInd,omitempty"`

	//  Max length = 17, Current open-to-buy amount/available credit of the account.
	AvailCredit string `json:"availCredit,omitempty"`

	//  Max length = 3, Billing Currency: ISO currency code used to generate converted memo-billing information on statements for this account.
	BillingCurr string `json:"billingCurr,omitempty"`

	//  Max length = 2, Billing Cycle: Cycle code that indicates the day of the month that CMS Performs cycle processing for the account.  Values are: 01-31.
	BillingCycle string `json:"billingCycle,omitempty"`

	//  Max length = 1, Billing level for the relationship. Value in this field defines the default billing level for each sub-ordinate account added to the relationship.  Values are: 0 - Bill at relationship level 1 - Bill at sub-ordinate level (Default) 2 - Combined billing either at relationship or subordinate level
	BillingLvl string `json:"billingLvl,omitempty"`

	//  Max length = 1, Relationship Block Code. Block code assigned to the relationship account and it controls the specific processing options at relationship level.
	BlockCode string `json:"blockCode,omitempty"`

	//  Max length = 1, Account Block Code 1 - Block codes control specific processing options at the account level.
	BlockCode1 string `json:"blockCode1,omitempty"`

	//  Max length = 2, Block code 1 priority: values are 00-99 with 00 as the lowest priority and 99 as the highest priority.
	BlockCode1Priority string `json:"blockCode1Priority,omitempty"`

	//  Max length = 1, Account Block Code 2 - Block codes control specific processing options at the account level.
	BlockCode2 string `json:"blockCode2,omitempty"`

	//  Max length = 2, Block code 2 priority: values are 00-99 with 00 as the lowest priority and 99 as the highest priority.
	BlockCode2Priority string `json:"blockCode2Priority,omitempty"`

	//  Max length = 1, Flag that indicates whether the account is a commercial account. Valid values are:  0 - Not commercial 1 - Corporate card 2 - Purchase card 1,2 - Commercial
	BsCommrclFlag string `json:"bsCommrclFlag,omitempty"`

	//  Max length = 19, Next Card Number: Field contains the card number details of the last record populated in the card table area.
	CardNbrNext string `json:"cardNbrNext,omitempty"`

	//  Max length = 19, Previous Card Number: Field contains the card number details of the first record populated in the card table area.
	CardNbrPrev string `json:"cardNbrPrev,omitempty"`

	//  Max length = 3, Next card organization: Three digit identification number of the organization to which the embosser record is associated. This field contains the detail of the last record populated in the card table area.
	CardOrgNext string `json:"cardOrgNext,omitempty"`

	//  Max length = 3, Previous card organization: Three digit identification number of the organization to which the embosser record is associated. This field contains the detail of the first record populated in the card table area.
	CardOrgPrev string `json:"cardOrgPrev,omitempty"`

	//  Max length = 4, Next Card Number Sequence: Field contains the sequence of the card number associated to the card number next field.
	CardSeqNext string `json:"cardSeqNext,omitempty"`

	//  Max length = 4, Previous Card Number Sequence: Field contains the sequence of the card number associated to the card number previous field.
	CardSeqPrev string `json:"cardSeqPrev,omitempty"`

	// Occurs 20 times
	CardTable []*CardTable2ForRelationshipInquiry2 `json:"cardTable"`

	//  Max length = 17, Cash Available Credit: Amount of cash credit limit available on the account.
	CashAvailCredit string `json:"cashAvailCredit,omitempty"`

	//  Max length = 17, Current cash balance of the account.
	CashBalance string `json:"cashBalance,omitempty"`

	//  Max length = 17, Cash Credit Limit: Total cash credit limit established for this account.
	CashCrlim string `json:"cashCrlim,omitempty"`

	//  Max length = 17, Amount of cash credit limit for the account.
	CashLimit string `json:"cashLimit,omitempty"`

	//  Max length = 4, Total number of blocked cards.
	CciCardsBlocked string `json:"cciCardsBlocked,omitempty"`

	//  Max length = 4, Total cards linked to the account.
	CciCardsTotal string `json:"cciCardsTotal,omitempty"`

	//  Max length = 4, Total number of unblocked cards.
	CciCardsUnblocked string `json:"cciCardsUnblocked,omitempty"`

	//  Max length = 2, Chargeoff Reason. Code that identifies the charge-off reason for the account. The first position is system-defined and identifies the charge-off reason.  Values are: 'C'  - Credit loss 'B' -  Bankruptcy 'F' - Fraud loss 'T' - Counterfeit The second position is user-defined and further describes the charge-off reason. Example: C1 could indicate credit loss due to death. C2 could indicate credit loss due to another reason.
	ChgoffReason string `json:"chgoffReason,omitempty"`

	//  Max length = 1, Charge Off Status: Code that identifies the charge-off status of this account.  Values are: 0 = Not charged off (Default) 1 = Potential (within 60 days of automatic charge off) 2 = Pending (within 30 days of automatic charge off) 3 = Manual 4 = Blocked 5 = Automatically completed 6 = Manually completed 9 = Account abandoned.
	ChgoffStatus string `json:"chgoffStatus,omitempty"`

	//  Max length = 2, Collateral Code: User-defined code that indicates the type of collateral attached to this account.
	ColatCode string `json:"colatCode,omitempty"`

	// Format: YYYYMMDD. Co-maker's date of birth.
	ComakerDob string `json:"comakerDob,omitempty"`

	// common
	Common *Header `json:"common,omitempty"`

	//  Max length = 1, Flag that indicates whether this is a commercial card relationship. The values are: 0 = Not a commercial card relationship (Default) 1 = Visa corporate card relationship 2 = Visa purchasing card relationship 3 = HCS commercial card relationship, which can include Visa corporate cards, Visa purchasing cards, and/or MasterCard purchasing cards 4 = Non-HCS commercial card.
	CommrclFlag string `json:"commrclFlag,omitempty"`

	//  Max length = 1, Condition of account: Field that indicates whether the account is past due, delinquent or current. Values are: 0 - Current due 1 - Past due 2 - Delinquent
	CondOfAcct string `json:"condOfAcct,omitempty"`

	//  Max length = 19, Identification number of the Customer Name/Address record for the corporation to which the purchasing card is assigned.
	CorpCustNbr string `json:"corpCustNbr,omitempty"`

	//  Max length = 10, Number used to associate relationships and hierarchies for corporate commercial card customers. The value entered in this field defaults to all subordinate accounts in the relationship.
	CorpIDNbr string `json:"corpIdNbr,omitempty"`

	//  Max length = 16, Number used to associate cardholder-initiated transactions to the relationship.
	CostCntrRpt string `json:"costCntrRpt,omitempty"`

	//  Max length = 17, Credit limit in whole monetary units which defaults to each sub-ordinate account in the relationship.
	CrLimitDflt string `json:"crLimitDflt,omitempty"`

	//  Max length = 17, Amount of credit available in whole monetary units to be assigned to sub-ordinate accounts in the relationship.
	CreditAvail string `json:"creditAvail,omitempty"`

	//  Max length = 17, Total credit limit for the relationship.
	CreditLimit string `json:"creditLimit,omitempty"`

	//  Max length = 17, Credit Limit: Credit limit of the account in monetary units.
	Crlim string `json:"crlim,omitempty"`

	//  Max length = 17, Cycle-to-date billed user fee 1 charged on the account.
	CtdBilledUserFee1 string `json:"ctdBilledUserFee1,omitempty"`

	//  Max length = 17, Cycle-to-date billed user fee 2 charged on the account.
	CtdBilledUserFee2 string `json:"ctdBilledUserFee2,omitempty"`

	//  Max length = 17, Cycle-to-date billed user fee 3 charged on the account.
	CtdBilledUserFee3 string `json:"ctdBilledUserFee3,omitempty"`

	//  Max length = 17, Cycle-to-date billed user fee 4 charged on the account.
	CtdBilledUserFee4 string `json:"ctdBilledUserFee4,omitempty"`

	//  Max length = 17, Cycle-to-date billed user fee 5 charged on the account.
	CtdBilledUserFee5 string `json:"ctdBilledUserFee5,omitempty"`

	//  Max length = 17, Cycle-to-date billed user fee 6 charged on the account.
	CtdBilledUserFee6 string `json:"ctdBilledUserFee6,omitempty"`

	//  Max length = 17, Cycle to date cash advance service charge amount charged on the account.
	CtdCashAdvSvchg string `json:"ctdCashAdvSvchg,omitempty"`

	//  Max length = 17, Amount of cycle-to-date billed pre pay fees.
	CtdFeesBilled string `json:"ctdFeesBilled,omitempty"`

	//  Max length = 17, Total amount of cycle-to-date insurance premium.
	CtdInsurancePrem string `json:"ctdInsurancePrem,omitempty"`

	//  Max length = 17, Cycle to date service charge amount charged on the account.
	CtdServiceCharge string `json:"ctdServiceCharge,omitempty"`

	//  Max length = 17, Current balance: Total current balance of all credit plan segments associated with the account.
	CurrBal string `json:"currBal,omitempty"`

	//  Max length = 3, Current Collector: Code or initials that identify the collector currently assigned to the account.
	CurrColl string `json:"currColl,omitempty"`

	// Format: YYYYMMDD. Month and year the contract expires for the commercial card customer. System uses this field to determine card issue and re-issue dates.
	CurrExpDte string `json:"currExpDte,omitempty"`

	//  Max length = 17, Current year-to-date interest paid.
	CurrYtdIntPaid string `json:"currYtdIntPaid,omitempty"`

	//  Max length = 3, Currency Code: ISO currency code that identifies the unit of currency for this account.
	CurrencyCode string `json:"currencyCode,omitempty"`

	//  Max length = 1, Currency NOD: Number of decimal positions to the right of the decimal point (or other decimal character) in monetary amount fields.
	CurrencyNod string `json:"currencyNod,omitempty"`

	//  Max length = 19, Customer number: Customer number that identifies the Customer Name/Address record to which this account is assigned.
	CustNbr string `json:"custNbr,omitempty"`

	//  Max length = 3, Customer organization: Three digit Identification number of the organization.
	CustOrg string `json:"custOrg,omitempty"`

	//  Max length = 3, Customer organization: Three digit Identification number of the organization.
	CustomerOrg string `json:"customerOrg,omitempty"`

	// Format: YYYYMMDD. Effective expiry date of the alternate customer address linked to the account.
	DateAltCustExpr string `json:"dateAltCustExpr,omitempty"`

	// Format: YYYYMMDD. Date when the block code 1 applied on the account.
	DateBlockCode1 string `json:"dateBlockCode1,omitempty"`

	// Format: YYYYMMDD. Date when the block code 2 applied on the account.
	DateBlockCode2 string `json:"dateBlockCode2,omitempty"`

	// Format: YYYYMMDD. Card expiration date assigned to each Embosser record added to this account.  This field automatically defaults down to the embosser record (AMED) when a new embosser record is added.
	DateCardExpr string `json:"dateCardExpr,omitempty"`

	// Format: YYYYMMDD. Date the annual card membership fee is assessed on the account.
	DateCardFee string `json:"dateCardFee,omitempty"`

	// Format: YYYYMMDD. Date when the account is charged-off.
	DateCgoff string `json:"dateCgoff,omitempty"`

	// Format: YYYYMMDD. Date when the account is closed.
	DateClosed string `json:"dateClosed,omitempty"`

	// Format: YYYYMMDD. Date when credit limit was assigned.
	DateCrlim string `json:"dateCrlim,omitempty"`

	// Format: YYYYMMDD. Date the account went into collections.
	DateIntoColl string `json:"dateIntoColl,omitempty"`

	// Format: YYYYMMDD. Date of last payment.
	DateLastPmt string `json:"dateLastPmt,omitempty"`

	// Format: YYYYMMDD. Date when the last status change of the account.
	DateLastStatChg string `json:"dateLastStatChg,omitempty"`

	// Format: YYYYMMDD. Date on which the last statement was generated.
	DateLastStmt string `json:"dateLastStmt,omitempty"`

	// Format: YYYYMMDD. Next statement date: Date on which CMS generates the next regular statement for the account.
	DateNextStmt string `json:"dateNextStmt,omitempty"`

	// Format: YYYYMMDD. Date Opened: Date on which the account was opened.
	DateOpened string `json:"dateOpened,omitempty"`

	// Format: YYYYMMDD. Payment due date: Date when the next payment is due.
	DatePmtDue string `json:"datePmtDue,omitempty"`

	// Format: YYYYMMDD. Temporary Credit Limit Expiry date: Date when the temporary credit limit expires on the account.
	DateTempCrlimExp string `json:"dateTempCrlimExp,omitempty"`

	// Format: YYYYMMDD. Effective date of the transfer. Value corresponds to the transferred to or transferred from account details depending on the record being displayed.
	DateXfrEff string `json:"dateXfrEff,omitempty"`

	//  Max length = 1, Payment reversal counter: Counter that accumulates the number of payment reversals life-todate to a maximum value of 9.
	DdPmtRevCtr string `json:"ddPmtRevCtr,omitempty"`

	//  Max length = 2, User-defined employee code: Code that indicates that the accountholder is an employee.
	EmployeeCode string `json:"employeeCode,omitempty"`

	//  Max length = 3, Foreign organization of the relationship record.
	ForeignOrg string `json:"foreignOrg,omitempty"`

	//  Max length = 1, Foreign Use Indicator. Field that indicates whether the account is a local or foreign account. Populates the value which is sent in input request.
	ForeignUse string `json:"foreignUse,omitempty"`

	//  Max length = 9, Number of frequent shopper points adjusted (manually or automatic) during this statement cycle.
	FsTotCtdAdj string `json:"fsTotCtdAdj,omitempty"`

	//  Max length = 9, Number of frequent shopper points this customer received (disbursed through check, certificate, or credit) either automatically or manually during the current statement cycle.
	FsTotCtdDisb string `json:"fsTotCtdDisb,omitempty"`

	//  Max length = 9, Number of frequent shopper points this customer earned during the current statement cycle.
	FsTotCtdEarned string `json:"fsTotCtdEarned,omitempty"`

	//  Max length = 1, Code that indicates if Equal Payment Plan is enabled for the organization. Valid values are: 0 = No, EPP processing not active (Default) 1 = Yes, EPP processing active.
	GetDollarOEppActiveInd string `json:"get$OEppActiveInd,omitempty"`

	//  Max length = 1, Code that indicates whether the letter system is installed and active. Valid values are: N - No (Default) Y - Yes
	GetDollarSLtsInterfaceFlag string `json:"get$SLtsInterfaceFlag,omitempty"`

	//  Max length = 1, Flag that indicates whether the Offer Management System (OMS) is active. The values are: 0 = Inactive (Default) 1 = Active.
	GetDollarSOmsInterfaceFlag string `json:"get$SOmsInterfaceFlag,omitempty"`

	//  Max length = 17, Most recent open-to-buy update received from the Issuer Banking System (IBS) interface for this debit card account.
	IbsCrlim string `json:"ibsCrlim,omitempty"`

	// Format: YYYYMMDD. Date of the most recent open-to-buy update received from the Issuer Banking System (IBS) interface for this debit card account.
	IbsDate string `json:"ibsDate,omitempty"`

	//  Max length = 17, Direct Debit /Checking account number.
	IbsDdaAcctNbr string `json:"ibsDdaAcctNbr,omitempty"`

	//  Max length = 10, ABA-assigned routing and transit number that identifies the financial institution at which the direct debit / checking account is held.
	IbsDdaRtngNbr string `json:"ibsDdaRtngNbr,omitempty"`

	//  Max length = 17, Customers Savings account number.
	IbsSavAcctNbr string `json:"ibsSavAcctNbr,omitempty"`

	//  Max length = 10, ABA-assigned routing and transit number that identifies the financial institution at which the savings account is held.
	IbsSavRtngNbr string `json:"ibsSavRtngNbr,omitempty"`

	//  Max length = 7, Time of the most recent open-to-buy update received from the Issuer Banking System (IBS) interface for this debit card account.
	IbsTime string `json:"ibsTime,omitempty"`

	//  Max length = 1, Status: Code that identifies the status of the account.  Values are: A = Active B = Conversion fraud C = Conversion transfer D = Dormant F = Fraud transfer H = Closed/conversion I = Inactive J = Transfer in, migrated from inactive K = Transfer out, migrated from inactive M = Migrated N = New P = To be purged in next reload Q = Transfer in today R = Transfer out today T = Transfer V = Conversion X = Charge-off/conversion Z = Charge-off 8 = Closed 9 = To be purged after reload.
	IntStatus string `json:"intStatus,omitempty"`

	//  Max length = 17, Last Credit limit assigned to the account in monetary units.
	LastCrlim string `json:"lastCrlim,omitempty"`

	//  Max length = 17, Last year-to-date Interest: Total amount of interest billed on the account during the prior year.
	LastYtdInt string `json:"lastYtdInt,omitempty"`

	//  Max length = 1, Code that indicates whether the OTB electronic notification is enabled at the product level. Based on this, the values will be populated at the account level. Valid values are:  0 - Off 1 - Manual 2 - Auto
	LbAuthOtbMsgInd string `json:"lbAuthOtbMsgInd,omitempty"`

	//  Max length = 15, Corresponding description of block code 1.
	LbBcTitle1 string `json:"lbBcTitle1,omitempty"`

	//  Max length = 15, Corresponding description of block code 2.
	LbBcTitle2 string `json:"lbBcTitle2,omitempty"`

	//  Max length = 30, Product description. This description enables you to identify the kind of accounts processed by this logo.
	LbDescription string `json:"lbDescription,omitempty"`

	//  Max length = 1, Code that indicates whether EPP processing is enabled for the logo/product. The values are: 0 = No, EPP processing is not active (Default) 1 = Yes, EPP processing is active.
	LbEppActive string `json:"lbEppActive,omitempty"`

	//  Max length = 1, Flag that indicates whether the loan feature is active for the logo/product. If this feature is active accounts under this product are allowed to have loan credit plans. The values are: 0 = No, the loans feature is not active for this logo (Default) 1 = Yes, the loans feature is active for this logo.
	LbInstallLoanFlag string `json:"lbInstallLoanFlag,omitempty"`

	//  Max length = 1, Flag that indicates if the Loyalty Management System (LMS) is active for this logo. The values are: 0 = LMS is not active for this logo (Default) 1 = LMS is active for this logo.
	LbLmsActiveFlag string `json:"lbLmsActiveFlag,omitempty"`

	//  Max length = 1, Code that indicates the action to be taken for enhance PIN and card warehousing when the corresponding card action is processed. The values are: 0 = Do not use. Do not generate PIN and do not send PIN mailer. (Default) 1 = Generate new PIN and send PIN mailer. 2 = Send PIN mailer with existing PIN.
	LbPGen string `json:"lbPGen,omitempty"`

	//  Max length = 3, Letter Org: Correspondence management business unit(letter organization) mapped at the product level.
	LbPcfLtrOrg string `json:"lbPcfLtrOrg,omitempty"`

	//  Max length = 1, Skip payment flag: Code that indicates whether manual skip payments are allowed for accounts in this logo. The values are: N = Skip payments are not allowed (Default) Y = Skip payments are allowed.
	LbPmtSkipAllowed string `json:"lbPmtSkipAllowed,omitempty"`

	//  Max length = 1, Same day embossing flag : Code that indicates whether same-day embossing is allowed for the accounts within the logo/product.  The values are: 0 = Same-day embossing is not allowed (Default) 1 = Same-day embossing is allowed.
	LbSdpFlag string `json:"lbSdpFlag,omitempty"`

	//  Max length = 2, Number of days that CMS allows authorization on the old ('transfer from') account after a product transfer or smart card transfer.
	LbXfrAuthDays string `json:"lbXfrAuthDays,omitempty"`

	//  Max length = 17, Total balance of all loan credit plans on this account.
	LoanBalance string `json:"loanBalance,omitempty"`

	//  Max length = 17, Amount of the loan credit limit for the account.
	LoanLimit string `json:"loanLimit,omitempty"`

	//  Max length = 1, Local use indicator: Field that indicates whether card can be used internationally. Values are: 0 - Can be used outside the country of issue. 1 - Can be used only within the country of issue.
	LocalUseInd string `json:"localUseInd,omitempty"`

	//  Max length = 3, Identification number of the logo.
	Logo string `json:"logo,omitempty"`

	// Format: YYYYMMDD. Customer's date of birth.
	MakerDob string `json:"makerDob,omitempty"`

	//  Max length = 1, Flag that indicates the MasterCard products offered by the company for which external reporting is supported. The values are: 0 = Not used (Default) 1 = MasterCard corporate products only 2 = MasterCard purchasing products only 3 = Both MasterCard corporate and purchasing products.
	McFlag string `json:"mcFlag,omitempty"`

	//  Max length = 17, Memo Balance  is the sum of sub-ordinates account (Current balance + Memo debit - Memo credit amounts)
	MemoBal string `json:"memoBal,omitempty"`

	//  Max length = 17, Memo Cash (Cash balance + Outstanding Cash auths)
	MemoCash string `json:"memoCash,omitempty"`

	//  Max length = 1, More Data Flag: Flag to indicate if there is more data which can be obtained. Valid Values: N - No more data to display Y - More data to display
	MoreDataFlag string `json:"moreDataFlag,omitempty"`

	// Occur 4 times
	NaData []*NaData2ForRelationshipInquiry2 `json:"naData"`

	//  Max length = 2, Indicates the number of Name and Address records exists for this cutomer record. When there is only maker exists on the account will have a value of '1' and if there are both make and co-maker thene this will a have of '2'.
	NaNbrOccur string `json:"naNbrOccur,omitempty"`

	//  Max length = 5, Number of cycle-to-date cash transactions.
	NbrCtdCash string `json:"nbrCtdCash,omitempty"`

	//  Max length = 3, Number of Cycle to date late fees charged on the account.
	NbrCtdLateFees string `json:"nbrCtdLateFees,omitempty"`

	//  Max length = 5, Number of cycle-to-date load and subsequent reloads on a prepaid account.
	NbrCtdLoads string `json:"nbrCtdLoads,omitempty"`

	//  Max length = 3, Number of cycle-to-day NSF transactions on an account.
	NbrCtdNsf string `json:"nbrCtdNsf,omitempty"`

	//  Max length = 5, Number of cycle-to-date purchases.
	NbrCtdPurchases string `json:"nbrCtdPurchases,omitempty"`

	//  Max length = 5, Number of cycle-to-date return transactions.
	NbrCtdReturns string `json:"nbrCtdReturns,omitempty"`

	//  Max length = 3, Number of declined auths, cycle to date.
	NbrDeclCtd string `json:"nbrDeclCtd,omitempty"`

	//  Max length = 2, Number of insurance Products for this Account.
	NbrInsProd string `json:"nbrInsProd,omitempty"`

	//  Max length = 2, Field that indicates the number of loan plans on the account.
	NbrLoanPlans string `json:"nbrLoanPlans,omitempty"`

	//  Max length = 3, Number of payments returned due to nonsufficient funds (NSF).
	NbrNsf string `json:"nbrNsf,omitempty"`

	//  Max length = 5, Number of credit plans associated with this account.
	NbrPlans string `json:"nbrPlans,omitempty"`

	//  Max length = 2, Number of items returned in the card table.
	NbrReturnedItems string `json:"nbrReturnedItems,omitempty"`

	//  Max length = 3, Number of Returned Payments: Total number of payments returned for this account, which includes NSF payment reversal transactions.
	NbrRtnPmts string `json:"nbrRtnPmts,omitempty"`

	//  Max length = 5, Number of subordinate accounts linked to this relationship record.
	NbrSubAccts string `json:"nbrSubAccts,omitempty"`

	//  Max length = 5, Number of unblocked outstanding cards (plastic) for this account. The value in this field is system-generated; you cannot change it.
	NbrUnblkedCards string `json:"nbrUnblkedCards,omitempty"`

	//  Max length = 17, Net payment due amount for the relationship. Calculated field and is the difference between the relationship's total payment due less the relationship's cycle-to-date payments.
	NetPmtDue string `json:"netPmtDue,omitempty"`

	//  Max length = 2, OLC reason: Field that indicates the reason the account is in collections.
	OlcReason string `json:"olcReason,omitempty"`

	//  Max length = 1, ORG ACS INTERFACE FLAG
	OrgAcsInterfaceFlag string `json:"orgAcsInterfaceFlag,omitempty"`

	// Format: YYYYMMDD. ORG CAL DATE LAST PROC
	OrgCalDateLastProc string `json:"orgCalDateLastProc,omitempty"`

	// Format: YYYYMMDD. ORG CAL DATE NEXT PROC
	OrgCalDateNextProc string `json:"orgCalDateNextProc,omitempty"`

	// Format: YYYYMMDD. Processing date from the Org record
	OrgCalTodaysDate string `json:"orgCalTodaysDate,omitempty"`

	//  Max length = 1, ORG MKT STATUS
	OrgMktStatus string `json:"orgMktStatus,omitempty"`

	//  Max length = 17, Amount of cash credit limit available for cash transaction authorizations for the relationship.
	OtbCashAvail string `json:"otbCashAvail,omitempty"`

	//  Max length = 17, Current outstanding amount of cash portion of the current balance.
	OtbCashBalance string `json:"otbCashBalance,omitempty"`

	//  Max length = 17, Sum of current balances for all sub-ordinate accounts in the relationship.
	OtbCurrentBalance string `json:"otbCurrentBalance,omitempty"`

	//  Max length = 40, OUT NAME ADDR 1
	OutNameAddr1 string `json:"outNameAddr1,omitempty"`

	//  Max length = 1, Over limit Flag: Flag that indicates whether CMS includes or excludes overlimit amounts from the account cycle-ending balance. Values are: 0 = Include overlimit amounts in the account cycle-ending balance (Default) 1 = Exclude all overlimit amounts from the account cycle-ending balance subject to insurance calculation.
	OverlimitFlag string `json:"overlimitFlag,omitempty"`

	//  Max length = 3, Permanent Collector: Code or initials used to identify the permanent collector assigned to the account.
	PermColl string `json:"permColl,omitempty"`

	//  Max length = 3, Number of times payment has been 120 to 149 days delinquent.
	Pmt120DaysCtr string `json:"pmt120DaysCtr,omitempty"`

	//  Max length = 17, Amount of payment that is 120 to 149 days past due.
	Pmt120days string `json:"pmt120days,omitempty"`

	//  Max length = 3, Number of times payment has been 150 to 179 days delinquent.
	Pmt150DaysCtr string `json:"pmt150DaysCtr,omitempty"`

	//  Max length = 17, Amount of payment that is 150 to 179 days past due.
	Pmt150days string `json:"pmt150days,omitempty"`

	//  Max length = 3, Number of times payment has been 180 to 209 days delinquent.
	Pmt180DaysCtr string `json:"pmt180DaysCtr,omitempty"`

	//  Max length = 17, Amount of payment that is 180 to 209 days past due.
	Pmt180days string `json:"pmt180days,omitempty"`

	//  Max length = 3, Number of times payment has been 210+ days delinquent.
	Pmt210DaysCtr string `json:"pmt210DaysCtr,omitempty"`

	//  Max length = 17, Amount of payment that is 210+ days past due.
	Pmt210days string `json:"pmt210days,omitempty"`

	//  Max length = 17, Amount of payment that is 30 to 59 days past due.
	Pmt30days string `json:"pmt30days,omitempty"`

	//  Max length = 3, Number of times payment has been 30 to 59 days delinquent.
	Pmt30daysCtr string `json:"pmt30daysCtr,omitempty"`

	//  Max length = 17, Amount of payment that is 60 to 89 days past due.
	Pmt60days string `json:"pmt60days,omitempty"`

	//  Max length = 3, Number of times payment has been 60 to 89 days delinquent.
	Pmt60daysCtr string `json:"pmt60daysCtr,omitempty"`

	//  Max length = 17, Amount of payment that is 90 to 119 days past due.
	Pmt90days string `json:"pmt90days,omitempty"`

	//  Max length = 3, Number of times payment has been 90 to 119 days delinquent.
	Pmt90daysCtr string `json:"pmt90daysCtr,omitempty"`

	//  Max length = 17, Pre-Paid Payment Amount: Field that holds payments that are allowed to be made in advance. Not related to Prepaid card functionality.
	PmtAmtPrepaid string `json:"pmtAmtPrepaid,omitempty"`

	//  Max length = 17, Accumulated amount of all payments cycle-to-date.
	PmtCtd string `json:"pmtCtd,omitempty"`

	//  Max length = 3, Number of cycle-to-date payments.
	PmtCtdNbr string `json:"pmtCtdNbr,omitempty"`

	//  Max length = 17, Amount of payment currently due (not including delinquent amounts).
	PmtCurrDue string `json:"pmtCurrDue,omitempty"`

	//  Max length = 1, Payment Cycle Due: Code that identifies the level of contractual delinquency. The contractual delinquency (also called the cycle due code), indicates the number of cycles for which payments are due.  Values are  0 - No amount is due; account is current  1 - Current amount is due; not past due  2 - Amount is past due 1-29 days (or X days)  3 - 30 days  4 - 60 days  5 - 90 days  6 - 120 days  7 - 150 days  8 - 180 days  9 - 210+ days
	PmtCycleDue string `json:"pmtCycleDue,omitempty"`

	//  Max length = 17, Last payment received for the account.
	PmtLastAmt string `json:"pmtLastAmt,omitempty"`

	//  Max length = 3, Number of times the account has been past due 1- 29 days.
	PmtPastCtr string `json:"pmtPastCtr,omitempty"`

	//  Max length = 17, Amount of Payment Past Due.
	PmtPastDue string `json:"pmtPastDue,omitempty"`

	//  Max length = 17, Total amount due of the account. This includes the current amount due and any past due amounts.
	PmtTotAmtDue string `json:"pmtTotAmtDue,omitempty"`

	//  Max length = 17, Total Payment Amount Due.
	PmtTotPastDue string `json:"pmtTotPastDue,omitempty"`

	//  Max length = 1, Account level prepaid flag. Indicates the type of prepaid account. Valid values are: 1 - Generic 2 - Demographics on file 3 - Personalization pending 4 - Personalized
	PrepaidFlag string `json:"prepaidFlag,omitempty"`

	//  Max length = 1, Account level flag which indicates the type of prepaid card/account. Valid values are: 1 - Disposable prepaid 2  - Reloadable prepaid
	PrepaidType string `json:"prepaidType,omitempty"`

	//  Max length = 17, Projected amount of the direct debit calculated on the cycle date.
	ProjAchPmt string `json:"projAchPmt,omitempty"`

	//  Max length = 19, Primary account number of this relationship.
	RelAcctNbr string `json:"relAcctNbr,omitempty"`

	//  Max length = 1, Card numbering scheme that determines the card numbers that are assigned to Embosser records associated with the account. Values are: 0 - non relationship account in which the account number and all card numbers are the same. 1 - relationship account in which the account number and all card numbers are the same 2 - for accounts within a retail logo only. Account and all card numbers are the same, but each card has a unique sequence number. 3 - accounts and all card numbers are unique.
	RelCardScheme string `json:"relCardScheme,omitempty"`

	//  Max length = 19, Identification of the customer number associated with this relationship record.
	RelCistNbr string `json:"relCistNbr,omitempty"`

	//  Max length = 17, Relationship Credit Limit: Credit limit of the relationship account in monetary units.
	RelCrlim string `json:"relCrlim,omitempty"`

	//  Max length = 26, Relationship Name: Identification Name of the relationship record for the particular customer or entity.
	RelName string `json:"relName,omitempty"`

	//  Max length = 19, Relationship Number: Identifcation number to which the account and customer number of the cardholder are linked to.
	RelNbr string `json:"relNbr,omitempty"`

	//  Max length = 2, Number of relationship record returned in the response message.
	RelNumberOccurs string `json:"relNumberOccurs,omitempty"`

	//  Max length = 1, Relationship Primary Account Flag: Flag that indicates whether the account is the primary account in the relationship.  Values are:  'P' - Primary Account  space - Not Primary Account
	RelPrimAcctFlag string `json:"relPrimAcctFlag,omitempty"`

	//  Max length = 1, Code that indicates if more records are on file.  The valid values are: Y - Yes N - No
	RrMoreInd string `json:"rrMoreInd,omitempty"`

	//  Max length = 2, Returned Mail Counter: Number of times mail was returned for the cardholder account.
	RtnMailCtr string `json:"rtnMailCtr,omitempty"`

	// Format: YYYYMMDD. Returned Mail Date: Field that indicates the date of the previously returned mail.
	RtnMailDate string `json:"rtnMailDate,omitempty"`

	//  Max length = 20, Short name: Short name of the account holder.
	ShortName string `json:"shortName,omitempty"`

	//  Max length = 3, State Of Issue:  When a account has a Bankcard Logo (Logo Type value of X), this field identifies the PCT, used for pricing options (interest, fees, account control, insurance). If account has a non-Bankcard Logo, this code identifies the state, province, or country in which the account was issued.
	StateOfIssue string `json:"stateOfIssue,omitempty"`

	//  Max length = 1, Statement Flag: Code that indicates how CMS generates a statement for this account.  Values are: Space - Normal statement (Default) 'C' - Cycle statement 'I' - Interim statement 'O' - Online/archive-only statement 'H' - Hold statement 'R' - Returned statement 'S' - Sign out statement '0' - User-defined statement hold code 10 '1'-'9' - User-defined statement hold code 1 to 9 'U' - Suppress statement 'Z' - User-defined value that suppresses statement generation 'T' - Archive statement
	StatementFlag string `json:"statementFlag,omitempty"`

	//  Max length = 1, Status: Stauts of the relationship record. Valid Values are: 1 - Active 0 - Inactive 8 - Closed 9 - Purged
	Status string `json:"status,omitempty"`

	//  Max length = 17, Balance of the relationship at the beginning of the last billing cycle, which is the sum of the beginning balances of all consolidated subordinate accounts within the relationship.
	StmtBegBal string `json:"stmtBegBal,omitempty"`

	//  Max length = 17, Amount of credits in the last billing cycle for the relationship. This field displays the sum of the credits for all consolidated subordinate accounts within the relationship.
	StmtCr string `json:"stmtCr,omitempty"`

	// Format: YYYYMMDD. Current statement date of the relationship.
	StmtCurrDte string `json:"stmtCurrDte,omitempty"`

	//  Max length = 17, Amount of debits in the last billing cycle for the relationship. This field displays the sum of the debits for all consolidated subordinate accounts within the relationship.
	StmtDb string `json:"stmtDb,omitempty"`

	//  Max length = 17, Statement ending balance, which is the sum of the ending balances of all consolidated subordinate accounts within the relationship.
	StmtEndBal string `json:"stmtEndBal,omitempty"`

	//  Max length = 2, Statement Frequency: Code that indicates how often CMS generates statements for the account.  Values are: 01 - 12 - Frequency at which to generate a statement, in months.   62 - Generate a statement during the next CMS daily run. If the account is not scheduled to cycle during the next daily run, an interim statement is produced.  99 - Do not generate statements. CMS maintains account activity on the Online Accumulated Transactions file
	StmtFreq string `json:"stmtFreq,omitempty"`

	//  Max length = 17, Current payment due for the relationship, which is the sum of the current payment due of all consolidated subordinate accounts within the relationship.
	StmtPmtDue string `json:"stmtPmtDue,omitempty"`

	// Format: YYYYMMDD. Date the payment is due for the relationship.
	StmtPmtDueDate string `json:"stmtPmtDueDate,omitempty"`

	//  Max length = 17, Total amount past due for the relationship, which is the sum of the total past due of all consolidated subordinate accounts within the relationship.
	StmtTotPastDue string `json:"stmtTotPastDue,omitempty"`

	//  Max length = 17, Sum of the total payment amount due for all consolidated subordinate accounts in the relationship, including the current payment due and the total past due.
	StmtTotPmtDue string `json:"stmtTotPmtDue,omitempty"`

	//  Max length = 1, Code that determines the detail level at which statements will be produced.  The values are:  0 = Produce a relationship statement with summary subordinate account statements (Default) 1 = Produce a relationship statement and detailed subordinate account statements.
	StmtType string `json:"stmtType,omitempty"`

	// Occurs 50 times.
	SubAcctData []*SubAcctData2ForRelationshipInquiry2 `json:"subAcctData"`

	//  Max length = 1, Code that indicates whether the letter suppression is active at account level. Valid values are: 0 - Do not suppress 1 - Suppress letters
	SuppLtr string `json:"suppLtr,omitempty"`

	//  Max length = 19, Starting account number tied to the relationship account.
	SvcStartAcctNbr string `json:"svcStartAcctNbr,omitempty"`

	//  Max length = 17, Temporary line of credit for the account in whole monetary units.
	TempCrlim string `json:"tempCrlim,omitempty"`

	//  Max length = 17, Credit Limit: Credit limit in whole monetary units for the relationship account/record which includes all the sub-ordinate account in the relationship.
	TotalCrLmt string `json:"totalCrLmt,omitempty"`

	//  Max length = 1, TYPE: Value which identifies or denotes the type of number in the ACCT_REL_TYPE field.  0 - Account 1 - Customer 2 - Relationship
	Type string `json:"type,omitempty"`

	//  Max length = 19, User Account Number: User-defined account number.
	UserAcctNbr string `json:"userAcctNbr,omitempty"`

	//  Max length = 2, User defined code 1.  User-defined codes used for customized information about the account.
	UserCode1 string `json:"userCode1,omitempty"`

	//  Max length = 2, User defined code 10.  User-defined codes used for customized information about the account.
	UserCode10 string `json:"userCode10,omitempty"`

	//  Max length = 2, User defined code 11.  User-defined codes used for customized information about the account.
	UserCode11 string `json:"userCode11,omitempty"`

	//  Max length = 2, User defined code 12.  User-defined codes used for customized information about the account.
	UserCode12 string `json:"userCode12,omitempty"`

	//  Max length = 2, User defined code 13.  User-defined codes used for customized information about the account.
	UserCode13 string `json:"userCode13,omitempty"`

	//  Max length = 2, User defined code 14.  User-defined codes used for customized information about the account.
	UserCode14 string `json:"userCode14,omitempty"`

	//  Max length = 2, User defined code 2.  User-defined codes used for customized information about the account.
	UserCode2 string `json:"userCode2,omitempty"`

	//  Max length = 2, User defined code 3.  User-defined codes used for customized information about the account.
	UserCode3 string `json:"userCode3,omitempty"`

	//  Max length = 2, User defined code 4.  User-defined codes used for customized information about the account.
	UserCode4 string `json:"userCode4,omitempty"`

	//  Max length = 2, User defined code 5.  User-defined codes used for customized information about the account.
	UserCode5 string `json:"userCode5,omitempty"`

	//  Max length = 2, User defined code 6.  User-defined codes used for customized information about the account.
	UserCode6 string `json:"userCode6,omitempty"`

	//  Max length = 2, User defined code 7.  User-defined codes used for customized information about the account.
	UserCode7 string `json:"userCode7,omitempty"`

	//  Max length = 2, User defined code 8.  User-defined codes used for customized information about the account.
	UserCode8 string `json:"userCode8,omitempty"`

	//  Max length = 2, User defined code 9.  User-defined codes used for customized information about the account.
	UserCode9 string `json:"userCode9,omitempty"`

	//  Max length = 1, Flag that indicates the Visa products offered by the company for which external reporting is supported. The values are: 0 = Not used (Default) 1 = Visa corporate products only 2 = Visa purchasing products only 3 = Both Visa corporate and purchasing products.
	VisaFlag string `json:"visaFlag,omitempty"`

	// Warning Code: User defined field used by FirstVision authorisations to perform qualifying credit tests.  Values are:  '0' - Normal authorisations (Default)  '1' - Decline  '2' - Decline and pick up  '3' - Decline with fraud code  '4' - Decline with referral  '8' - Decline with a user exit  '9' - VIP account; always approve.
	WarningCode []string `json:"warningCode"`

	//  Max length = 19, Transfer Account: Account Number of the transferred account.
	XfrAcct string `json:"xfrAcct,omitempty"`

	//  Max length = 3, Transfer Logo: Identification number of the logo of the transferred account.
	XfrLogo string `json:"xfrLogo,omitempty"`

	//  Max length = 3, Transfer organization: Three digit Identification number of the organization of the transferred account.
	XfrOrg string `json:"xfrOrg,omitempty"`
}

// Validate validates this relationship inquiry response2
func (m *RelationshipInquiryResponse2) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCardTable(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCommon(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNaData(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSubAcctData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RelationshipInquiryResponse2) validateCardTable(formats strfmt.Registry) error {

	if swag.IsZero(m.CardTable) { // not required
		return nil
	}

	for i := 0; i < len(m.CardTable); i++ {
		if swag.IsZero(m.CardTable[i]) { // not required
			continue
		}

		if m.CardTable[i] != nil {
			if err := m.CardTable[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("cardTable" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *RelationshipInquiryResponse2) validateCommon(formats strfmt.Registry) error {

	if swag.IsZero(m.Common) { // not required
		return nil
	}

	if m.Common != nil {
		if err := m.Common.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("common")
			}
			return err
		}
	}

	return nil
}

func (m *RelationshipInquiryResponse2) validateNaData(formats strfmt.Registry) error {

	if swag.IsZero(m.NaData) { // not required
		return nil
	}

	for i := 0; i < len(m.NaData); i++ {
		if swag.IsZero(m.NaData[i]) { // not required
			continue
		}

		if m.NaData[i] != nil {
			if err := m.NaData[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("naData" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *RelationshipInquiryResponse2) validateSubAcctData(formats strfmt.Registry) error {

	if swag.IsZero(m.SubAcctData) { // not required
		return nil
	}

	for i := 0; i < len(m.SubAcctData); i++ {
		if swag.IsZero(m.SubAcctData[i]) { // not required
			continue
		}

		if m.SubAcctData[i] != nil {
			if err := m.SubAcctData[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("subAcctData" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *RelationshipInquiryResponse2) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RelationshipInquiryResponse2) UnmarshalBinary(b []byte) error {
	var res RelationshipInquiryResponse2
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
