// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// LoyaltyDemographicStatusUpdateRequest loyalty demographic status update request
//
// swagger:model LoyaltyDemographicStatusUpdateRequest
type LoyaltyDemographicStatusUpdateRequest struct {

	//  Max length = 19, Account Number: Number of Customer's account. Must be numeric and greater than zero.
	// Max Length: 19
	// Min Length: 0
	AcctNbr *string `json:"acctNbr,omitempty"`

	// common
	Common *Header `json:"common,omitempty"`

	//  Max length = 1, New Status: Status to assign to the Account Demographics record. The values are: 1 = Active 6 = Closed 9 = Purged If CURRENT STATUS is 1 (active), NEW STATUS can be set to 6 (closed) or 9 (purged) If CURRENT STATUS is 6 (closed), NEW STATUS can be set to1 (active) or 9 (purged) If CURRENT STATUS is 9 (purged), NEW STATUS can be set to 6 (closed)
	// Max Length: 1
	// Min Length: 0
	NewStat *string `json:"newStat,omitempty"`
}

// Validate validates this loyalty demographic status update request
func (m *LoyaltyDemographicStatusUpdateRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAcctNbr(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCommon(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNewStat(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LoyaltyDemographicStatusUpdateRequest) validateAcctNbr(formats strfmt.Registry) error {

	if swag.IsZero(m.AcctNbr) { // not required
		return nil
	}

	if err := validate.MinLength("acctNbr", "body", string(*m.AcctNbr), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("acctNbr", "body", string(*m.AcctNbr), 19); err != nil {
		return err
	}

	return nil
}

func (m *LoyaltyDemographicStatusUpdateRequest) validateCommon(formats strfmt.Registry) error {

	if swag.IsZero(m.Common) { // not required
		return nil
	}

	if m.Common != nil {
		if err := m.Common.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("common")
			}
			return err
		}
	}

	return nil
}

func (m *LoyaltyDemographicStatusUpdateRequest) validateNewStat(formats strfmt.Registry) error {

	if swag.IsZero(m.NewStat) { // not required
		return nil
	}

	if err := validate.MinLength("newStat", "body", string(*m.NewStat), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("newStat", "body", string(*m.NewStat), 1); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LoyaltyDemographicStatusUpdateRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LoyaltyDemographicStatusUpdateRequest) UnmarshalBinary(b []byte) error {
	var res LoyaltyDemographicStatusUpdateRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
