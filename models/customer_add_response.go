// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CustomerAddResponse customer add response
//
// swagger:model CustomerAddResponse
type CustomerAddResponse struct {

	//  Max length = 19, Account Number from the AMBS file of the customer.
	BsAcct string `json:"bsAcct,omitempty"`

	// common
	Common *Header `json:"common,omitempty"`

	//  Max length = 19, Customer number: Customer number that identifies the Customer Name/Address record to which this account is assigned.
	CustNbr string `json:"custNbr,omitempty"`

	//  Max length = 1, Field to indicate whether you want CMS to add a duplicate customer record in the associated organization for dual currency processing. The values are: 0 = Do not duplicate the customer record in the associated organization (Default) 1 = Duplicate the customer record in the associated organization.
	DualFlag string `json:"dualFlag,omitempty"`

	//  Max length = 3, Foreign Account Organization: Three digit Identification number of the organization.
	ForeignAcctOrg string `json:"foreignAcctOrg,omitempty"`

	//  Max length = 3, Foreign Customer Organization: Three digit Identification number of the organization.
	ForeignCustOrg string `json:"foreignCustOrg,omitempty"`

	//  Max length = 3, Local Account Organization: Three digit Identification number of the organization.
	LocalAcctOrg string `json:"localAcctOrg,omitempty"`

	//  Max length = 3, Local Customer Organization: Three digit Identification number of the organization.
	LocalCustOrg string `json:"localCustOrg,omitempty"`

	//  Max length = 1, Co Maker Indicator: Flag indicating the presence of Co-Maker (secondary or additional owner of the account) data within the customer record.  Values are:  1 - Maker  2 - Co-maker
	NaComakerInd string `json:"naComakerInd,omitempty"`
}

// Validate validates this customer add response
func (m *CustomerAddResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCommon(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CustomerAddResponse) validateCommon(formats strfmt.Registry) error {

	if swag.IsZero(m.Common) { // not required
		return nil
	}

	if m.Common != nil {
		if err := m.Common.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("common")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CustomerAddResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CustomerAddResponse) UnmarshalBinary(b []byte) error {
	var res CustomerAddResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
