// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SdTblForStatementDateInquiry1 sd tbl for statement date inquiry1
//
// swagger:model SdTblForStatementDateInquiry1
type SdTblForStatementDateInquiry1 struct {

	//  Max length = 19, SD ACCT NBR
	SdAcctNbr string `json:"sdAcctNbr,omitempty"`

	// Format: YYYYMMDD. Statement ID Code: Code that puts the statements records into descending date sequence.   Must be numeric. Must be a valid date. The statement date is stored in the Small and Large Statement file in CMS. Date format is CCYY-MM-DD.
	SdStmtDt string `json:"sdStmtDt,omitempty"`

	//  Max length = 1, Statement Indicator: Populates the statement recap and recap history record types in this field. Values are: 1 = Detail statement (includes summary) - Recap record 2 = Summary only - Recap record history
	SdStmtInd string `json:"sdStmtInd,omitempty"`
}

// Validate validates this sd tbl for statement date inquiry1
func (m *SdTblForStatementDateInquiry1) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SdTblForStatementDateInquiry1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SdTblForStatementDateInquiry1) UnmarshalBinary(b []byte) error {
	var res SdTblForStatementDateInquiry1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
