// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LoyaltyRedemptionInquiryResponse loyalty redemption inquiry response
//
// swagger:model LoyaltyRedemptionInquiryResponse
type LoyaltyRedemptionInquiryResponse struct {

	//  Max length = 19, LMS Account number that identifies the Points Account record
	AcctNbr string `json:"acctNbr,omitempty"`

	// Format: YYYYMMDD. Transactions Batch Date.
	BtchDte string `json:"btchDte,omitempty"`

	// common
	Common *Header `json:"common,omitempty"`

	//  Max length = 19, Customers Card Number
	CrdNbr string `json:"crdNbr,omitempty"`

	//  Max length = 1, Code that indicates whether more records are on file. Values are: N = No more records on file Y = More records on file
	MoreInd string `json:"moreInd,omitempty"`

	//  Max length = 3, Sequence Number within 99996 batch.
	SeqNbr string `json:"seqNbr,omitempty"`

	// Occurs 10 Times
	TxnData []*TxnDataForLoyaltyRedemptionInquiry1 `json:"txnData"`
}

// Validate validates this loyalty redemption inquiry response
func (m *LoyaltyRedemptionInquiryResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCommon(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTxnData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LoyaltyRedemptionInquiryResponse) validateCommon(formats strfmt.Registry) error {

	if swag.IsZero(m.Common) { // not required
		return nil
	}

	if m.Common != nil {
		if err := m.Common.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("common")
			}
			return err
		}
	}

	return nil
}

func (m *LoyaltyRedemptionInquiryResponse) validateTxnData(formats strfmt.Registry) error {

	if swag.IsZero(m.TxnData) { // not required
		return nil
	}

	for i := 0; i < len(m.TxnData); i++ {
		if swag.IsZero(m.TxnData[i]) { // not required
			continue
		}

		if m.TxnData[i] != nil {
			if err := m.TxnData[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("txnData" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *LoyaltyRedemptionInquiryResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LoyaltyRedemptionInquiryResponse) UnmarshalBinary(b []byte) error {
	var res LoyaltyRedemptionInquiryResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
