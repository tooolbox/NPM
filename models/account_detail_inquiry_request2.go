// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AccountDetailInquiryRequest2 account detail inquiry request2
//
// swagger:model AccountDetailInquiryRequest2
type AccountDetailInquiryRequest2 struct {

	//  Max length = 19, Account Number: Number of Customer's account. Must be numeric and greater than zero. This can be either Account number or Card number.
	// Required: true
	// Max Length: 19
	// Min Length: 0
	Account *string `json:"account"`

	// common
	Common *Header `json:"common,omitempty"`

	//  Max length = 5, Scheme Details
	// Max Length: 5
	// Min Length: 0
	Scheme *string `json:"scheme,omitempty"`
}

// Validate validates this account detail inquiry request2
func (m *AccountDetailInquiryRequest2) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCommon(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateScheme(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AccountDetailInquiryRequest2) validateAccount(formats strfmt.Registry) error {

	if err := validate.Required("account", "body", m.Account); err != nil {
		return err
	}

	if err := validate.MinLength("account", "body", string(*m.Account), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("account", "body", string(*m.Account), 19); err != nil {
		return err
	}

	return nil
}

func (m *AccountDetailInquiryRequest2) validateCommon(formats strfmt.Registry) error {

	if swag.IsZero(m.Common) { // not required
		return nil
	}

	if m.Common != nil {
		if err := m.Common.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("common")
			}
			return err
		}
	}

	return nil
}

func (m *AccountDetailInquiryRequest2) validateScheme(formats strfmt.Registry) error {

	if swag.IsZero(m.Scheme) { // not required
		return nil
	}

	if err := validate.MinLength("scheme", "body", string(*m.Scheme), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("scheme", "body", string(*m.Scheme), 5); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AccountDetailInquiryRequest2) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AccountDetailInquiryRequest2) UnmarshalBinary(b []byte) error {
	var res AccountDetailInquiryRequest2
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
