// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ProductBlockCodeListResponse product block code list response
//
// swagger:model ProductBlockCodeListResponse
type ProductBlockCodeListResponse struct {

	//  Max length = 19, Account Number: Number of Customer's account. Must be numeric and greater than zero. This can be either Account number or Card number.
	AcctCard string `json:"acctCard,omitempty"`

	// common
	Common *Header `json:"common,omitempty"`

	//  Max length = 1, Account Block Code 1 - Block codes control specific processing options at the account level.
	CurrAcctBc1 string `json:"currAcctBc1,omitempty"`

	//  Max length = 2, Account level block code 1 priority.
	CurrAcctBc1Priority string `json:"currAcctBc1Priority,omitempty"`

	//  Max length = 15, Account level block code 1 description
	CurrAcctBc1Title string `json:"currAcctBc1Title,omitempty"`

	//  Max length = 1, Account Block Code 2 - Block codes control specific processing options at the account level.
	CurrAcctBc2 string `json:"currAcctBc2,omitempty"`

	//  Max length = 2, Account level block code 2 priority.
	CurrAcctBc2Priority string `json:"currAcctBc2Priority,omitempty"`

	//  Max length = 15, Account level block code 2 description
	CurrAcctBc2Title string `json:"currAcctBc2Title,omitempty"`

	//  Max length = 1, Embosser/Card Block code
	CurrBc string `json:"currBc,omitempty"`

	//  Max length = 2, Embosser level block code priority.
	CurrBcPriority string `json:"currBcPriority,omitempty"`

	//  Max length = 15, Embosser level block code description.
	CurrBcTitle string `json:"currBcTitle,omitempty"`

	//  Max length = 3, Identification number of the logo.
	Logo string `json:"logo,omitempty"`

	//  Max length = 2, Number of block code retrieved based on the input request condition.
	NbrValidBc string `json:"nbrValidBc,omitempty"`

	// Group Variable: Occurs 27 times and displays the block codes based on the input service request.
	ValidBcTable []*ValidBcTableForProductBlockCodeList1 `json:"validBcTable"`
}

// Validate validates this product block code list response
func (m *ProductBlockCodeListResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCommon(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValidBcTable(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ProductBlockCodeListResponse) validateCommon(formats strfmt.Registry) error {

	if swag.IsZero(m.Common) { // not required
		return nil
	}

	if m.Common != nil {
		if err := m.Common.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("common")
			}
			return err
		}
	}

	return nil
}

func (m *ProductBlockCodeListResponse) validateValidBcTable(formats strfmt.Registry) error {

	if swag.IsZero(m.ValidBcTable) { // not required
		return nil
	}

	for i := 0; i < len(m.ValidBcTable); i++ {
		if swag.IsZero(m.ValidBcTable[i]) { // not required
			continue
		}

		if m.ValidBcTable[i] != nil {
			if err := m.ValidBcTable[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("validBcTable" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ProductBlockCodeListResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProductBlockCodeListResponse) UnmarshalBinary(b []byte) error {
	var res ProductBlockCodeListResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
