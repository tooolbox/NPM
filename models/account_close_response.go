// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AccountCloseResponse account close response
//
// swagger:model AccountCloseResponse
type AccountCloseResponse struct {

	//  Max length = 19, Account Number: Identification Number of Customer's account is returned if account number was provided on the input message.
	AcctNbr string `json:"acctNbr,omitempty"`

	//  Max length = 1, Account Status: Identifies the c/o stat update to the account or the status assigned to the account based on the function indicator returned on the output as defined on the input request.
	AcctStatus string `json:"acctStatus,omitempty"`

	//  Max length = 19, Unique Card Number embossed on card plastic is returned if card number was provided on the input message.
	CardNbr string `json:"cardNbr,omitempty"`

	//  Max length = 2, Charge Off Reason: Identifies the reason code assigned to the account by the service. This field is populated if the function indicator is 2 or if the function indicator is 1 and a reason code was supplied on the input message.
	ChgoffReason string `json:"chgoffReason,omitempty"`

	// common
	Common *Header `json:"common,omitempty"`

	//  Max length = 3, Organization Number is returned in this field if update was for the foreign account.
	ForeignOrg string `json:"foreignOrg,omitempty"`

	//  Max length = 1, Foreign Use Indicator from input.
	ForeignUse string `json:"foreignUse,omitempty"`

	//  Max length = 1, Identifies which function was performed on the account.  Values are: 0 - account close 1 - account manual charge off 2 - account charge off with reason code defined on ARML24
	FunctionCode string `json:"functionCode,omitempty"`

	//  Max length = 3, Identification number of the logo.
	Logo string `json:"logo,omitempty"`
}

// Validate validates this account close response
func (m *AccountCloseResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCommon(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AccountCloseResponse) validateCommon(formats strfmt.Registry) error {

	if swag.IsZero(m.Common) { // not required
		return nil
	}

	if m.Common != nil {
		if err := m.Common.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("common")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AccountCloseResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AccountCloseResponse) UnmarshalBinary(b []byte) error {
	var res AccountCloseResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
