// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RealTimePaymentwithMemoResponse real time paymentwith memo response
//
// swagger:model RealTimePaymentwithMemoResponse
type RealTimePaymentwithMemoResponse struct {

	//  Max length = 19, Account Number: Identification Number of Customer's account.
	Account string `json:"account,omitempty"`

	//  Max length = 3, Identification number of the logo.
	AccountLogo string `json:"accountLogo,omitempty"`

	//  Max length = 3, Organization Number: Three digit Identification number of the organization.  Valid values are 001 - 998. Organization number must be on file.
	AccountOrg string `json:"accountOrg,omitempty"`

	//  Max length = 17, Current open-to-buy amount of the account.
	AvailCredit string `json:"availCredit,omitempty"`

	// common
	Common *Header `json:"common,omitempty"`

	//  Max length = 17, Total credit limit established for this account
	CreditLimit string `json:"creditLimit,omitempty"`

	//  Max length = 17, Current balance: Total current balance of all credit plan segments associated with the account.
	CurrBal string `json:"currBal,omitempty"`

	//  Max length = 3, Currency Code at Org Level: ISO currency code that identifies the unit of currency for this account.
	CurrencyCode string `json:"currencyCode,omitempty"`

	//  Max length = 1, Currency NOD: Number of decimal positions to the right of the decimal point (or other decimal character) in monetary amount fields.
	CurrencyNod string `json:"currencyNod,omitempty"`

	//  Max length = 1, Dual Account Indicator: Value received from Input.  Values are: L = Local account F = Foreign account
	DualInd string `json:"dualInd,omitempty"`

	// Format: YYYYMMDD. Effective date of the transfer Date fomat is CCYYMMDD.
	EffDate string `json:"effDate,omitempty"`

	//  Max length = 23, Payment reference Number.
	PymtRefNbr string `json:"pymtRefNbr,omitempty"`

	//  Max length = 9, Merchant Store Number: Identification number of the Mechant Store. This field is used when the OFXRSI-SERVICE-FLAG is set to 'A' i.e. if Reversal is being triggered for a transaction.
	StoreNbr string `json:"storeNbr,omitempty"`

	//  Max length = 17, Total Real Time Payment.
	TotRelPmt string `json:"totRelPmt,omitempty"`

	//  Max length = 17, Must be numeric Must be formatted in whole monetary and subunits (no decimal point) Must be within limits allowed for ASM rep. Cannot be signed if associated with a prepaid transaction
	TxnAmount string `json:"txnAmount,omitempty"`

	//  Max length = 3, Transaction code number.
	TxnCode string `json:"txnCode,omitempty"`

	//  Max length = 40, Description of the transaction code.
	TxnDesc string `json:"txnDesc,omitempty"`
}

// Validate validates this real time paymentwith memo response
func (m *RealTimePaymentwithMemoResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCommon(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RealTimePaymentwithMemoResponse) validateCommon(formats strfmt.Registry) error {

	if swag.IsZero(m.Common) { // not required
		return nil
	}

	if m.Common != nil {
		if err := m.Common.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("common")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *RealTimePaymentwithMemoResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RealTimePaymentwithMemoResponse) UnmarshalBinary(b []byte) error {
	var res RealTimePaymentwithMemoResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
