// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InstantCreditFlagUpdateRequest instant credit flag update request
//
// swagger:model InstantCreditFlagUpdateRequest
type InstantCreditFlagUpdateRequest struct {

	//  Max length = 19, Account Number: Number of Customer's account. Must be numeric and greater than zero. This can be either Account number or Card number.
	// Required: true
	// Max Length: 19
	// Min Length: 0
	AccountNbr *string `json:"accountNbr"`

	// common
	Common *Header `json:"common,omitempty"`

	//  Max length = 1, Credit status of account during instant credit period.  Values are: 0- Instant credit funct. inactive or temp CL does not expire upon card activation (Default) 1- Temp CL entered at account boarding; is to expire when card is activated 2- Temp CL expired. CL Change report (O23) and ASM memo gen. are pending 3- Temp CL expired. O23 and ASM memo gen. are complete 4- Temp CL reached exp. date before card is activated 9- Instant credit number is lost/stolen. Block auths that use this number
	// Required: true
	// Max Length: 1
	// Min Length: 0
	InstantCreditFlag *string `json:"instantCreditFlag"`
}

// Validate validates this instant credit flag update request
func (m *InstantCreditFlagUpdateRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccountNbr(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCommon(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateInstantCreditFlag(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *InstantCreditFlagUpdateRequest) validateAccountNbr(formats strfmt.Registry) error {

	if err := validate.Required("accountNbr", "body", m.AccountNbr); err != nil {
		return err
	}

	if err := validate.MinLength("accountNbr", "body", string(*m.AccountNbr), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("accountNbr", "body", string(*m.AccountNbr), 19); err != nil {
		return err
	}

	return nil
}

func (m *InstantCreditFlagUpdateRequest) validateCommon(formats strfmt.Registry) error {

	if swag.IsZero(m.Common) { // not required
		return nil
	}

	if m.Common != nil {
		if err := m.Common.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("common")
			}
			return err
		}
	}

	return nil
}

func (m *InstantCreditFlagUpdateRequest) validateInstantCreditFlag(formats strfmt.Registry) error {

	if err := validate.Required("instantCreditFlag", "body", m.InstantCreditFlag); err != nil {
		return err
	}

	if err := validate.MinLength("instantCreditFlag", "body", string(*m.InstantCreditFlag), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("instantCreditFlag", "body", string(*m.InstantCreditFlag), 1); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *InstantCreditFlagUpdateRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InstantCreditFlagUpdateRequest) UnmarshalBinary(b []byte) error {
	var res InstantCreditFlagUpdateRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
