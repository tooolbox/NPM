// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CardTable2ForRelationshipInquiry2 card table2 for relationship inquiry2
//
// swagger:model CardTable2ForRelationshipInquiry2
type CardTable2ForRelationshipInquiry2 struct {

	//  Max length = 40, Address Line 1: First line of the address to which the card and PIN mailer is sent.
	AddrLine1 string `json:"addrLine1,omitempty"`

	//  Max length = 40, Address Line 2: Second line of the address to which the card and PIN mailer is sent.
	AddrLine2 string `json:"addrLine2,omitempty"`

	//  Max length = 3, Age of cardholder, if a card item or age of person tied to the customer record. Field is calculated based on Date of Birth.
	Age string `json:"age,omitempty"`

	//  Max length = 1, Card Block Code: Block code assigned to this card.
	BlkCode string `json:"blkCode,omitempty"`

	//  Max length = 1, Card Action: Field that indicates the card issue action code that determines the action CMS performs during the next run.  The values are: 0 = No action. No cards  requested.  1 = Issue new card(s).  2 = Issue additional card(s). 3 = Issue replacement card(s).  4 = Returned cards.  5 = Produce a new PIN mailer. 6 = Issue emergency replacement card(s).  A = Additional cardholder added. B = Issue replacement card(s) with PIN mailer. L = Lost/stolen.
	CardAction string `json:"cardAction,omitempty"`

	//  Max length = 19, Customer number: Customer number that identifies the Customer Name/Address record to which this sub account is assigned.
	CardCustNbr string `json:"cardCustNbr,omitempty"`

	//  Max length = 1, Card Expired Flag: Field which indicates if the card is expired or not based on date expire value when compared with current date. 0 - Card Expired No 1 - Card Expired Yes
	CardExpiredFlag string `json:"cardExpiredFlag,omitempty"`

	//  Max length = 3, Identification number of the logo.
	CardLogo string `json:"cardLogo,omitempty"`

	//  Max length = 19, Unique Card Number embossed on card plastic.
	CardNbr string `json:"cardNbr,omitempty"`

	//  Max length = 3, Organization: Three digit Identification number of the organization.
	CardOrg string `json:"cardOrg,omitempty"`

	//  Max length = 4, Card sequence number: Record number assigned to the card (for card numbering schemes of 0, 1, and 3) and the sequence number assigned to the card (for card numbering schemes of 2). This number is part of the record key.
	CardSeq string `json:"cardSeq,omitempty"`

	//  Max length = 1, Card Technology. Flag that identifies the current card technology used for this card. Values are:  0 - Magnetic Stripe  1 - Smart Card  2 - Contactless magnetic stripe  3 - Contactless smart card
	CardTechnology string `json:"cardTechnology,omitempty"`

	//  Max length = 1, Card type associated to the account. Values:  V - Visa M - MasterCard A - AMEX J - JCB P - Private Label
	CardType string `json:"cardType,omitempty"`

	//  Max length = 1, Cardholder Type. Field that indicates whether the cardholder is the primary cardholder or an additional cardholder associated with the account.  Values are : 1 - Primary Card 0 - Secondary Card 8 - Primary on Acct 9 - Temporary on Acct
	CardholderType string `json:"cardholderType,omitempty"`

	//  Max length = 40, City for the mailing address to be used for card and PIN mailer.
	City string `json:"city,omitempty"`

	//  Max length = 40, Address Line 1 of the customer used for card mailers. Populated based on the logo level parameters either from embosser or corresponding customer level details.
	CmsaAddr1 string `json:"cmsaAddr1,omitempty"`

	//  Max length = 40, Address Line 2 of the customer used for card mailers. Populated based on the logo level parameters either from embosser or corresponding customer level details.
	CmsaAddr2 string `json:"cmsaAddr2,omitempty"`

	//  Max length = 40, City state: City portion of the cardholder used for card mailers.
	CmsaCityState string `json:"cmsaCityState,omitempty"`

	//  Max length = 3, Country Code: Country portion of the cardholder used for card mailers.
	CmsaCntryCd string `json:"cmsaCntryCd,omitempty"`

	//  Max length = 30, County of the customer for card mailers.
	CmsaCounty string `json:"cmsaCounty,omitempty"`

	//  Max length = 40, Name line 1 field of the cardholder used for card mailers. Populated based on the logo level parameters either from embosser or corresponding customer level details.
	CmsaNameLine1 string `json:"cmsaNameLine1,omitempty"`

	//  Max length = 40, Name line 2 field of the cardholder used for card mailers. Populated based on the logo level parameters either from embosser or corresponding customer level details.
	CmsaNameLine2 string `json:"cmsaNameLine2,omitempty"`

	//  Max length = 40, Name line 3 field of the cardholder used for card mailers. Populated based on the logo level parameters either from embosser or corresponding customer level details.
	CmsaNameLine3 string `json:"cmsaNameLine3,omitempty"`

	//  Max length = 10, Postal code or zip code of the mailing address for card mailers.
	CmsaPstlCd string `json:"cmsaPstlCd,omitempty"`

	//  Max length = 3, State: State or province portion of the cardholder used for card mailers.
	CmsaState string `json:"cmsaState,omitempty"`

	//  Max length = 3, Country Code: Country portion of the mailing address.
	CntryCd string `json:"cntryCd,omitempty"`

	//  Max length = 30, County of the customer.
	County string `json:"county,omitempty"`

	// Format: YYYYMMDD. Card expiry date: Indicates the date on which the most recently issued card expires.
	DateExpire string `json:"dateExpire,omitempty"`

	// Format: YYYYMMDD. Date when the last address change was made on the customer record.
	DateLastAddrChange string `json:"dateLastAddrChange,omitempty"`

	// Format: YYYYMMDD. Card date last maintenance.
	DateLastMaint string `json:"dateLastMaint,omitempty"`

	// Format: YYYYMMDD. Date Last Plastic Issue: Date when the most recently issued card was produced.
	DateLstPlasticIssue string `json:"dateLstPlasticIssue,omitempty"`

	// Format: YYYYMMDD. Transfer effective date.
	DteXfrEff string `json:"dteXfrEff,omitempty"`

	//  Max length = 60, E-mail address of the cardholder.
	Email string `json:"email,omitempty"`

	//  Max length = 26, Embossed Name 1: Name to be embossed on the first embossing line of the card.
	EmbossedName1 string `json:"embossedName1,omitempty"`

	//  Max length = 26, Embossed Name 2: Name to be embossed on the second embossing line of the card.
	EmbossedName2 string `json:"embossedName2,omitempty"`

	//  Max length = 40, Embosser Name 1: Name field 1 of the Cardholder, used for mailing card and PIN mailers.
	EmbrName1 string `json:"embrName1,omitempty"`

	//  Max length = 40, Embosser Name 2: Name field 2 of the cardholder, used for mailing card and PIN mailers.
	EmbrName2 string `json:"embrName2,omitempty"`

	//  Max length = 20, Employer Phone number of the Customer.
	EmpPhone string `json:"empPhone,omitempty"`

	//  Max length = 20, Fax number of the accountholder.
	FaxPhone string `json:"faxPhone,omitempty"`

	//  Max length = 1, Gender code. Values are: 0 - Gender not specified 1 - Male 2 - Female
	GenderCode string `json:"genderCode,omitempty"`

	//  Max length = 20, Home phone number of the accountholder.
	HomePhone string `json:"homePhone,omitempty"`

	//  Max length = 1, Last card action. Last actions taken on the card such as issue/reissue, cancel the cards, or issue a PIN mailer.  Valid values are:  '0' - No action Required  '1' - New Cards  '2' - Additional Cards  '3' - Replacement Cards  '4' - Cancel Cards  '5' - PIN Request  '6' - Emergency Replacement  '7' - Reissue  '8' - Card number scheme reissue  '9' - Card transfer reissue  'A' - Additional Card to Account  'B' - Replacement Card and Pin Mailer  'R' - Random PIN  'L' - Lost Card Replacement.
	LastCardAction string `json:"lastCardAction,omitempty"`

	//  Max length = 2, Block code priority: values are 00-99 with 00 as the lowest priority and 99 as the highest priority.
	LbBcPriority string `json:"lbBcPriority,omitempty"`

	//  Max length = 1, Block code re-issue flag value determines the action taken on the account during replacement or re-issue card actions. Valid Values: N - Do not re-issue Y - Re-issue R - Report No Re-issue D - Defer Re-issue
	LbBcReissueFlag string `json:"lbBcReissueFlag,omitempty"`

	//  Max length = 15, Block Code Description: description of block code.
	LbBcTitle string `json:"lbBcTitle,omitempty"`

	//  Max length = 60, User-defined information.
	Memo1 string `json:"memo1,omitempty"`

	//  Max length = 60, User-defined information.
	Memo2 string `json:"memo2,omitempty"`

	//  Max length = 20, Mobile number of the accountholder.
	MobilePhone string `json:"mobilePhone,omitempty"`

	//  Max length = 1, PIN Suppresion: Flag indicating whether the PIN number and PIN mailer are produced/suppressed. Values are:  0 - Yes, allow personal identification numbers (PINs)  1 - No, suppress PIN generation
	PinSuppression string `json:"pinSuppression,omitempty"`

	//  Max length = 40, Address Line 1 of the customer used for PIN mailers. Populated based on the logo level parameters either from embosser or corresponding customer level details.
	PmsaAddr1 string `json:"pmsaAddr1,omitempty"`

	//  Max length = 40, Address Line 2 of the customer used for PIN mailers. Populated based on the logo level parameters either from embosser or corresponding customer level details.
	PmsaAddr2 string `json:"pmsaAddr2,omitempty"`

	//  Max length = 40, City state: City portion of the cardholder used for PIN mailers.
	PmsaCityState string `json:"pmsaCityState,omitempty"`

	//  Max length = 3, Country Code: Country portion of the cardholder used for PIN mailers.
	PmsaCntryCd string `json:"pmsaCntryCd,omitempty"`

	//  Max length = 30, County of the customer for PIN mailers.
	PmsaCounty string `json:"pmsaCounty,omitempty"`

	//  Max length = 40, Name line 1 field of the cardholder used for PIN mailers. Populated based on the logo level parameters either from embosser or corresponding customer level details.
	PmsaNameLine1 string `json:"pmsaNameLine1,omitempty"`

	//  Max length = 40, Name line 2 field of the cardholder used for PIN mailers. Populated based on the logo level parameters either from embosser or corresponding customer level details.
	PmsaNameLine2 string `json:"pmsaNameLine2,omitempty"`

	//  Max length = 40, Name line 3 field of the cardholder used for PIN mailers. Populated based on the logo level parameters either from embosser or corresponding customer level details.
	PmsaNameLine3 string `json:"pmsaNameLine3,omitempty"`

	//  Max length = 10, Postal code or zip code of the mailing address for PIN mailers.
	PmsaPstlCd string `json:"pmsaPstlCd,omitempty"`

	//  Max length = 3, State: State or province portion of the cardholder used for PIN mailers.
	PmsaState string `json:"pmsaState,omitempty"`

	// Format: YYYYMMDD. Prior mail date: Date from which the previous mailing information of the customer/owner was effective.
	PriorMailDate string `json:"priorMailDate,omitempty"`

	//  Max length = 10, Postal code or zip code of the mailing address for card and PIN mailer.
	PstlCd string `json:"pstlCd,omitempty"`

	//  Max length = 3, State or province of the mailing address for card and PIN mailer.
	StPr string `json:"stPr,omitempty"`

	//  Max length = 1, Embosser record status.  Valid values are: 0, 1, F, S - Active 0 - Permanent 1 - Temporary T - CNS Transfer P - Purged S - Chip Exceeded F - Fraud N - No curr. Card action C - Pre Activation
	Sta string `json:"sta,omitempty"`

	//  Max length = 19, Transfer Account: Account Number of the transferred account.
	XfrAct string `json:"xfrAct,omitempty"`

	//  Max length = 19, Transferred Card: Card number of the transferred embosser record.
	XfrCardNbr string `json:"xfrCardNbr,omitempty"`
}

// Validate validates this card table2 for relationship inquiry2
func (m *CardTable2ForRelationshipInquiry2) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CardTable2ForRelationshipInquiry2) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CardTable2ForRelationshipInquiry2) UnmarshalBinary(b []byte) error {
	var res CardTable2ForRelationshipInquiry2
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
