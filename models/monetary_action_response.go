// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// MonetaryActionResponse monetary action response
//
// swagger:model MonetaryActionResponse
type MonetaryActionResponse struct {

	//  Max length = 3, ACCT LOGO
	AcctLogo string `json:"acctLogo,omitempty"`

	//  Max length = 19, ACCT NBR
	AcctNbr string `json:"acctNbr,omitempty"`

	//  Max length = 3, ACCT ORG
	AcctOrg string `json:"acctOrg,omitempty"`

	//  Max length = 4, ACTION CODE
	ActionCode string `json:"actionCode,omitempty"`

	//  Max length = 3, ASM REP
	AsmRep string `json:"asmRep,omitempty"`

	//  Max length = 6, AUTH CODE
	AuthCode string `json:"authCode,omitempty"`

	//  Max length = 19, CARD NBR
	CardNbr string `json:"cardNbr,omitempty"`

	//  Max length = 4, CARD SEQ
	CardSeq string `json:"cardSeq,omitempty"`

	//  Max length = 17, CASH AVAIL CR
	CashAvailCr string `json:"cashAvailCr,omitempty"`

	// common
	Common *Header `json:"common,omitempty"`

	//  Max length = 17, CRLIM
	Crlim string `json:"crlim,omitempty"`

	//  Max length = 17, CURR BAL
	CurrBal string `json:"currBal,omitempty"`

	//  Max length = 3, CURR CODE
	CurrCode string `json:"currCode,omitempty"`

	//  Max length = 1, CURR NOD
	CurrNod string `json:"currNod,omitempty"`

	//  Max length = 4, DEPT CODE
	DeptCode string `json:"deptCode,omitempty"`

	// Format: YYYYMMDD. EFF DATE
	EffDate string `json:"effDate,omitempty"`

	//  Max length = 17, FEE AMT
	FeeAmt string `json:"feeAmt,omitempty"`

	//  Max length = 1, FOREIGN USE
	ForeignUse string `json:"foreignUse,omitempty"`

	//  Max length = 2, INSURANCE CODE
	InsuranceCode string `json:"insuranceCode,omitempty"`

	//  Max length = 60, LINE 1
	Line1 string `json:"line1,omitempty"`

	//  Max length = 60, LINE 2
	Line2 string `json:"line2,omitempty"`

	//  Max length = 60, LINE 3
	Line3 string `json:"line3,omitempty"`

	//  Max length = 60, LINE 4
	Line4 string `json:"line4,omitempty"`

	//  Max length = 60, LINE 5
	Line5 string `json:"line5,omitempty"`

	//  Max length = 3, LTR CODE
	LtrCode string `json:"ltrCode,omitempty"`

	//  Max length = 3, LTR ORG
	LtrOrg string `json:"ltrOrg,omitempty"`

	//  Max length = 4, MCC
	Mcc string `json:"mcc,omitempty"`

	//  Max length = 17, OPEN TO BUY
	OpenToBuy string `json:"openToBuy,omitempty"`

	//  Max length = 5, PLAN NBR
	PlanNbr string `json:"planNbr,omitempty"`

	//  Max length = 2, PLAN SEQ
	PlanSeq string `json:"planSeq,omitempty"`

	//  Max length = 17, PREV BAL
	PrevBal string `json:"prevBal,omitempty"`

	//  Max length = 16, PURCHASE ORDER NBR
	PurchaseOrderNbr string `json:"purchaseOrderNbr,omitempty"`

	//  Max length = 14, REFERENCE NBR
	ReferenceNbr string `json:"referenceNbr,omitempty"`

	//  Max length = 12, SALES CLERK
	SalesClerk string `json:"salesClerk,omitempty"`

	//  Max length = 9, SKU NBR
	SkuNbr string `json:"skuNbr,omitempty"`

	//  Max length = 9, STORE NBR
	StoreNbr string `json:"storeNbr,omitempty"`

	//  Max length = 15, TICKET NBR
	TicketNbr string `json:"ticketNbr,omitempty"`

	//  Max length = 17, TXN AMOUNT
	TxnAmount string `json:"txnAmount,omitempty"`

	//  Max length = 4, TXN CODE
	TxnCode string `json:"txnCode,omitempty"`

	//  Max length = 40, TXN DESC
	TxnDesc string `json:"txnDesc,omitempty"`
}

// Validate validates this monetary action response
func (m *MonetaryActionResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCommon(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MonetaryActionResponse) validateCommon(formats strfmt.Registry) error {

	if swag.IsZero(m.Common) { // not required
		return nil
	}

	if m.Common != nil {
		if err := m.Common.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("common")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MonetaryActionResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MonetaryActionResponse) UnmarshalBinary(b []byte) error {
	var res MonetaryActionResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
