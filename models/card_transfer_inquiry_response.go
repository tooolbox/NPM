// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CardTransferInquiryResponse card transfer inquiry response
//
// swagger:model CardTransferInquiryResponse
type CardTransferInquiryResponse struct {

	//  Max length = 19, Identification number of the card scheme 3 account associated with the card to be transferred. This field is from the Base Segment file.
	AcctNbr string `json:"acctNbr,omitempty"`

	//  Max length = 1, BLOCK CODE
	BlockCode string `json:"blockCode,omitempty"`

	//  Max length = 19, Number of the card to be transferred. The service will perform the appropriate searches via navigational services to find a match on Embosser Record.
	CardNbr string `json:"cardNbr,omitempty"`

	//  Max length = 4, Sequence number of the card on the Embosser Record.
	CardSeq string `json:"cardSeq,omitempty"`

	// common
	Common *Header `json:"common,omitempty"`

	//  Max length = 19, Identification number of the Customer Name/Address record associated with the Embosser Record of the card being transferred.
	CustNbr string `json:"custNbr,omitempty"`

	//  Max length = 3, Identification number of the organization associated with the Embosser Record of the card being transferred.
	CustOrg string `json:"custOrg,omitempty"`

	// Format: YYYYMMDD. DATE
	Date string `json:"date,omitempty"`

	//  Max length = 26, EMBOSSED NAME 1
	EmbossedName1 string `json:"embossedName1,omitempty"`

	//  Max length = 26, EMBOSSED NAME 2
	EmbossedName2 string `json:"embossedName2,omitempty"`

	//  Max length = 19, Transfer To Fraud Account: Fraud Account number to which the card was or is transferred today.  A value is pre-populated in this field only when the Transfer FUNCTION is R (reversal) and the card transfer was generated earlier in the same processing day.
	FraudAcct string `json:"fraudAcct,omitempty"`

	//  Max length = 19, Transfer-to Customer Number: Customer Name/Address Record associated with the Fraud Account number to which the card was or is transferred today.  A value is pre-populated in this field only when the transfer FUNCTION is R (reversal) and the card transfer was generated earlier in the same processing day.
	FraudCust string `json:"fraudCust,omitempty"`

	//  Max length = 2, KEY CODE
	KeyCode string `json:"keyCode,omitempty"`

	//  Max length = 3, Identification number of the logo associated with the Embosser Record.
	Logo string `json:"logo,omitempty"`

	//  Max length = 40, Name and Address lines: Mail Lines 1 display the compressed name/address data from the Customer Name/Address Record (ARMN).
	MailLine1 string `json:"mailLine1,omitempty"`

	//  Max length = 40, Name and Address lines: Mail Lines 2 display the compressed name/address data from the Customer Name/Address Record (ARMN).
	MailLine2 string `json:"mailLine2,omitempty"`

	//  Max length = 40, Name and Address lines: Mail Lines 3 display the compressed name/address data from the Customer Name/Address Record (ARMN).
	MailLine3 string `json:"mailLine3,omitempty"`

	//  Max length = 40, Name and Address lines: Mail Lines 4 display the compressed name/address data from the Customer Name/Address Record (ARMN).
	MailLine4 string `json:"mailLine4,omitempty"`

	//  Max length = 40, Name and Address lines: Mail Lines 5 display the compressed name/address data from the Customer Name/Address Record (ARMN).
	MailLine5 string `json:"mailLine5,omitempty"`

	//  Max length = 40, Name and Address lines: Mail Lines 6 display the compressed name/address data from the Customer Name/Address Record (ARMN). Up to 6 lines of data is compressed into 4, 5, or 6 mailing address lines.  Optionally, the State/Province code, country code, and postal code is included in the last line.
	MailLine6 string `json:"mailLine6,omitempty"`

	//  Max length = 19, Identification number of the account to which transactions currently post for the card being transferred.
	PostToAcct string `json:"postToAcct,omitempty"`

	//  Max length = 1, Transfer pending card action function from input message.
	XferPendingSw string `json:"xferPendingSw,omitempty"`

	//  Max length = 1, Transfer replacement Indicator: Code indicating whether a replacement card is to be issued for the fraudulent card being transferred.  A value is pre-populated in this field only when the Transfer FUNCTION is R (reversal) and the card transfer was generated earlier in the same processing day. Values are: 0 = Replace (Default) 1 = Do not replace
	XfrRepInd string `json:"xfrRepInd,omitempty"`
}

// Validate validates this card transfer inquiry response
func (m *CardTransferInquiryResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCommon(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CardTransferInquiryResponse) validateCommon(formats strfmt.Registry) error {

	if swag.IsZero(m.Common) { // not required
		return nil
	}

	if m.Common != nil {
		if err := m.Common.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("common")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CardTransferInquiryResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CardTransferInquiryResponse) UnmarshalBinary(b []byte) error {
	var res CardTransferInquiryResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
