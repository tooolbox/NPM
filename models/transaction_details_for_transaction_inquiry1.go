// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// TransactionDetailsForTransactionInquiry1 transaction details for transaction inquiry1
//
// swagger:model TransactionDetailsForTransactionInquiry1
type TransactionDetailsForTransactionInquiry1 struct {

	//  Max length = 19, Account Number: Identification Number of Customer's account.
	Account string `json:"account,omitempty"`

	//  Max length = 17, Transaction amount in whole monetary units.
	Amount string `json:"amount,omitempty"`

	//  Max length = 6, Transaction auth code
	AuthCd string `json:"authCd,omitempty"`

	// Format: YYYYDDD. Batch date of the transaction.  Date format is CCYY-MM-DD.
	BatchDt string `json:"batchDt,omitempty"`

	//  Max length = 5, Transaction category code: ISO standard category code of the merchant where frequent shopper points were awarded.
	CategoryCd string `json:"categoryCd,omitempty"`

	//  Max length = 19, Converted or old card number for the transaction.
	ConvCardNbr string `json:"convCardNbr,omitempty"`

	//  Max length = 16, Card Acceptor ID
	CrdAcceptorID string `json:"crdAcceptorId,omitempty"`

	//  Max length = 1, Card block code
	CrdBlkCd string `json:"crdBlkCd,omitempty"`

	//  Max length = 19, Card number
	CrdNbr string `json:"crdNbr,omitempty"`

	//  Max length = 5, Card number sequence
	CrdSeq string `json:"crdSeq,omitempty"`

	//  Max length = 1, Direct Debit or Savings Account Indicator:  Flag that indicates which bank account, DDA or savings account applies to the transaction.  The  field displays for debit card transactions only and is applicable only when Single Message Support is installed and activated Valid values : 'D', 'S'
	DdaSavInd string `json:"ddaSavInd,omitempty"`

	//  Max length = 4, Department number associated with a particular transaction
	Dept string `json:"dept,omitempty"`

	//  Max length = 40, Transaction description of the posted transaction.
	Description string `json:"description,omitempty"`

	//  Max length = 3, ISO Foreign currency code: Valid only for transactions originated in foreign currencies; Derived from the MEMO description  in a foreign transaction
	FgnCurrCode string `json:"fgnCurrCode,omitempty"`

	//  Max length = 17, Foreign Exchange Rate: The exchange rate used to convert between the original transaction currency and the cardholder billing currency.
	FgnCurrExchRate string `json:"fgnCurrExchRate,omitempty"`

	//  Max length = 17, Foreign Transaction Amount: Original Transaction  Amount in foreign currency. Valid only for transactions originated in foreign countries Derived from the MEMO description in a foreign transaction
	FgnCurrencyAmt string `json:"fgnCurrencyAmt,omitempty"`

	//  Max length = 3, Foreign Currency Code.
	ForeignCurrencyCode string `json:"foreignCurrencyCode,omitempty"`

	//  Max length = 2, Insurance Product: Flag that indicates insurance product for which insurance premium is generated.
	InsProd string `json:"insProd,omitempty"`

	//  Max length = 9, Transaction interchange fee.
	InterchgFee string `json:"interchgFee,omitempty"`

	//  Max length = 5, Item Number: System-generated number assigned to all debit transactions
	ItmNbr string `json:"itmNbr,omitempty"`

	//  Max length = 3, Identification number of the Logo
	Logo string `json:"logo,omitempty"`

	//  Max length = 17, Original payment amount
	OrigPmtAmt string `json:"origPmtAmt,omitempty"`

	//  Max length = 1, Frequent Shopper Program number
	PgmNbr string `json:"pgmNbr,omitempty"`

	//  Max length = 5, Plan Number: Number that identifies the Credit Plan Master record associated with the credit plan to which the transaction was posted
	Plan string `json:"plan,omitempty"`

	//  Max length = 7, Plan Open Date: Date plan segment was opened.  Date format is CCYY-MM-DD.
	PlanOpenDt string `json:"planOpenDt,omitempty"`

	//  Max length = 2, Plan Sequence: Sequence number (also called a reference number) that identifies the credit plan on the account to which the transaction was posted
	PlanSeq string `json:"planSeq,omitempty"`

	//  Max length = 15, Payment Reference Number: Resolution reference number generated during Posting for credits received
	PmtRefNbr string `json:"pmtRefNbr,omitempty"`

	// Format: YYYYDDD. Posting date of the transaction.
	PostingDate string `json:"postingDate,omitempty"`

	//  Max length = 9, Points: Field that indicates the number of frequent shopper points earned by the transaction
	Pts string `json:"pts,omitempty"`

	//  Max length = 16, Purchase Order number
	PurchOrder string `json:"purchOrder,omitempty"`

	//  Max length = 3, Quantity of items in the basket
	Qty string `json:"qty,omitempty"`

	//  Max length = 1, Transaction qualification indicator
	QualInd string `json:"qualInd,omitempty"`

	//  Max length = 5, REC NBR
	RecNbr string `json:"recNbr,omitempty"`

	//  Max length = 17, Relationship payment amount: Payment amount linked to relationship number
	RelPmtAmt string `json:"relPmtAmt,omitempty"`

	//  Max length = 12, Salesperson: Code that identifies the salesclerk associated with the transaction
	Salesperson string `json:"salesperson,omitempty"`

	//  Max length = 9, Stock Keeping Unit number associated with a particular transaction
	SkuNbr string `json:"skuNbr,omitempty"`

	//  Max length = 1, General ledger source code: Code to identify the source of a transaction. Values are:0 = ATPT-MT-GL-LOCAL1 = ATPT-MT-GL-GENERATED2 THRU 6 = ATPT-MT-GL-USER7 = ATPT-MT-GL-WAREHOUSE8 = ATPT-MT-GL-REJECT9 = ATPT-MT-GL-XFR-HISTORY
	Source string `json:"source,omitempty"`

	//  Max length = 15, Ticket Number: Invoice or ticket number associated with the transaction
	TktNbr string `json:"tktNbr,omitempty"`

	//  Max length = 4, Transaction Code: Transaction code associated with the transaction.
	TxnCd string `json:"txnCd,omitempty"`

	// Format: YYYYDDD. Effective date of the transaction.
	TxnDate string `json:"txnDate,omitempty"`

	//  Max length = 23, Transaction reference number. Transaction details returned only for the transaction reference number given in the input.
	TxnReference string `json:"txnReference,omitempty"`

	//  Max length = 1, Transaction Type
	Typ string `json:"typ,omitempty"`

	//  Max length = 17, Unit price of the transaction
	UnitPrice string `json:"unitPrice,omitempty"`

	//  Max length = 15, Visa transaction ID
	VisaTxnID string `json:"visaTxnId,omitempty"`
}

// Validate validates this transaction details for transaction inquiry1
func (m *TransactionDetailsForTransactionInquiry1) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TransactionDetailsForTransactionInquiry1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TransactionDetailsForTransactionInquiry1) UnmarshalBinary(b []byte) error {
	var res TransactionDetailsForTransactionInquiry1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
