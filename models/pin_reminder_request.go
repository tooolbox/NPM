// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PinReminderRequest pin reminder request
//
// swagger:model PinReminderRequest
type PinReminderRequest struct {

	// Card Number Group.
	CardDtlGrp []*CardDtlGrpForPinReminder1 `json:"cardDtlGrp"`

	// common
	Common *Header `json:"common,omitempty"`

	//  Max length = 2, Number of Cards requested.
	// Max Length: 2
	// Min Length: 0
	// Pattern: ^[0-9]*$
	NbrCrdRqt *string `json:"nbrCrdRqt,omitempty"`
}

// Validate validates this pin reminder request
func (m *PinReminderRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCardDtlGrp(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCommon(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNbrCrdRqt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PinReminderRequest) validateCardDtlGrp(formats strfmt.Registry) error {

	if swag.IsZero(m.CardDtlGrp) { // not required
		return nil
	}

	for i := 0; i < len(m.CardDtlGrp); i++ {
		if swag.IsZero(m.CardDtlGrp[i]) { // not required
			continue
		}

		if m.CardDtlGrp[i] != nil {
			if err := m.CardDtlGrp[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("cardDtlGrp" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *PinReminderRequest) validateCommon(formats strfmt.Registry) error {

	if swag.IsZero(m.Common) { // not required
		return nil
	}

	if m.Common != nil {
		if err := m.Common.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("common")
			}
			return err
		}
	}

	return nil
}

func (m *PinReminderRequest) validateNbrCrdRqt(formats strfmt.Registry) error {

	if swag.IsZero(m.NbrCrdRqt) { // not required
		return nil
	}

	if err := validate.MinLength("nbrCrdRqt", "body", string(*m.NbrCrdRqt), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("nbrCrdRqt", "body", string(*m.NbrCrdRqt), 2); err != nil {
		return err
	}

	if err := validate.Pattern("nbrCrdRqt", "body", string(*m.NbrCrdRqt), `^[0-9]*$`); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PinReminderRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PinReminderRequest) UnmarshalBinary(b []byte) error {
	var res PinReminderRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
