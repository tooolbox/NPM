// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// WalletRedemptionResponse wallet redemption response
//
// swagger:model WalletRedemptionResponse
type WalletRedemptionResponse struct {

	//  Max length = 19, Account Number: Number of Customer's account.
	AcctNbr string `json:"acctNbr,omitempty"`

	// common
	Common *Header `json:"common,omitempty"`

	//  Max length = 1, Redemption Confirm flag/Indicator. Valid values are: Y - Redemption request confirmed N - Redemption request not confirmed Space - Redemption inquiry
	ConfirmInd string `json:"confirmInd,omitempty"`

	//  Max length = 9, Fee amount in base currency.
	FeeAmtBase string `json:"feeAmtBase,omitempty"`

	//  Max length = 9, Net redemption Amount.
	NetRdmAmt string `json:"netRdmAmt,omitempty"`

	//  Max length = 8, Not used in the service.
	Rate string `json:"rate,omitempty"`

	//  Max length = 9, Redemption Amount from wallet.
	RdmAmount string `json:"rdmAmount,omitempty"`

	//  Max length = 9, Actual Redemption Amount.
	RdmAmt string `json:"rdmAmt,omitempty"`

	//  Max length = 1, Redemption Indicator. Valid values are: F - Full Redemption P - Partial Redemption
	RdmInd string `json:"rdmInd,omitempty"`

	//  Max length = 1, Redemption Level. Valid values are: W - Wallet level Redemption A - Account level Redemption
	RdmLevel string `json:"rdmLevel,omitempty"`

	//  Max length = 1, Not used in service. Redemption Source.
	RdmSource string `json:"rdmSource,omitempty"`

	//  Max length = 3, Redemption Wallet: Field which contains the wallet/wallet currency from which the amount swas redeemed.
	RdmWalt string `json:"rdmWalt,omitempty"`

	//  Max length = 9, Store: Store number associated with the transaction.
	Store string `json:"store,omitempty"`
}

// Validate validates this wallet redemption response
func (m *WalletRedemptionResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCommon(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *WalletRedemptionResponse) validateCommon(formats strfmt.Registry) error {

	if swag.IsZero(m.Common) { // not required
		return nil
	}

	if m.Common != nil {
		if err := m.Common.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("common")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *WalletRedemptionResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WalletRedemptionResponse) UnmarshalBinary(b []byte) error {
	var res WalletRedemptionResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
