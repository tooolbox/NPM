// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// InsuranceAddResponse insurance add response
//
// swagger:model InsuranceAddResponse
type InsuranceAddResponse struct {

	//  Max length = 19, ACCT NBR
	AcctNbr string `json:"acctNbr,omitempty"`

	// common
	Common *Header `json:"common,omitempty"`

	//  Max length = 1, Dual currency indicator that specifies whether the request applies to the local or foreign account when the dual currency feature is in use and the account organization is not provided in the input message.
	DualInd string `json:"dualInd,omitempty"`

	//  Max length = 2, Insurance product code that was added to the account.
	InsProdCd string `json:"insProdCd,omitempty"`

	//  Max length = 1, Insurance status code. C = Insurance product is canceled.  F = Insurance product is in force.  I = Insurance product is inactive due to a user defined condition.  S = Insurance product is suspended due to delinquency.
	InsStatCd string `json:"insStatCd,omitempty"`

	//  Max length = 3, Identification number of the logo associated with this account.
	Logo string `json:"logo,omitempty"`
}

// Validate validates this insurance add response
func (m *InsuranceAddResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCommon(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *InsuranceAddResponse) validateCommon(formats strfmt.Registry) error {

	if swag.IsZero(m.Common) { // not required
		return nil
	}

	if m.Common != nil {
		if err := m.Common.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("common")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *InsuranceAddResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InsuranceAddResponse) UnmarshalBinary(b []byte) error {
	var res InsuranceAddResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
