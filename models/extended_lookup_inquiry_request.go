// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ExtendedLookupInquiryRequest extended lookup inquiry request
//
// swagger:model ExtendedLookupInquiryRequest
type ExtendedLookupInquiryRequest struct {

	// common
	Common *Header `json:"common,omitempty"`

	//  Max length = 3, Country Code: Country portion of the mailing address.
	// Max Length: 3
	// Min Length: 0
	Country *string `json:"country,omitempty"`

	//  Max length = 1, Country Code: Country portion of the mailing address. Valid values are ‘0’/Blank = Exact Search. ‘1’ = Begins-with Search. ‘2’ = Fuzzy Search. ‘3’ = Ends-with Search.
	// Max Length: 1
	// Min Length: 0
	CountryFuzzySw *string `json:"countryFuzzySw,omitempty"`

	// Format: YYYYMMDD. Customer's date of birth.
	Dob string `json:"dob,omitempty"`

	//  Max length = 40, First name: Field that identifies the first name of the cardholder.
	// Max Length: 40
	// Min Length: 0
	FirstName *string `json:"firstName,omitempty"`

	//  Max length = 1, First name: Field that identifies the first name of the cardholder. Valid values are ‘0’/Blank = Exact Search. ‘1’ = Begins-with Search. ‘2’ = Fuzzy Search. ‘3’ = Ends-with Search.
	// Max Length: 1
	// Min Length: 0
	FirstNameFuzzySw *string `json:"firstNameFuzzySw,omitempty"`

	//  Max length = 25, Identification number of the customer.
	// Max Length: 25
	// Min Length: 0
	ID *string `json:"id,omitempty"`

	//  Max length = 1, Identification number of the customer. Valid values are ‘0’/Blank = Exact Search. ‘1’ = Begins-with Search. ‘2’ = Fuzzy Search. ‘3’ = Ends-with Search.
	// Max Length: 1
	// Min Length: 0
	IDFuzzySw *string `json:"idFuzzySw,omitempty"`

	//  Max length = 1, Identification Number option. Values are: 1 = Use as Primary Search Field 0 = Do not use as Primary Search Field
	// Max Length: 1
	// Min Length: 0
	IDOptn *string `json:"idOptn,omitempty"`

	//  Max length = 40, Last name, business, store, or generic name of the customer.
	// Max Length: 40
	// Min Length: 0
	LbsgName *string `json:"lbsgName,omitempty"`

	//  Max length = 1, Last name, business, store, or generic name of the customer. Valid values are ‘0’/Blank = Exact Search. ‘1’ = Begins-with Search. ‘2’ = Fuzzy Search. ‘3’ = Ends-with Search.
	// Max Length: 1
	// Min Length: 0
	LbsgNameFuzzySw *string `json:"lbsgNameFuzzySw,omitempty"`

	//  Max length = 1, Last/Business/Store/Generic Name option. Values are: 1 = Use as Primary Search Field 0 = Do not use as Primary Search Field
	// Max Length: 1
	// Min Length: 0
	LbsgNameOptn *string `json:"lbsgNameOptn,omitempty"`

	//  Max length = 40, Middle Name: Field that identifies the middle name of the cardholder.
	// Max Length: 40
	// Min Length: 0
	MiddleName *string `json:"middleName,omitempty"`

	//  Max length = 1, Middle Name: Field that identifies the middle name of the cardholder. Valid values are ‘0’/Blank = Exact Search. ‘1’ = Begins-with Search. ‘2’ = Fuzzy Search. ‘3’ = Ends-with Search.
	// Max Length: 1
	// Min Length: 0
	MiddleNameFuzzySw *string `json:"middleNameFuzzySw,omitempty"`

	//  Max length = 1, Mobile Device ID. Valid values are ‘0’/Blank = Exact Search. ‘1’ = Begins-with Search. ‘2’ = Fuzzy Search. ‘3’ = Ends-with Search.
	// Max Length: 1
	// Min Length: 0
	MobDvcIDFuzzySw *string `json:"mobDvcIdFuzzySw,omitempty"`

	//  Max length = 2, Number of results be returned with the output service.  Maximum number allowed is 25.
	// Required: true
	// Max Length: 2
	// Min Length: 0
	// Pattern: ^[0-9]*$
	NbrRec *string `json:"nbrRec"`

	//  Max length = 1, Optional Data Match: Code that indicates the degree of matching required for the optional data fields. When an optional field contains a value greater than spaces, this field defines whether, in addition to the primary search field, the resulting search data should match on all optional fields or on any optional field. Values are: 0 = Return records that match any requested optional field. 1 = Return only those records that match all requested optional fields. Defaults to 0.
	// Max Length: 1
	// Min Length: 0
	OptionalDataMatch *string `json:"optionalDataMatch,omitempty"`

	//  Max length = 1, PAN ENC DEC REQ. Valid values are ‘0’ = not required, ‘1’ = required
	// Max Length: 1
	// Min Length: 0
	PanEncDecReq *string `json:"panEncDecReq,omitempty"`

	//  Max length = 20, Phone number of the customer.  This field can contain the home, work, fax, or mobile number.
	// Max Length: 20
	// Min Length: 0
	Phone *string `json:"phone,omitempty"`

	//  Max length = 1, Phone number of the customer.  This field can be the home, work, fax, or mobile number. Valid values are ‘0’/Blank = Exact Search. ‘1’ = Begins-with Search. ‘2’ = Fuzzy Search. ‘3’ = Ends-with Search.
	// Max Length: 1
	// Min Length: 0
	PhoneFuzzySw *string `json:"phoneFuzzySw,omitempty"`

	//  Max length = 1, Phone Number option. Values are: 1 = Use as Primary Search Field 0 = Do not use as Primary Search Field
	// Max Length: 1
	// Min Length: 0
	PhoneOptn *string `json:"phoneOptn,omitempty"`

	//  Max length = 1, Postal Code option. Values are: 1 = Use as Primary Search Field 0 = Do not use as Primary Search Field
	// Max Length: 1
	// Min Length: 0
	PostCodeOptn *string `json:"postCodeOptn,omitempty"`

	//  Max length = 10, Postal Code: Postal code portion of the mailing address.
	// Max Length: 10
	// Min Length: 0
	PostalCode *string `json:"postalCode,omitempty"`

	//  Max length = 1, Postal Code: Postal code portion of the mailing address. Valid values are ‘0’/Blank = Exact Search. ‘1’ = Begins-with Search. ‘2’ = Fuzzy Search. ‘3’ = Ends-with Search.
	// Max Length: 1
	// Min Length: 0
	PostalCodeFuzzySw *string `json:"postalCodeFuzzySw,omitempty"`

	//  Max length = 1, Returned Data Options: Code that indicates if the returned records should be for accounts that have a corresponding record on AMBS, that do not have a record on AMBS, or if records are returned regardless of a corresponding AMBS record being present or not. Values are: 0 = Returns only accounts which have a corresponding AMBS record 1 = Returns accounts regardless of having a corresponding AMBS record or not 2 = Returns only accounts which do not have a corresponding AMBS record Defaults to 0.
	// Max Length: 1
	// Min Length: 0
	RtnDataOptn *string `json:"rtnDataOptn,omitempty"`

	//  Max length = 183, Start Token: Conditional on svcFuncCd being set to N. For an initial request, this should be set to blank. For a continuation of a search, this should be populated from the nextToken or from the response of the previous call, and only if the response moreDataFlag indicates there is more data to be returned. You can also use the prevToken to go backwards
	// Max Length: 183
	// Min Length: 0
	StartToken *string `json:"startToken,omitempty"`

	//  Max length = 20, Suffix: Field that identifies the suffix of the cardholder (ex. Jr., Sr.).
	// Max Length: 20
	// Min Length: 0
	Suffix *string `json:"suffix,omitempty"`

	//  Max length = 1, Suffix: Field that identifies the suffix of the cardholder (ex. Jr., Sr.). Valid values are ‘0’/Blank = Exact Search. ‘1’ = Begins-with Search. ‘2’ = Fuzzy Search. ‘3’ = Ends-with Search.
	// Max Length: 1
	// Min Length: 0
	SuffixFuzzySw *string `json:"suffixFuzzySw,omitempty"`

	//  Max length = 1, Service Function Code. Values are: <em>P - </em> Service Function Previous <em>N - </em> Service Function Next Space - Service Function None
	// Max Length: 1
	// Min Length: 0
	SvcFuncCd *string `json:"svcFuncCd,omitempty"`

	//  Max length = 20, Title: Professional or honorary title associated with the cardholder name entered in the NAME LINE 1 field.
	// Max Length: 20
	// Min Length: 0
	Title *string `json:"title,omitempty"`

	//  Max length = 1, Title: Professional or honorary title associated with the cardholder name entered in the NAME LINE 1 field. Valid values are ‘0’/Blank = Exact Search. ‘1’ = Begins-with Search. ‘2’ = Fuzzy Search. ‘3’ = Ends-with Search.
	// Max Length: 1
	// Min Length: 0
	TitleFuzzySw *string `json:"titleFuzzySw,omitempty"`

	//  Max length = 20, USER14
	// Max Length: 20
	// Min Length: 0
	User14 *string `json:"user14,omitempty"`

	//  Max length = 1, User defined field. This field can be defined by each business to store information that is not provided in other fields in the system but still is necessary because of the business processes. Valid values are ‘0’/Blank = Exact Search. ‘1’ = Begins-with Search. ‘2’ = Fuzzy Search. ‘3’ = Ends-with Search.
	// Max Length: 1
	// Min Length: 0
	User14FuzzySw *string `json:"user14FuzzySw,omitempty"`

	//  Max length = 20, USER15
	// Max Length: 20
	// Min Length: 0
	User15 *string `json:"user15,omitempty"`

	//  Max length = 1, User defined field. This field can be defined by each business to store information that is not provided in other fields in the system but still is necessary because of the business processes. Valid values are ‘0’/Blank = Exact Search. ‘1’ = Begins-with Search. ‘2’ = Fuzzy Search. ‘3’ = Ends-with Search.
	// Max Length: 1
	// Min Length: 0
	User15FuzzySw *string `json:"user15FuzzySw,omitempty"`
}

// Validate validates this extended lookup inquiry request
func (m *ExtendedLookupInquiryRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCommon(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCountry(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCountryFuzzySw(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFirstName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFirstNameFuzzySw(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIDFuzzySw(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIDOptn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLbsgName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLbsgNameFuzzySw(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLbsgNameOptn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMiddleName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMiddleNameFuzzySw(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMobDvcIDFuzzySw(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNbrRec(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOptionalDataMatch(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePanEncDecReq(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePhone(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePhoneFuzzySw(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePhoneOptn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePostCodeOptn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePostalCode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePostalCodeFuzzySw(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRtnDataOptn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStartToken(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSuffix(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSuffixFuzzySw(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSvcFuncCd(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTitle(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTitleFuzzySw(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUser14(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUser14FuzzySw(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUser15(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUser15FuzzySw(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ExtendedLookupInquiryRequest) validateCommon(formats strfmt.Registry) error {

	if swag.IsZero(m.Common) { // not required
		return nil
	}

	if m.Common != nil {
		if err := m.Common.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("common")
			}
			return err
		}
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validateCountry(formats strfmt.Registry) error {

	if swag.IsZero(m.Country) { // not required
		return nil
	}

	if err := validate.MinLength("country", "body", string(*m.Country), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("country", "body", string(*m.Country), 3); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validateCountryFuzzySw(formats strfmt.Registry) error {

	if swag.IsZero(m.CountryFuzzySw) { // not required
		return nil
	}

	if err := validate.MinLength("countryFuzzySw", "body", string(*m.CountryFuzzySw), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("countryFuzzySw", "body", string(*m.CountryFuzzySw), 1); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validateFirstName(formats strfmt.Registry) error {

	if swag.IsZero(m.FirstName) { // not required
		return nil
	}

	if err := validate.MinLength("firstName", "body", string(*m.FirstName), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("firstName", "body", string(*m.FirstName), 40); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validateFirstNameFuzzySw(formats strfmt.Registry) error {

	if swag.IsZero(m.FirstNameFuzzySw) { // not required
		return nil
	}

	if err := validate.MinLength("firstNameFuzzySw", "body", string(*m.FirstNameFuzzySw), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("firstNameFuzzySw", "body", string(*m.FirstNameFuzzySw), 1); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validateID(formats strfmt.Registry) error {

	if swag.IsZero(m.ID) { // not required
		return nil
	}

	if err := validate.MinLength("id", "body", string(*m.ID), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("id", "body", string(*m.ID), 25); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validateIDFuzzySw(formats strfmt.Registry) error {

	if swag.IsZero(m.IDFuzzySw) { // not required
		return nil
	}

	if err := validate.MinLength("idFuzzySw", "body", string(*m.IDFuzzySw), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("idFuzzySw", "body", string(*m.IDFuzzySw), 1); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validateIDOptn(formats strfmt.Registry) error {

	if swag.IsZero(m.IDOptn) { // not required
		return nil
	}

	if err := validate.MinLength("idOptn", "body", string(*m.IDOptn), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("idOptn", "body", string(*m.IDOptn), 1); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validateLbsgName(formats strfmt.Registry) error {

	if swag.IsZero(m.LbsgName) { // not required
		return nil
	}

	if err := validate.MinLength("lbsgName", "body", string(*m.LbsgName), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("lbsgName", "body", string(*m.LbsgName), 40); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validateLbsgNameFuzzySw(formats strfmt.Registry) error {

	if swag.IsZero(m.LbsgNameFuzzySw) { // not required
		return nil
	}

	if err := validate.MinLength("lbsgNameFuzzySw", "body", string(*m.LbsgNameFuzzySw), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("lbsgNameFuzzySw", "body", string(*m.LbsgNameFuzzySw), 1); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validateLbsgNameOptn(formats strfmt.Registry) error {

	if swag.IsZero(m.LbsgNameOptn) { // not required
		return nil
	}

	if err := validate.MinLength("lbsgNameOptn", "body", string(*m.LbsgNameOptn), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("lbsgNameOptn", "body", string(*m.LbsgNameOptn), 1); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validateMiddleName(formats strfmt.Registry) error {

	if swag.IsZero(m.MiddleName) { // not required
		return nil
	}

	if err := validate.MinLength("middleName", "body", string(*m.MiddleName), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("middleName", "body", string(*m.MiddleName), 40); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validateMiddleNameFuzzySw(formats strfmt.Registry) error {

	if swag.IsZero(m.MiddleNameFuzzySw) { // not required
		return nil
	}

	if err := validate.MinLength("middleNameFuzzySw", "body", string(*m.MiddleNameFuzzySw), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("middleNameFuzzySw", "body", string(*m.MiddleNameFuzzySw), 1); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validateMobDvcIDFuzzySw(formats strfmt.Registry) error {

	if swag.IsZero(m.MobDvcIDFuzzySw) { // not required
		return nil
	}

	if err := validate.MinLength("mobDvcIdFuzzySw", "body", string(*m.MobDvcIDFuzzySw), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("mobDvcIdFuzzySw", "body", string(*m.MobDvcIDFuzzySw), 1); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validateNbrRec(formats strfmt.Registry) error {

	if err := validate.Required("nbrRec", "body", m.NbrRec); err != nil {
		return err
	}

	if err := validate.MinLength("nbrRec", "body", string(*m.NbrRec), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("nbrRec", "body", string(*m.NbrRec), 2); err != nil {
		return err
	}

	if err := validate.Pattern("nbrRec", "body", string(*m.NbrRec), `^[0-9]*$`); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validateOptionalDataMatch(formats strfmt.Registry) error {

	if swag.IsZero(m.OptionalDataMatch) { // not required
		return nil
	}

	if err := validate.MinLength("optionalDataMatch", "body", string(*m.OptionalDataMatch), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("optionalDataMatch", "body", string(*m.OptionalDataMatch), 1); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validatePanEncDecReq(formats strfmt.Registry) error {

	if swag.IsZero(m.PanEncDecReq) { // not required
		return nil
	}

	if err := validate.MinLength("panEncDecReq", "body", string(*m.PanEncDecReq), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("panEncDecReq", "body", string(*m.PanEncDecReq), 1); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validatePhone(formats strfmt.Registry) error {

	if swag.IsZero(m.Phone) { // not required
		return nil
	}

	if err := validate.MinLength("phone", "body", string(*m.Phone), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("phone", "body", string(*m.Phone), 20); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validatePhoneFuzzySw(formats strfmt.Registry) error {

	if swag.IsZero(m.PhoneFuzzySw) { // not required
		return nil
	}

	if err := validate.MinLength("phoneFuzzySw", "body", string(*m.PhoneFuzzySw), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("phoneFuzzySw", "body", string(*m.PhoneFuzzySw), 1); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validatePhoneOptn(formats strfmt.Registry) error {

	if swag.IsZero(m.PhoneOptn) { // not required
		return nil
	}

	if err := validate.MinLength("phoneOptn", "body", string(*m.PhoneOptn), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("phoneOptn", "body", string(*m.PhoneOptn), 1); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validatePostCodeOptn(formats strfmt.Registry) error {

	if swag.IsZero(m.PostCodeOptn) { // not required
		return nil
	}

	if err := validate.MinLength("postCodeOptn", "body", string(*m.PostCodeOptn), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("postCodeOptn", "body", string(*m.PostCodeOptn), 1); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validatePostalCode(formats strfmt.Registry) error {

	if swag.IsZero(m.PostalCode) { // not required
		return nil
	}

	if err := validate.MinLength("postalCode", "body", string(*m.PostalCode), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("postalCode", "body", string(*m.PostalCode), 10); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validatePostalCodeFuzzySw(formats strfmt.Registry) error {

	if swag.IsZero(m.PostalCodeFuzzySw) { // not required
		return nil
	}

	if err := validate.MinLength("postalCodeFuzzySw", "body", string(*m.PostalCodeFuzzySw), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("postalCodeFuzzySw", "body", string(*m.PostalCodeFuzzySw), 1); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validateRtnDataOptn(formats strfmt.Registry) error {

	if swag.IsZero(m.RtnDataOptn) { // not required
		return nil
	}

	if err := validate.MinLength("rtnDataOptn", "body", string(*m.RtnDataOptn), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("rtnDataOptn", "body", string(*m.RtnDataOptn), 1); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validateStartToken(formats strfmt.Registry) error {

	if swag.IsZero(m.StartToken) { // not required
		return nil
	}

	if err := validate.MinLength("startToken", "body", string(*m.StartToken), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("startToken", "body", string(*m.StartToken), 183); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validateSuffix(formats strfmt.Registry) error {

	if swag.IsZero(m.Suffix) { // not required
		return nil
	}

	if err := validate.MinLength("suffix", "body", string(*m.Suffix), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("suffix", "body", string(*m.Suffix), 20); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validateSuffixFuzzySw(formats strfmt.Registry) error {

	if swag.IsZero(m.SuffixFuzzySw) { // not required
		return nil
	}

	if err := validate.MinLength("suffixFuzzySw", "body", string(*m.SuffixFuzzySw), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("suffixFuzzySw", "body", string(*m.SuffixFuzzySw), 1); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validateSvcFuncCd(formats strfmt.Registry) error {

	if swag.IsZero(m.SvcFuncCd) { // not required
		return nil
	}

	if err := validate.MinLength("svcFuncCd", "body", string(*m.SvcFuncCd), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("svcFuncCd", "body", string(*m.SvcFuncCd), 1); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validateTitle(formats strfmt.Registry) error {

	if swag.IsZero(m.Title) { // not required
		return nil
	}

	if err := validate.MinLength("title", "body", string(*m.Title), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("title", "body", string(*m.Title), 20); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validateTitleFuzzySw(formats strfmt.Registry) error {

	if swag.IsZero(m.TitleFuzzySw) { // not required
		return nil
	}

	if err := validate.MinLength("titleFuzzySw", "body", string(*m.TitleFuzzySw), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("titleFuzzySw", "body", string(*m.TitleFuzzySw), 1); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validateUser14(formats strfmt.Registry) error {

	if swag.IsZero(m.User14) { // not required
		return nil
	}

	if err := validate.MinLength("user14", "body", string(*m.User14), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("user14", "body", string(*m.User14), 20); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validateUser14FuzzySw(formats strfmt.Registry) error {

	if swag.IsZero(m.User14FuzzySw) { // not required
		return nil
	}

	if err := validate.MinLength("user14FuzzySw", "body", string(*m.User14FuzzySw), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("user14FuzzySw", "body", string(*m.User14FuzzySw), 1); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validateUser15(formats strfmt.Registry) error {

	if swag.IsZero(m.User15) { // not required
		return nil
	}

	if err := validate.MinLength("user15", "body", string(*m.User15), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("user15", "body", string(*m.User15), 20); err != nil {
		return err
	}

	return nil
}

func (m *ExtendedLookupInquiryRequest) validateUser15FuzzySw(formats strfmt.Registry) error {

	if swag.IsZero(m.User15FuzzySw) { // not required
		return nil
	}

	if err := validate.MinLength("user15FuzzySw", "body", string(*m.User15FuzzySw), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("user15FuzzySw", "body", string(*m.User15FuzzySw), 1); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ExtendedLookupInquiryRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ExtendedLookupInquiryRequest) UnmarshalBinary(b []byte) error {
	var res ExtendedLookupInquiryRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
