// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OfferEnrolmentMaintenanceRequest offer enrolment maintenance request
//
// swagger:model OfferEnrolmentMaintenanceRequest
type OfferEnrolmentMaintenanceRequest struct {

	//  Max length = 19, ACCT NBR
	// Max Length: 19
	// Min Length: 0
	AcctNbr *string `json:"acctNbr,omitempty"`

	// common
	Common *Header `json:"common,omitempty"`

	//  Max length = 1, ENROL ACTN
	// Max Length: 1
	// Min Length: 0
	// Pattern: ^[0-9]*$
	EnrolActn *string `json:"enrolActn,omitempty"`

	// Format: YYYYMMDD. EXP DATE
	ExpDate string `json:"expDate,omitempty"`

	//  Max length = 10, OFFER CD
	// Max Length: 10
	// Min Length: 0
	OfferCd *string `json:"offerCd,omitempty"`

	//  Max length = 5, OFFER PRIORITY
	// Max Length: 5
	// Min Length: 0
	// Pattern: ^[0-9]*$
	OfferPriority *string `json:"offerPriority,omitempty"`

	// Format: YYYYMMDD. START DATE
	StartDate string `json:"startDate,omitempty"`
}

// Validate validates this offer enrolment maintenance request
func (m *OfferEnrolmentMaintenanceRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAcctNbr(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCommon(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEnrolActn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOfferCd(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOfferPriority(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OfferEnrolmentMaintenanceRequest) validateAcctNbr(formats strfmt.Registry) error {

	if swag.IsZero(m.AcctNbr) { // not required
		return nil
	}

	if err := validate.MinLength("acctNbr", "body", string(*m.AcctNbr), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("acctNbr", "body", string(*m.AcctNbr), 19); err != nil {
		return err
	}

	return nil
}

func (m *OfferEnrolmentMaintenanceRequest) validateCommon(formats strfmt.Registry) error {

	if swag.IsZero(m.Common) { // not required
		return nil
	}

	if m.Common != nil {
		if err := m.Common.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("common")
			}
			return err
		}
	}

	return nil
}

func (m *OfferEnrolmentMaintenanceRequest) validateEnrolActn(formats strfmt.Registry) error {

	if swag.IsZero(m.EnrolActn) { // not required
		return nil
	}

	if err := validate.MinLength("enrolActn", "body", string(*m.EnrolActn), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("enrolActn", "body", string(*m.EnrolActn), 1); err != nil {
		return err
	}

	if err := validate.Pattern("enrolActn", "body", string(*m.EnrolActn), `^[0-9]*$`); err != nil {
		return err
	}

	return nil
}

func (m *OfferEnrolmentMaintenanceRequest) validateOfferCd(formats strfmt.Registry) error {

	if swag.IsZero(m.OfferCd) { // not required
		return nil
	}

	if err := validate.MinLength("offerCd", "body", string(*m.OfferCd), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("offerCd", "body", string(*m.OfferCd), 10); err != nil {
		return err
	}

	return nil
}

func (m *OfferEnrolmentMaintenanceRequest) validateOfferPriority(formats strfmt.Registry) error {

	if swag.IsZero(m.OfferPriority) { // not required
		return nil
	}

	if err := validate.MinLength("offerPriority", "body", string(*m.OfferPriority), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("offerPriority", "body", string(*m.OfferPriority), 5); err != nil {
		return err
	}

	if err := validate.Pattern("offerPriority", "body", string(*m.OfferPriority), `^[0-9]*$`); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OfferEnrolmentMaintenanceRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OfferEnrolmentMaintenanceRequest) UnmarshalBinary(b []byte) error {
	var res OfferEnrolmentMaintenanceRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
