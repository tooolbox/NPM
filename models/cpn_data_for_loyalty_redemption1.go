// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CpnDataForLoyaltyRedemption1 cpn data for loyalty redemption1
//
// swagger:model CpnDataForLoyaltyRedemption1
type CpnDataForLoyaltyRedemption1 struct {

	//  Max length = 5, Coupon Denomination. It should be a valid numeric value, if entered. Coupon Denomination should not be given if the reward category  (GMCG-REWARDS-CAT ) is: PPDNEW PPDREL PPDGEN
	// Max Length: 5
	// Min Length: 0
	// Pattern: ^[0-9]*$
	CpnDenom *string `json:"cpnDenom,omitempty"`

	//  Max length = 2, Coupon Number. It should be a valid numeric value. Coupon Number should not be given if the reward category (GMCG-REWARDS-CAT ) is: PPDNEW PPDREL PPDGEN
	// Max Length: 2
	// Min Length: 0
	// Pattern: ^[0-9]*$
	CpnNbr *string `json:"cpnNbr,omitempty"`
}

// Validate validates this cpn data for loyalty redemption1
func (m *CpnDataForLoyaltyRedemption1) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCpnDenom(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCpnNbr(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CpnDataForLoyaltyRedemption1) validateCpnDenom(formats strfmt.Registry) error {

	if swag.IsZero(m.CpnDenom) { // not required
		return nil
	}

	if err := validate.MinLength("cpnDenom", "body", string(*m.CpnDenom), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("cpnDenom", "body", string(*m.CpnDenom), 5); err != nil {
		return err
	}

	if err := validate.Pattern("cpnDenom", "body", string(*m.CpnDenom), `^[0-9]*$`); err != nil {
		return err
	}

	return nil
}

func (m *CpnDataForLoyaltyRedemption1) validateCpnNbr(formats strfmt.Registry) error {

	if swag.IsZero(m.CpnNbr) { // not required
		return nil
	}

	if err := validate.MinLength("cpnNbr", "body", string(*m.CpnNbr), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("cpnNbr", "body", string(*m.CpnNbr), 2); err != nil {
		return err
	}

	if err := validate.Pattern("cpnNbr", "body", string(*m.CpnNbr), `^[0-9]*$`); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CpnDataForLoyaltyRedemption1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CpnDataForLoyaltyRedemption1) UnmarshalBinary(b []byte) error {
	var res CpnDataForLoyaltyRedemption1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
