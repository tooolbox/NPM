// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// EmbosserInquiryResponse embosser inquiry response
//
// swagger:model EmbosserInquiryResponse
type EmbosserInquiryResponse struct {

	//  Max length = 1, Card issue action code that determines the action CMS performs during the next  run of the Card Issue program (ARU200). The values are: 0 = No action. No cards requested. 1 = Issue new card(s).  2 = Issue additional card(s).  3 = Issue replacement card(s). 5 =  PIN Reminder 7 = Reissue card. 8 = Reissue card with different card numbering scheme (CNS).  9 = Card technology reissue.  A- Additional card R- Random PIN mailer request L - Lost/Stolen card request B - Replacement cards with PIN Mailer
	Action string `json:"action,omitempty"`

	//  Max length = 40, Address Line 1: First line of the address to which the card and PIN mailer is sent.
	Address1 string `json:"address1,omitempty"`

	//  Max length = 40, Address Line 2: Second line of the address to which the card and PIN mailer is sent.
	Address2 string `json:"address2,omitempty"`

	//  Max length = 9, The branch number that identifies the card mailing location for all reissued cards when the branch delivery option is used.
	AdminBrnch string `json:"adminBrnch,omitempty"`

	//  Max length = 17, Maximum amount in monetary units and subunits of ATM cash authorizations allowed for this Embosser record for the frequency defined in the FREQ field.
	AtmCashAmt string `json:"atmCashAmt,omitempty"`

	//  Max length = 11, Total amount of ATM cash transactions for this card cycle-to-date.
	AtmCashAmtCtd string `json:"atmCashAmtCtd,omitempty"`

	//  Max length = 11, Total amount of ATM cash transactions for this card life-to-date.
	AtmCashAmtLtd string `json:"atmCashAmtLtd,omitempty"`

	//  Max length = 11, Total amount of ATM cash transactions for this card today.
	AtmCashAmtToday string `json:"atmCashAmtToday,omitempty"`

	//  Max length = 11, Total amount of ATM cash transactions for this card year-to-date.
	AtmCashAmtYtd string `json:"atmCashAmtYtd,omitempty"`

	//  Max length = 9, Maximum number of ATM cash authorizations allowed for this Embosser record for the frequency defined in the FREQ field.
	AtmCashNbr string `json:"atmCashNbr,omitempty"`

	//  Max length = 4, Total number of ATM cash transactions for this cycle-to-date.
	AtmCashNbrCtd string `json:"atmCashNbrCtd,omitempty"`

	//  Max length = 4, Total number of ATM cash transactions for this card life-to-date.
	AtmCashNbrLtd string `json:"atmCashNbrLtd,omitempty"`

	//  Max length = 4, Total number of ATM cash transactions for this card today.
	AtmCashNbrToday string `json:"atmCashNbrToday,omitempty"`

	//  Max length = 4, Total number of ATM cash transactions for this card year-to-date.
	AtmCashNbrYtd string `json:"atmCashNbrYtd,omitempty"`

	//  Max length = 1, Code that indicates the frequency for the maximum authorization parameters. This frequency code applies to the RETAIL PURCH AMT through TXN LIMIT RETAIL fields, inclusive. The values are: 0 = Not used (Default) 1 = Daily 2 = Cycle-to-date 3 = Year-to-date.  E.g.: If FREQ is 1 (daily), the RETAIL PURCH AMT field is the max. amount of retail authorizations allowed per day.  If FREQ is 2 (cycle-to-date), the RETAIL PURCH AMT field is the max. amount of retail authorizations allowed per cycle.
	AtmOtcRtlFreq string `json:"atmOtcRtlFreq,omitempty"`

	//  Max length = 1, Flag to indicate whether ATM transactions have been restricted on the Logo or not.  Valid values: 0 - Logo does not provide ATM restriction option (Default) 1 - Logo provides ATM restriction options (account/card level). 2 - ATM restriction at logo level (overrides the account/card level restrictions) 3 - ATM restriction on international use at logo level (overrides the account/card level restrictions) 9 - ATM restriction on domestic use at logo level for non *on-us acquired bank ATMs.
	AtmRestrLogo string `json:"atmRestrLogo,omitempty"`

	//  Max length = 1, Flag to indicate whether ATM transactions have been restricted on the embosser or not. Valid values are:  0 - Embosser has no ATM restrictions (Default) 1 - Embosser has ATM transactions restricted  2 - Embosser has domestic ATM transactions restricted 3 - Embosser has international ATM transactions restricted
	AtmRestrictFlag string `json:"atmRestrictFlag,omitempty"`

	//  Max length = 17, Maximum authorization amount in monetary units and subunits of a single ATM transaction allowed for this Embosser record for the frequency defined in the FREQ field.
	AtmSnglTxn string `json:"atmSnglTxn,omitempty"`

	//  Max length = 3, Identification number of the Authorization Criteria table assigned to the Embosser record. This number must identify a valid table previously added using the Authorization Criteria Table screens (ARLM).
	AuthCritTblNbr string `json:"authCritTblNbr,omitempty"`

	//  Max length = 3, Identification number of the HCS Spending Limits table assigned to the account.
	AuthSpndLmtTbl string `json:"authSpndLmtTbl,omitempty"`

	//  Max length = 1, Block code assigned to the Embosser record. Card Block codes control specific processing options at card level.
	BlockCd string `json:"blockCd,omitempty"`

	// Format: YYYYMMDD. The effective date of the block code. Date the block code was added or modified on the card.
	BlockDt string `json:"blockDt,omitempty"`

	//  Max length = 3, Block Secure ID:. Operator security sign-on identification of the person who entered the current block code.
	BlockSecID string `json:"blockSecId,omitempty"`

	// Format: YYYYMMDD. Date First Card Verify. Estimated Date on which card activation requirements are enforced. The system calculates this date based on the day the card is issued by adding the number of days defined in product configuration  to the processing date of the daily run.
	CardActDt string `json:"cardActDt,omitempty"`

	//  Max length = 1, Card Action Reason: User-defined reason code associated with the current card issue action code. This field can identify specific notations to print in card and PIN mailers.
	CardActReas string `json:"cardActReas,omitempty"`

	// Format: YYYYDDD. Date on which the card is activated.
	CardActivatedDt string `json:"cardActivatedDt,omitempty"`

	//  Max length = 2, Number of days to warehouse the card mailer before releasing the card for printing. The values are 00-99
	CardDelayDays string `json:"cardDelayDays,omitempty"`

	// CARD INFO
	CardInfo []*CardInfoForEmbosserInquiry1 `json:"cardInfo"`

	//  Max length = 19, Unique Card Number embossed on card plastic.
	CardNbr string `json:"cardNbr,omitempty"`

	//  Max length = 4, Card Sequence Number: Identification number assigned to Embosser record to distinguish between multiple cards issued with the same card.
	CardSeq string `json:"cardSeq,omitempty"`

	//  Max length = 1, Card technology indicator which identifies the type of card. For e.g. Smart card etc.,
	CardTech string `json:"cardTech,omitempty"`

	//  Max length = 1, Cardholder Flag: Flag that indicates whether the card is issued as a primary or secondary card.  Values are:  '0' - Primary Cardholder  '1' - Additional Cardholder
	CardhldrFlag string `json:"cardhldrFlag,omitempty"`

	//  Max length = 1, Cardholder Type: Code that indicates whether the card is issued as a primary or secondary card. The values are: 0 = Additional Cardholder 1 = Primary Cardholder
	CardholderType string `json:"cardholderType,omitempty"`

	//  Max length = 3, Indicates the number of cards currently outstanding for this embosser.
	CardsOutst string `json:"cardsOutst,omitempty"`

	//  Max length = 3, Indicates the number of cards that were returned for the current day.
	CardsRtn string `json:"cardsRtn,omitempty"`

	//  Max length = 30, City portion of the mailing address for cards and PIN mailers.
	City string `json:"city,omitempty"`

	// common
	Common *Header `json:"common,omitempty"`

	//  Max length = 19, Converted Card Number: Converted from old card number, this field holds the original card number for cards during conversion that have been allocated a new plastic number.
	ConvCardNbr string `json:"convCardNbr,omitempty"`

	// Format: YYYYDDD. Date embossed on a card that indicates when the card becomes valid. This date is the first day of the month on which the card becomes valid.
	CurrCardVldFrom string `json:"currCardVldFrom,omitempty"`

	//  Max length = 3, Currency Code at Org Level: ISO currency code that identifies the unit of currency for this account.
	CurrCd string `json:"currCd,omitempty"`

	//  Max length = 2, Chip sequence number of the most recently issued card.
	CurrChipSeq string `json:"currChipSeq,omitempty"`

	//  Max length = 1, Current First usage flag: Indicates whether card activation needs to occur for the most recently issued card.  Values are:  'Y' - Card activation needs to occur  'N' - No card activation is required or card activation has already occurred   'D' - Card deactivated
	CurrCrdAct string `json:"currCrdAct,omitempty"`

	// Format: YYYYMMDD. Indicates the date on which the most recently issued card expires.
	CurrCrdExpDt string `json:"currCrdExpDt,omitempty"`

	// Format: YYYYDDD. Current Card Mailer Date: Date the current card was mailed to the cardholder.
	CurrCrdMailDt string `json:"currCrdMailDt,omitempty"`

	//  Max length = 3, Currency NOD: Number of decimal positions to the right of the decimal point (or other decimal character) in monetary amount fields.
	CurrNod string `json:"currNod,omitempty"`

	//  Max length = 19, Customer Number: Customer Name/Address record for the person to which the card is assigned.
	CustNbr string `json:"custNbr,omitempty"`

	//  Max length = 17, Maximum authorization amount in monetary units and subunits for ATM transactions allowed daily.
	DailyAtmAmt string `json:"dailyAtmAmt,omitempty"`

	// Format: YYYYMMDD. Date Last Plastic Issue: Date when the most recently issued card was produced.
	DateLstPlstIssue string `json:"dateLstPlstIssue,omitempty"`

	// Format: YYYYMMDD. Next expiration date of the card.
	DateNextExpr string `json:"dateNextExpr,omitempty"`

	//  Max length = 10, Artwork ID
	DigitalID string `json:"digitalId,omitempty"`

	//  Max length = 1, Disability Indicator: Code that indicates whether special processing is required for correspondence with this customer. Values are:                          Blank = Not used (Default) A = Audio B = Braille C = CD-ROM H = Hard of hearing/Minicom L = Large print P = Plain text E = Elderly (old age) M = Mental difficulties O = Other.
	DisabilityInd string `json:"disabilityInd,omitempty"`

	// Format: YYYYMMDD. Card expiry date: Indicates the date on which the most recently issued card expires.
	DtExp string `json:"dtExp,omitempty"`

	//  Max length = 1, Dual currency indicator. The values are: F = Foreign account L = Local account.
	DualInd string `json:"dualInd,omitempty"`

	//  Max length = 1, Flag that indicate whether e-commerce transactions are restricted for this Logo or not.    0 - Logo does not provide e-commerce restriction option to its customers (Default) 1 - Logo provides e-commerce restriction option to its customers (account/card level). 2 - Logo provides e-commerce restriction at logo level (overrides the account/card level restrictions) 3 - Logo provides e-commerce restriction only on international use at logo level (overrides the account/card level restrictions)
	EcomRestrLogo string `json:"ecomRestrLogo,omitempty"`

	//  Max length = 1, Flag that indicate whether e-commerce transactions are restricted for this card or not.   Values are:  0 - No e-commerce restrictions on the card (Default) 1 - All e-commerce transactions are restricted on the card 2 - Domestic e-commerce transactions are restricted on the card 3 - International e-commerce transactions are restricted on the card
	EcommRestrictInd string `json:"ecommRestrictInd,omitempty"`

	//  Max length = 1, Code that indicates whether the Embosser record is associated with the emergency card. The values are: Y = Emergency card with lower credit limit/expiration date N = Regular card
	EcrCard string `json:"ecrCard,omitempty"`

	//  Max length = 9, Emergency replacement card credit limit or open-to-buy (OTB) amount. Thisamount is the lowest amount of the following: 1. Credit limit calculated using the ECR credit limit percentage defined at the logo level (AZML09) 2. Credit limit fixed amount defined at the logo level 3. Current account OTB.
	EcrCardLmt string `json:"ecrCardLmt,omitempty"`

	//  Max length = 19, Identification number of the emergency card issued.
	EcrCardNbr string `json:"ecrCardNbr,omitempty"`

	//  Max length = 1, Code that indicates whether to notify the cardholder via e-mail of the plastic dispatch. The values are: Y = Yes, notify the cardholder via e-mail of the plastic dispatch N = No, do not notify the cardholder via e-mail of the plastic dispatch.
	EmailNofitySent string `json:"emailNofitySent,omitempty"`

	//  Max length = 10, Unique account serial number.
	EmbAcctSerNbr string `json:"embAcctSerNbr,omitempty"`

	//  Max length = 1, Code that indicates whether a PIN must be set at the ATM for a debit card. The values are: 0 = PIN set at ATM not required or PIN already has been set 1 = PIN set at ATM is required.
	EmbAtmPinInd string `json:"embAtmPinInd,omitempty"`

	//  Max length = 10, Unique card serial number.
	EmbCardSerNbr string `json:"embCardSerNbr,omitempty"`

	//  Max length = 9, Field contains the Branch/Store ID where instant issuance fulfilled.
	EmbIssBranchID string `json:"embIssBranchId,omitempty"`

	//  Max length = 1, Indicator detailing the status of instant issuance embossing request. Valid Values: 0 - No processing (Default) 1 - Rrequested - Waiting for PIN set. 2 - In progress - Sent to data prep.  3 - Failed - Data prep. failure. 4 - In progress - Sent to client. 5 - Failed - Failed delivery 6 - Failed - Processing failure at client. 7 - Failed - Delivery failure to branch/store. 8 - Failed - Card not produced in-store. 9 - Completed. B - Card iss. completed in batch - Instant iss. emb. failed.
	EmbIssEmbStatus string `json:"embIssEmbStatus,omitempty"`

	//  Max length = 26, Embossed Name 1: Name embossed on the first embossing line of the card.
	EmbName1 string `json:"embName1,omitempty"`

	//  Max length = 1, Embossed Name Type 1: Type of name for EMBOSSED NAME 1. Values are: 0 = Personal name (Default) 3 = Generic name. If you enter 3 for the type and leave the EMBOSSED NAME 1 field blank, the embossed name defaults from the NAME LINE 1 field on ARML39.
	EmbName1Type string `json:"embName1Type,omitempty"`

	//  Max length = 26, Embossed Name 2: Name embossed on the second embossing line of the card.
	EmbName2 string `json:"embName2,omitempty"`

	//  Max length = 1, Embossed Name Type 2: Type of name for EMBOSSED NAME 2.  Values are: 0 = Personal name (Default) 3 = Generic name. If you enter 3 for the type and leave the EMBOSSED NAME 2 field blank, the embossed name defaults from the NAME LINE 2 field on ARML39.
	EmbName2Type string `json:"embName2Type,omitempty"`

	//  Max length = 1, Cardholder's preferred method of PIN delivery. Values are: 0 - PIN is delivered by paper PIN mailer 1 - PIN is delivered by SMS 2 - Deliver PIN by PIN Now Web
	EmbPinCommPref string `json:"embPinCommPref,omitempty"`

	//  Max length = 1, Indicates PIN communication preference override.  Valid Values: 0 - No override 1 - Override to PIN by SMS 2 - Override to PIN Mailer (Paper) 3 - System generated override to PIN by SMS (to be processed in VisionPLUS batch)
	EmbPinCommPrefOvrd string `json:"embPinCommPrefOvrd,omitempty"`

	//  Max length = 20, Field contains the memorable word (masked) used to authenticate the cardholder prior to releasing the SMS containing the PIN.
	EmbPinMemWord string `json:"embPinMemWord,omitempty"`

	//  Max length = 20, This field will contain the cardholders mobile number to which the SMS containing the PIN information will be sent.
	EmbPinMobileNbr string `json:"embPinMobileNbr,omitempty"`

	//  Max length = 1, Pin Verify Method: Field to show whether this plastic is verifying the PIN using the PVV or PIN OFFSET Method. Values are: 0 - PIN offset method (Default) 1 - PVV method
	EmbPinVerifyMtd string `json:"embPinVerifyMtd,omitempty"`

	//  Max length = 19, Number of the Embosser record replacement associated with a fraud card transfer.   On the Embosser record of the card that was transferred (blocked lost   / stolen / fraudulently used, with a status of F and a populated FRAUD field), this number identifies the Embosser record generated to replace the fraud card.  On the Embosser record of the card that was generated to replace the fraud card, this number identifies the original, transferred Embosser record.
	EmbRepl string `json:"embRepl,omitempty"`

	//  Max length = 5, Cardholder's affiliation or affinity group. The values are user-defined.
	EmblemID string `json:"emblemId,omitempty"`

	//  Max length = 9, Branch number that identifies the card mailing location for the issue of all new cards when the branch delivery option is used.
	FirstIssBranch string `json:"firstIssBranch,omitempty"`

	// Format: YYYYMMDD. Date that a fraud card transfer for this embosser is effective.   Transactions with an effective date prior to this date post to the original post-to account (POST TO ACCOUNT NUMBER).  Transactions with an effective date equal to or greater than this date post to the fraud account generated or assigned by the card transfer, identified in the FRAUD field.  All payments post to the original account, regardless of the effective date.
	FraudEffDt string `json:"fraudEffDt,omitempty"`

	//  Max length = 19, Number of the fraud account to which this Embosser record was transferred. This field  displays a value only if the card was blocked and transferred using the Fraud Card Transfer (ARCE) function. Fraud card transfer associates a lost, stolen, or fraudulently used card with a special fraud account.  This account is the post-to account number for  transactions received for the card that have an effective date equal to or greater than the fraud card transfer effective date (FR EFF DATE).
	FraudNbr string `json:"fraudNbr,omitempty"`

	//  Max length = 1, Gender code. Values are: 0 - Gender not specified 1 - Male 2 - Female
	GenderCd string `json:"genderCd,omitempty"`

	//  Max length = 2, INV PIN TRIES
	InvPinTries string `json:"invPinTries,omitempty"`

	// Format: YYYYMMDD. Contains the Date of last update to INSTANT ISSUANCE EMBOSSING STATUS.
	IssEmbStatDte string `json:"issEmbStatDte,omitempty"`

	//  Max length = 3, Issue Delivery Option: Identifies the delivery option for new cards.  Values are: 0 - Regular mail (Default) 1 - First class mail 2 - Registered mail 3 - Return to Bank 004-009 - User defined 10 - Virtual Card 11 - Ghost Card
	IssueDelivOption string `json:"issueDelivOption,omitempty"`

	//  Max length = 1, Identifies the current action employed for producing a magnetic-stripe card. CMS uses this field to determine when a magnetic-stripe card has a PIN mailer warehoused and when to release the mailer. This field is system-generated; The values are: 0 = No issue in progress 1 = Issue pending 3 = Replacement pending 5 = PIN request pending 6 = Emergency replacement pending 7 = Reissue pending 8 = Card numbering scheme (CNS) reissue pending 9 = Card technology reissue pending.
	IssueStat string `json:"issueStat,omitempty"`

	//  Max length = 1, Language Indicator: User-defined code that indicates the language spoken by the customer.
	LangCode string `json:"langCode,omitempty"`

	// Format: YYYYMMDD. Date on which the address was last updated at the embosser level.
	LastAddrChgDt string `json:"lastAddrChgDt,omitempty"`

	//  Max length = 1, Prior First Usage Flag: Indicates whether card activation needs to occur for the previously issued card. Values are:  'Y' - Card activation needs to occur  'N' - No card activation is required or card activation has already occurred  'D' - Prior card deactive
	LastCrdAct string `json:"lastCrdAct,omitempty"`

	//  Max length = 3, Delivery option (mail code) used for the card that was last dispatched The values are: 000 = Regular mail (Default) 001 = First-class mail 002 = Registered mail 003 = Internal delivery mail 004-999 = User-defined
	LastDspchDlvry string `json:"lastDspchDlvry,omitempty"`

	// Format: YYYYMMDD. Date on which the card was last dispatched.
	LastDspchDt string `json:"lastDspchDt,omitempty"`

	//  Max length = 1, Code that indicates the last PIN maintenance action The default value is blank (space).  The values are: G = System Generated PIN  P = PIN Change M  = PIN Advice L  = PIN Block U  = PIN Unblock
	LastPinAct string `json:"lastPinAct,omitempty"`

	// Format: YYYYMMDD. Last PIN Action Date: date on which the last PIN maintenance activity occurred, either manually by an operator or automatically by system. This field is system-generated.
	LastPinActDate string `json:"lastPinActDate,omitempty"`

	// Format: YYYYMMDD. Last Pin Mailer Dispatch Date: Date on which the last Pin mailer was dispatched.
	LastPinDspchDate string `json:"lastPinDspchDate,omitempty"`

	//  Max length = 3, Mail code of the last PIN mailer that was dispatched The values are: 000 = Regular mail (Default) 001 = First-class mail 002 = Registered mail 003 = Internal delivery mail 004-999 = User-defined.
	LastPinDspchDvlOpt string `json:"lastPinDspchDvlOpt,omitempty"`

	//  Max length = 3, Identification number of the logo.
	Logo string `json:"logo,omitempty"`

	//  Max length = 1, Visa Mini Indicator: Code that indicates the version of Visa Mini card. Values are: 0 = Standard card (Default) 1 = Visa Mini stand-alone card 2 = Visa Mini companion card
	Mini string `json:"mini,omitempty"`

	//  Max length = 20, Mobile Device ID: Identification of a mobile device associated with a mobile payment instrument (PI) embosser.
	MobileDeviceInd string `json:"mobileDeviceInd,omitempty"`

	//  Max length = 1, Mobile Provision Status: Code that indicates whether the embosser is for a mobile payment instrument (PI) and the current provisioning status for the PI. The values are: 0 =  Not applicable (default) 1 =  Mobile PI ready to be provisioned 2 =  Mobile PI provisioning complete 3 =  Previous provision of the Mobile PI unsuccessful 4 =  Mobile PI provisioned and removed
	MobileProvisionSt string `json:"mobileProvisionSt,omitempty"`

	//  Max length = 1, Flag to indicate whether MOTO transactions have been restricted on the Logo or not.  Valid values are:  0 - Logo does not provide MOTO restriction option to its customers (Default) 1 - Logo provides MOTO restriction option to its customers (account/card level). 2 - Logo provides MOTO restriction at logo level (overrides the account/card level restrictions)
	MotoRestrLogo string `json:"motoRestrLogo,omitempty"`

	//  Max length = 1, Flag to indicate whether MOTO transactions have been restricted on the embosser or not. Valid values are:  0 - Embosser has no MOTO restrictions (Default) 1 - Embosser has MOTO transactions restricted  2 - Embosser has domestic MOTO transactions restricted 3 - Embosser has international MOTO transactions restricted
	MotoRestrictFlag string `json:"motoRestrictFlag,omitempty"`

	//  Max length = 3, Multi scheme account  logo. For Multi-Scheme records populated with the POST TO ACCT Logo to separate from the card logo.
	MsAcctLogo string `json:"msAcctLogo,omitempty"`

	//  Max length = 19, Multi Scheme Card Set ID: Field used to group all the cards held by an individual cardholder. The card set ID is set to the first card number issued for an account.
	MsCardSetID string `json:"msCardSetId,omitempty"`

	//  Max length = 1, Multi scheme Pin Alignment Flag: Flag to indicate that the Pin for the card is to be the same as any other cards issued for the individual cardholder. Values are: 0 - No alignment.  The Pin is to be calculated separately for each card issued (default) 1 - Customer/Card Set alignment.  Embossing records with the same Card Set ID will have the Pin aligned on issue.
	MsPinAlign string `json:"msPinAlign,omitempty"`

	//  Max length = 1, Indicates whether spending statistics are to be accumulated at plastic card level or at CARD SET ID level. Defaulted from Logo level flag CARD STATS LEVEL. The values are: 0 = Plastic card level (as per the current functionality) 1 = Card set ID level.
	MsStatsLevel string `json:"msStatsLevel,omitempty"`

	//  Max length = 40, Embosser Name 1: Name field 1 of the Cardholder, used for mailing card and PIN mailers.
	Name1 string `json:"name1,omitempty"`

	//  Max length = 40, Embosser Name 2: Name field 2 of the cardholder, used for mailing card and PIN mailers.
	Name2 string `json:"name2,omitempty"`

	//  Max length = 2, Identifies the number of cards requested.
	NbrRqsted string `json:"nbrRqsted,omitempty"`

	//  Max length = 1, OFFLINE PIN
	OfflinePin string `json:"offlinePin,omitempty"`

	//  Max length = 7, Previous PIN OFFSET: This field stores the offset for a card that is not the most recent issue.  When a card is replaced or reissued with a new PIN, the Existing offset (for the old card) is moved from the PIN-OFFSET field to the OLD CARD OFFSET field(Signed value).
	OldCardOffset string `json:"oldCardOffset,omitempty"`

	//  Max length = 17, Maximum amount in monetary units and subunits of OTC cash authorizations allowed for this Embosser record for the frequency defined in the FREQ field.
	OtcCashAmt string `json:"otcCashAmt,omitempty"`

	//  Max length = 11, Total amount of OTC cash transactions for this card cycle-to-date.
	OtcCashAmtCtd string `json:"otcCashAmtCtd,omitempty"`

	//  Max length = 11, Total amount of OTC cash transactions for this card life-to-date.
	OtcCashAmtLtd string `json:"otcCashAmtLtd,omitempty"`

	//  Max length = 11, Total amount of OTC cash transactions for this card today.
	OtcCashAmtToday string `json:"otcCashAmtToday,omitempty"`

	//  Max length = 11, Total amount of OTC cash transactions for this card year-to-date.
	OtcCashAmtYtd string `json:"otcCashAmtYtd,omitempty"`

	//  Max length = 9, Maximum number of OTC authorizations allowed for this Embosser record for the frequency defined in the FREQ field.
	OtcCashNbr string `json:"otcCashNbr,omitempty"`

	//  Max length = 4, Total number of OTC cash transactions for this  cycle-to-date.
	OtcCashNbrCtd string `json:"otcCashNbrCtd,omitempty"`

	//  Max length = 4, Total number of OTC cash transactions for this card life-to-date.
	OtcCashNbrLtd string `json:"otcCashNbrLtd,omitempty"`

	//  Max length = 4, Total number of OTC cash transactions for this card today.
	OtcCashNbrToday string `json:"otcCashNbrToday,omitempty"`

	//  Max length = 4, Total number of OTC cash transactions for this card year-to-date.
	OtcCashNbrYtd string `json:"otcCashNbrYtd,omitempty"`

	//  Max length = 17, Maximum amount in monetary units and subunits of OTC authorizations allowed for this Embosser record for the frequency defined in the FREQ field.
	OtcSnglTxn string `json:"otcSnglTxn,omitempty"`

	//  Max length = 1, Code that indicates whether the change of address is overridden The values are: Y = Change of address is overridden N = Change of address is not overridden
	OvrrideAddrChg string `json:"ovrrideAddrChg,omitempty"`

	//  Max length = 1, Flag to indicate whether all types of monetary overseas POS and ATM authorizations are restricted on the embossers or not. Valid values ar: 0 - Embosser has no overseas POS and ATM authorization restrictions (Default) 1 - Embosser has overseas POS and ATM authorizations restricted
	OvrsRestr string `json:"ovrsRestr,omitempty"`

	//  Max length = 2, Number of processing days between the date when CMS receives notification that a card was produced and the date when CMS generates the associated PIN mailer for the card. This field defaults from the PIN DELAY DAYS field on the Logo record (ARML13).
	PinDelay string `json:"pinDelay,omitempty"`

	//  Max length = 1, Field to indicate whether the cardholder has option to receive confirmation messages via SMS or email or both when a PIN Mailer is posted to customer. 0 - No confirmation messages will be sent 1 - PIN Dispatch message will be sent through Text message  2- PIN Dispatch Message will be sent through E-mail 3 - PIN Dispatch Message will be sent through both SMS and E-Mail
	PinDspchNftyMthd string `json:"pinDspchNftyMthd,omitempty"`

	//  Max length = 1, Code that indicates whether the e-mail notification is sent for the PIN mailer dispatched. The values are: Y = E-mail notification is sent N = E-mail notification is not sent.
	PinNftyEmailSent string `json:"pinNftyEmailSent,omitempty"`

	//  Max length = 7, PIN OFFSET: Current PIN offset.
	PinOffset string `json:"pinOffset,omitempty"`

	//  Max length = 1, Code that indicates the PIN override action taken at the embosser level. The values are: 0 = Do not use, do not generate PIN, and do not send PIN mailer (Default) 1 = Generate new PIN and send PIN mailer 2 = Send PIN mailer with existing PIN.
	PinOvrride string `json:"pinOvrride,omitempty"`

	//  Max length = 1, Pin Suppression Indicator. Flag indicating whether the PIN number and PIN mailer are produced. Values are:  0 - Yes, allow personal identification numbers (PINs)  1 - No, suppress PIN generation
	PinSuppr string `json:"pinSuppr,omitempty"`

	//  Max length = 10, Plastic ID: Identifies the plastic stock used to create a card for this Embosser record.
	PlasticID string `json:"plasticId,omitempty"`

	//  Max length = 1, Flag that indicates whether the PLUS symbol is displayed on the card.  The values are: 0 = Standard Visa card with no PLUS symbol (Default) 1 = Visa card with PLUS symbol displayed.
	Plus string `json:"plus,omitempty"`

	//  Max length = 1, Flag to indicate whether POS transactions have been restricted on the Logo or not.  Valid values are  0 - Logo does not provide POS restriction option to its customers (Default) 1 - Logo provides POS restriction option to its customers (account/card level). 2 - Logo provides POS restriction at logo level (overrides the account/card level restrictions) 3 - Logo provides POS restriction on international use at logo level (overrides the account/card level restrictions)
	PosRestrLogo string `json:"posRestrLogo,omitempty"`

	//  Max length = 1, Flag to indicate whether POS transactions have been restricted on the embosser or not. Valid values are: 0 - Embosser has no POS restrictions (Default) 1 - Embosser has POS transactions restricted  2 - Embosser has domestic POS transactions restricted 3 - Embosser has international POS transactions restricted
	PosRestrictFlag string `json:"posRestrictFlag,omitempty"`

	//  Max length = 3, POS Service Code: Code that indicates the type of point-of-sale service in effect for a card. The values for each digit depend on whether the card is a Visa, MasterCard, Europay, or private label card product.
	PosSvcCode string `json:"posSvcCode,omitempty"`

	//  Max length = 10, Postal Code: Postal code portion of the mailing address.
	PostCode string `json:"postCode,omitempty"`

	//  Max length = 19, Identification number of the Account Base Segment record to which CMS posts transactions that are received for this Embosser record.
	PostNbr string `json:"postNbr,omitempty"`

	//  Max length = 1, Prepaid indicator
	PrepaidFlg string `json:"prepaidFlg,omitempty"`

	//  Max length = 17, Amount of the spending limit prepayment transaction that resulted in a temporary increase in the spending limit for this cardholder.
	PrepaySpndAmt string `json:"prepaySpndAmt,omitempty"`

	//  Max length = 17, Current amount of the temporary increase in the spending limit for this cardholder as a result of a spending limit prepayment transaction.
	PrepaySpndAvail string `json:"prepaySpndAvail,omitempty"`

	// Format: YYYYMMDD. Date on which the temporary increase in the spending limit expires for this cardholder. CMS automatically calculates this date by adding the number of days defined in the Logo record (PREPAY SPENDING DAYS on ARML37) to the posting date of the spending limit prepayment transaction (SPNDG LMT PREPAY on ARMC19).
	PrepaySpndExpDt string `json:"prepaySpndExpDt,omitempty"`

	//  Max length = 1, PREV CARD ACT
	PrevCardAct string `json:"prevCardAct,omitempty"`

	// Format: YYYYMMDD. Date Last Plastic Issue: Date when the most recently issued card was produced.
	PrevCardIssDt string `json:"prevCardIssDt,omitempty"`

	//  Max length = 2, Chip sequence number of the card issued prior to the most recently issued card.
	PrevChipSeq string `json:"prevChipSeq,omitempty"`

	// Format: YYYYMMDD. Date last expiry: Indicates the date on which the previously issued card expired.
	PrevExpDt string `json:"prevExpDt,omitempty"`

	//  Max length = 7, Previous PIN offset.
	PrevPinOffset string `json:"prevPinOffset,omitempty"`

	//  Max length = 17, Maximum amount in monetary units and subunits of QUASI CASH authorizations allowed for the frequency defined in the FREQ field
	QuasiCashAmt string `json:"quasiCashAmt,omitempty"`

	//  Max length = 9, Maximum number of QUASI CASH authorizations allowed for the frequency defined in the FREQ field
	QuasiCashNbr string `json:"quasiCashNbr,omitempty"`

	//  Max length = 17, Maximum authorization amount in monetary units and subunits for a single QUASI CASH transaction
	QuasiTxnLimit string `json:"quasiTxnLimit,omitempty"`

	//  Max length = 9, Code that identifies regions for distribution of the Recovery Card List or the Card Recovery Bulletin.
	RegionCode string `json:"regionCode,omitempty"`

	//  Max length = 3, Re-issue Attempts. Number of issue or reissue attempts remaining for this card.
	ReisAttempt string `json:"reisAttempt,omitempty"`

	//  Max length = 3, Reissue Delivery Option: indicates the delivery option for reissued cards.  Values are:   000 - No special Delivery -   use regular mail (default) 001 - First Class Mail 002 - Registered Mail 003 - Internal Delivery Mail 004 - 999 - User Defined
	ReissueDelivOption string `json:"reissueDelivOption,omitempty"`

	//  Max length = 1, RESTR ALL
	RestrAll string `json:"restrAll,omitempty"`

	//  Max length = 1, RESTR ALL LOGO
	RestrAllLogo string `json:"restrAllLogo,omitempty"`

	// Format: YYYYMMDD. Restriction End Date: Date from which the usage restriction period expires.
	RestrictEndDate string `json:"restrictEndDate,omitempty"`

	// Format: YYYYMMDD. Restriction Start Date: Date from which the usage restriction period starts.
	RestrictStartDate string `json:"restrictStartDate,omitempty"`

	//  Max length = 1, Indicator of Lost/Stolen Status:Code that indicates whether the lost/stolen plastic card can be reinstated The values are: 0 = Card reinstatement not used  1 = Card has been transferred through ARXE and can be reinstated 2 = Card can be reinstated because the card issuance date plus card delay days plus hold days at bureau are less than today's date.
	RiLostStlnFlg string `json:"riLostStlnFlg,omitempty"`

	//  Max length = 1, Process trigger field (user updateable): Field that enables you to initiate the card reinstatement process and indicates whether the process is complete. The values are: Space = Reinstate process can be initiated. N = Reinstate process cannot be initiated as card issuance date plus card delay days plus hold days at bureau are less than today's date.  Y = Reinstate the lost/stolen card. Enter this value to initiate reinstatement. C = Reinstate process is complete for lost/stolen card.
	RiLostStlnPrc string `json:"riLostStlnPrc,omitempty"`

	//  Max length = 17, Maximum amount in monetary units and subunits of retail authorizations allowed for this Embosser record for the frequency defined in the FREQ field.
	RtlAmt string `json:"rtlAmt,omitempty"`

	//  Max length = 11, Total amount of retail cash transactions for this card cycle-to-date.
	RtlCashAmtCtd string `json:"rtlCashAmtCtd,omitempty"`

	//  Max length = 11, Total amount of retail cash transactions for this card life-to-date.
	RtlCashAmtLtd string `json:"rtlCashAmtLtd,omitempty"`

	//  Max length = 11, Total amount of retail cash transactions for this card today.
	RtlCashAmtToday string `json:"rtlCashAmtToday,omitempty"`

	//  Max length = 11, Total amount of retail cash transactions for this card year-to-date.
	RtlCashAmtYtd string `json:"rtlCashAmtYtd,omitempty"`

	//  Max length = 4, Total number of retail cash transactions for this  cycle-to-date.
	RtlCashNbrCtd string `json:"rtlCashNbrCtd,omitempty"`

	//  Max length = 9, Total number of retail cash transactions for this card life-to-date.
	RtlCashNbrLtd string `json:"rtlCashNbrLtd,omitempty"`

	//  Max length = 4, Total number of retail cash transactions for this card today.
	RtlCashNbrToday string `json:"rtlCashNbrToday,omitempty"`

	//  Max length = 4, Total number of retail cash transactions for this card year-to-date.
	RtlCashNbrYtd string `json:"rtlCashNbrYtd,omitempty"`

	//  Max length = 9, Maximum number of retail authorizations allowed for this Embosser record for the frequency defined in the FREQ field.
	RtlNbr string `json:"rtlNbr,omitempty"`

	//  Max length = 17, Maximum amount in monetary units and subunits of retail authorizations allowed for this Embosser record for the frequency defined in the FREQ field.
	RtlSnglTxn string `json:"rtlSnglTxn,omitempty"`

	//  Max length = 1, Secure code activation indicator.
	ScActive string `json:"scActive,omitempty"`

	//  Max length = 1, Code that indicates the status of SMS notification sent for the PIN mailer dispatched to the cardholder. The values are: N = No SMS notification is sent F = SMS notification failed S = SMS notification is successfully sent.
	SmsOutcome string `json:"smsOutcome,omitempty"`

	//  Max length = 1, Indicator of SMS sent/fail/success status: Code that indicates whether to notify the cardholder via SMS of the plastic dispatch. The values are: N = None; SMS notification is not sent to the cardholder S = Sent; SMS notification is sent successfully to the cardholder F = Failure; SMS notification is sent but failed to reach the cardholder.
	SmsStatus string `json:"smsStatus,omitempty"`

	// 34 Occurrences. Group Variable
	SpndLmtsStats []*SpndLmtsStatsForEmbosserInquiry1 `json:"spndLmtsStats"`

	//  Max length = 1, Embosser Record Status. Values are: 0 -Permanent 1- Temporary F- Fraud S- Smart card manually reissued T - Permanent transfer out P - Purged
	StatCd string `json:"statCd,omitempty"`

	// Format: YYYYMMDD. Identifies the date on which the status was last changed, either manually by an operator or automatically by CMS
	StatDt string `json:"statDt,omitempty"`

	//  Max length = 3, Identifies the operator ID of the person who changed the status. If CMS last changed the status, SYS will display instead of an operator ID.
	StatID string `json:"statId,omitempty"`

	//  Max length = 3, State or province of the mailing address for card and PIN mailers.
	State string `json:"state,omitempty"`

	//  Max length = 17, Maximum number of authorizations allowed for the frequency defined in the FREQ field. This number will be inclusive of all Retail, ATM, OTC and Quasi authorizations.
	TotTxnNbr string `json:"totTxnNbr,omitempty"`

	//  Max length = 17, Maximum authorization amount in monetary units and subunits for all transactions allowed for the frequency defined in the FREQ field. This amount will be inclusive of all Retail, ATM, OTC and Quasi authorizations.
	TotXnAmt string `json:"totXnAmt,omitempty"`

	//  Max length = 19, Transfer Card Number. Number of the Embosser record replacement associated with a card transfer.
	TrnsfrCardNbr string `json:"trnsfrCardNbr,omitempty"`

	//  Max length = 2, Type of Card: Indicates the type of plastic stock.
	TypeCard string `json:"typeCard,omitempty"`

	//  Max length = 2, Type of Card Mailer: Identifies the type of card mailer to use to post the card.
	TypeCardMailer string `json:"typeCardMailer,omitempty"`

	//  Max length = 2, Requested Card Type: Identifies the type of card requested.
	TypeCardRqsted string `json:"typeCardRqsted,omitempty"`

	//  Max length = 20, User-defined code or description for this Embosser record. You can change the field name in the Logo record (EMB CODES 1-2 on ARML23).
	User1 string `json:"user1,omitempty"`

	//  Max length = 20, User-defined field.
	User10 string `json:"user10,omitempty"`

	//  Max length = 20, User-defined code or description for this Embosser record. You can change the field name in the Logo record (EMB CODES 1-2 on ARML23).
	User2 string `json:"user2,omitempty"`

	//  Max length = 19, User-defined code or description for this Embosser record. You can change the field name in the Logo record (EMB CODES 3-4 on ARML23).
	User3 string `json:"user3,omitempty"`

	//  Max length = 4, User-defined code or description for this Embosser record. You can change the field name in the Logo record (EMB CODES 3-4 on ARML23).
	User4 string `json:"user4,omitempty"`

	//  Max length = 1, User-defined code for this Embosser record. You can change the field name in the Logo record (EMB CODES 5-8 on ARML23).
	User5 string `json:"user5,omitempty"`

	//  Max length = 1, User-defined code for this Embosser record. You can change the field name in the Logo record (EMB CODES 5-8 on ARML23).
	User6 string `json:"user6,omitempty"`

	//  Max length = 1, User-defined code for this Embosser record. You can change the field name in the Logo record (EMB CODES 5-8 on ARML23).
	User7 string `json:"user7,omitempty"`

	//  Max length = 1, User-defined code for this Embosser record. You can change the field name in the Logo record (EMB CODES 5-8 on ARML23).
	User8 string `json:"user8,omitempty"`

	//  Max length = 19, User-defined field.
	User9 string `json:"user9,omitempty"`

	// Format: YYYYMMDD. User-defined dates for this Embosser record. You can change the field name in the Logo record (EMB DATES 1-2 on ARML23).
	UserDt1 string `json:"userDt1,omitempty"`

	// Format: YYYYMMDD. User-defined dates for this Embosser record. You can change the field name in the Logo record (EMB DATES 1-2 on ARML23).
	UserDt2 string `json:"userDt2,omitempty"`

	//  Max length = 1, Visa Device Indicator: Code that indicates the type of device (form factor) written to the track data on the card. This value is used by Visa for transaction reporting. The values are: 0 = Full-size standard card, noncontact less (Default) 1 = Full-size contactless card 2 = Standard mini card, noncontact less 3 = Contactless mini card 4 = Micro tag 5 = Mobile device 6-9 = Reserved.
	VisaDvcInd string `json:"visaDvcInd,omitempty"`

	// Format: YYYYMMDD. Indicates the date on which the account last appeared on a warning bulletin
	WarnBltnDt string `json:"warnBltnDt,omitempty"`

	//  Max length = 1, Warning Code 1. System-generated field used by  authorizations after interpreting a block code on the account or card.  The authorizations system reads these fields to determine whether to authorize transactions, pick up cards, or decline the authorization for specific reason codes.  Valid values:  '0', '  ' - Approve AUTH  '1' - Decline AUTH  '2' - Decline Pickup  '3' - Decline Fraud  '4' - Decline Refer  '8' - User AUTH  '9' - Approve VIP
	WarnCode1 string `json:"warnCode1,omitempty"`

	//  Max length = 1, Warning Code7  System-generated field used by authorizations designating possible fraudulent use of the card.  When a block code is placed on the Embossing record or base segment, the system interprets it and enters values into one or both fields. Not currently used. Valid values:  '0',  '  ' - Normal  '1' - Excess Auth  '2' - Excess Purchase Cash  '3' - Excess Return Purchase Ratio
	WarnCode7 string `json:"warnCode7,omitempty"`
}

// Validate validates this embosser inquiry response
func (m *EmbosserInquiryResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCardInfo(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCommon(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSpndLmtsStats(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *EmbosserInquiryResponse) validateCardInfo(formats strfmt.Registry) error {

	if swag.IsZero(m.CardInfo) { // not required
		return nil
	}

	for i := 0; i < len(m.CardInfo); i++ {
		if swag.IsZero(m.CardInfo[i]) { // not required
			continue
		}

		if m.CardInfo[i] != nil {
			if err := m.CardInfo[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("cardInfo" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *EmbosserInquiryResponse) validateCommon(formats strfmt.Registry) error {

	if swag.IsZero(m.Common) { // not required
		return nil
	}

	if m.Common != nil {
		if err := m.Common.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("common")
			}
			return err
		}
	}

	return nil
}

func (m *EmbosserInquiryResponse) validateSpndLmtsStats(formats strfmt.Registry) error {

	if swag.IsZero(m.SpndLmtsStats) { // not required
		return nil
	}

	for i := 0; i < len(m.SpndLmtsStats); i++ {
		if swag.IsZero(m.SpndLmtsStats[i]) { // not required
			continue
		}

		if m.SpndLmtsStats[i] != nil {
			if err := m.SpndLmtsStats[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("spndLmtsStats" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *EmbosserInquiryResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EmbosserInquiryResponse) UnmarshalBinary(b []byte) error {
	var res EmbosserInquiryResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
