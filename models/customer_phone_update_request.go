// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CustomerPhoneUpdateRequest customer phone update request
//
// swagger:model CustomerPhoneUpdateRequest
type CustomerPhoneUpdateRequest struct {

	// common
	Common *Header `json:"common,omitempty"`

	//  Max length = 1, Contact Type:Indicates type of phone number to be updated.  Values are: 1 - Home Phone 2 - Work Phone (Emp)     3 - Mobile  4 - Fax Phone
	// Required: true
	// Max Length: 1
	// Min Length: 0
	ContactType *string `json:"contactType"`

	//  Max length = 19, Account Number: Number of Customer's account. Must be numeric and greater than zero. This can be either Account number or Card number.
	// Required: true
	// Max Length: 19
	// Min Length: 0
	CustNbr *string `json:"custNbr"`

	//  Max length = 1, Foreign use indicator: Value indicates whether the incoming action is applied to the local or foreign account. The values are: 0 = Local account (default) 1 = Foreign account SPACE = defaults to 0 This field is ignored when the Organization is provided.
	// Max Length: 1
	// Min Length: 0
	ForeignUse *string `json:"foreignUse,omitempty"`

	//  Max length = 1, Number Type.  Values are: 0, space - CUST_NBR provided is account or card number 1 - CUST_NBR provided is customer number
	// Required: true
	// Max Length: 1
	// Min Length: 0
	NbrType *string `json:"nbrType"`

	//  Max length = 1, Owner Indicator. Values are: 0, space - Owner 1 - Co-owner
	// Required: true
	// Max Length: 1
	// Min Length: 0
	OwnerInd *string `json:"ownerInd"`

	//  Max length = 20, Phone number to be updated.
	// Required: true
	// Max Length: 20
	// Min Length: 0
	PhoneNbr *string `json:"phoneNbr"`
}

// Validate validates this customer phone update request
func (m *CustomerPhoneUpdateRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCommon(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateContactType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCustNbr(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateForeignUse(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNbrType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOwnerInd(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePhoneNbr(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CustomerPhoneUpdateRequest) validateCommon(formats strfmt.Registry) error {

	if swag.IsZero(m.Common) { // not required
		return nil
	}

	if m.Common != nil {
		if err := m.Common.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("common")
			}
			return err
		}
	}

	return nil
}

func (m *CustomerPhoneUpdateRequest) validateContactType(formats strfmt.Registry) error {

	if err := validate.Required("contactType", "body", m.ContactType); err != nil {
		return err
	}

	if err := validate.MinLength("contactType", "body", string(*m.ContactType), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("contactType", "body", string(*m.ContactType), 1); err != nil {
		return err
	}

	return nil
}

func (m *CustomerPhoneUpdateRequest) validateCustNbr(formats strfmt.Registry) error {

	if err := validate.Required("custNbr", "body", m.CustNbr); err != nil {
		return err
	}

	if err := validate.MinLength("custNbr", "body", string(*m.CustNbr), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("custNbr", "body", string(*m.CustNbr), 19); err != nil {
		return err
	}

	return nil
}

func (m *CustomerPhoneUpdateRequest) validateForeignUse(formats strfmt.Registry) error {

	if swag.IsZero(m.ForeignUse) { // not required
		return nil
	}

	if err := validate.MinLength("foreignUse", "body", string(*m.ForeignUse), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("foreignUse", "body", string(*m.ForeignUse), 1); err != nil {
		return err
	}

	return nil
}

func (m *CustomerPhoneUpdateRequest) validateNbrType(formats strfmt.Registry) error {

	if err := validate.Required("nbrType", "body", m.NbrType); err != nil {
		return err
	}

	if err := validate.MinLength("nbrType", "body", string(*m.NbrType), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("nbrType", "body", string(*m.NbrType), 1); err != nil {
		return err
	}

	return nil
}

func (m *CustomerPhoneUpdateRequest) validateOwnerInd(formats strfmt.Registry) error {

	if err := validate.Required("ownerInd", "body", m.OwnerInd); err != nil {
		return err
	}

	if err := validate.MinLength("ownerInd", "body", string(*m.OwnerInd), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("ownerInd", "body", string(*m.OwnerInd), 1); err != nil {
		return err
	}

	return nil
}

func (m *CustomerPhoneUpdateRequest) validatePhoneNbr(formats strfmt.Registry) error {

	if err := validate.Required("phoneNbr", "body", m.PhoneNbr); err != nil {
		return err
	}

	if err := validate.MinLength("phoneNbr", "body", string(*m.PhoneNbr), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("phoneNbr", "body", string(*m.PhoneNbr), 20); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CustomerPhoneUpdateRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CustomerPhoneUpdateRequest) UnmarshalBinary(b []byte) error {
	var res CustomerPhoneUpdateRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
