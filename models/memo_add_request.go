// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MemoAddRequest memo add request
//
// swagger:model MemoAddRequest
type MemoAddRequest struct {

	//  Max length = 19, Account Number: Number of Customer's account. Must be numeric and greater than zero. This can be either Account number or Card number.
	// Required: true
	// Max Length: 19
	// Min Length: 0
	Account *string `json:"account"`

	//  Max length = 4, A Four character code that identifies  the action to be taken
	// Required: true
	// Max Length: 4
	// Min Length: 0
	ActnCd *string `json:"actnCd"`

	//  Max length = 18, A Transaction Amount is required depending on Action code that is being used
	// Max Length: 18
	// Min Length: 0
	// Pattern: ^[0-9]*$
	Amt *string `json:"amt,omitempty"`

	// common
	Common *Header `json:"common,omitempty"`

	//  Max length = 19, Card number is required depending on Action code that is being used.
	// Max Length: 19
	// Min Length: 0
	CrdNbr *string `json:"crdNbr,omitempty"`

	//  Max length = 60, Free text that is stored against  the account, this can be used to identify to operators why the Action code has been used.
	// Required: true
	// Max Length: 60
	// Min Length: 0
	MemoLine1 *string `json:"memoLine1"`

	//  Max length = 60, Memo Line 2
	// Max Length: 60
	// Min Length: 0
	MemoLine2 *string `json:"memoLine2,omitempty"`

	//  Max length = 60, Memo Line 3
	// Max Length: 60
	// Min Length: 0
	MemoLine3 *string `json:"memoLine3,omitempty"`

	//  Max length = 60, Memo Line 3
	// Max Length: 60
	// Min Length: 0
	MemoLine4 *string `json:"memoLine4,omitempty"`

	//  Max length = 60, Memo Line 3
	// Max Length: 60
	// Min Length: 0
	MemoLine5 *string `json:"memoLine5,omitempty"`
}

// Validate validates this memo add request
func (m *MemoAddRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateActnCd(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAmt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCommon(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCrdNbr(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMemoLine1(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMemoLine2(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMemoLine3(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMemoLine4(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMemoLine5(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MemoAddRequest) validateAccount(formats strfmt.Registry) error {

	if err := validate.Required("account", "body", m.Account); err != nil {
		return err
	}

	if err := validate.MinLength("account", "body", string(*m.Account), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("account", "body", string(*m.Account), 19); err != nil {
		return err
	}

	return nil
}

func (m *MemoAddRequest) validateActnCd(formats strfmt.Registry) error {

	if err := validate.Required("actnCd", "body", m.ActnCd); err != nil {
		return err
	}

	if err := validate.MinLength("actnCd", "body", string(*m.ActnCd), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("actnCd", "body", string(*m.ActnCd), 4); err != nil {
		return err
	}

	return nil
}

func (m *MemoAddRequest) validateAmt(formats strfmt.Registry) error {

	if swag.IsZero(m.Amt) { // not required
		return nil
	}

	if err := validate.MinLength("amt", "body", string(*m.Amt), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("amt", "body", string(*m.Amt), 18); err != nil {
		return err
	}

	if err := validate.Pattern("amt", "body", string(*m.Amt), `^[0-9]*$`); err != nil {
		return err
	}

	return nil
}

func (m *MemoAddRequest) validateCommon(formats strfmt.Registry) error {

	if swag.IsZero(m.Common) { // not required
		return nil
	}

	if m.Common != nil {
		if err := m.Common.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("common")
			}
			return err
		}
	}

	return nil
}

func (m *MemoAddRequest) validateCrdNbr(formats strfmt.Registry) error {

	if swag.IsZero(m.CrdNbr) { // not required
		return nil
	}

	if err := validate.MinLength("crdNbr", "body", string(*m.CrdNbr), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("crdNbr", "body", string(*m.CrdNbr), 19); err != nil {
		return err
	}

	return nil
}

func (m *MemoAddRequest) validateMemoLine1(formats strfmt.Registry) error {

	if err := validate.Required("memoLine1", "body", m.MemoLine1); err != nil {
		return err
	}

	if err := validate.MinLength("memoLine1", "body", string(*m.MemoLine1), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("memoLine1", "body", string(*m.MemoLine1), 60); err != nil {
		return err
	}

	return nil
}

func (m *MemoAddRequest) validateMemoLine2(formats strfmt.Registry) error {

	if swag.IsZero(m.MemoLine2) { // not required
		return nil
	}

	if err := validate.MinLength("memoLine2", "body", string(*m.MemoLine2), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("memoLine2", "body", string(*m.MemoLine2), 60); err != nil {
		return err
	}

	return nil
}

func (m *MemoAddRequest) validateMemoLine3(formats strfmt.Registry) error {

	if swag.IsZero(m.MemoLine3) { // not required
		return nil
	}

	if err := validate.MinLength("memoLine3", "body", string(*m.MemoLine3), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("memoLine3", "body", string(*m.MemoLine3), 60); err != nil {
		return err
	}

	return nil
}

func (m *MemoAddRequest) validateMemoLine4(formats strfmt.Registry) error {

	if swag.IsZero(m.MemoLine4) { // not required
		return nil
	}

	if err := validate.MinLength("memoLine4", "body", string(*m.MemoLine4), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("memoLine4", "body", string(*m.MemoLine4), 60); err != nil {
		return err
	}

	return nil
}

func (m *MemoAddRequest) validateMemoLine5(formats strfmt.Registry) error {

	if swag.IsZero(m.MemoLine5) { // not required
		return nil
	}

	if err := validate.MinLength("memoLine5", "body", string(*m.MemoLine5), 0); err != nil {
		return err
	}

	if err := validate.MaxLength("memoLine5", "body", string(*m.MemoLine5), 60); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MemoAddRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MemoAddRequest) UnmarshalBinary(b []byte) error {
	var res MemoAddRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
